%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 11.0.0
%%For: (Chris Chubb) (Chris Chubb Maps)
%%Title: (NJ_34_00 [Converted].ai)
%%CreationDate: 6/19/2006 12:31 PM
%%BoundingBox: 0 0 612 792
%%HiResBoundingBox: 0 0 611.8877 792
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentFonts: ArialMT
%%+ Arial-BoldItalicMT
%%DocumentNeededFonts: ArialMT
%%+ Arial-BoldItalicMT
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_typography_AI5 1.0 1
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%CMYKProcessColor: 1 1 1 1 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 3 () 
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: -1.7002 17.7802 612.2198 775.7002
%AI3_DocumentPreview: None
%AI5_ArtSize: 1296 1296
%AI5_RulerUnits: 0
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 3
%AI8_OpenToView: -315.5 729.5 1 1178 682 26 0 1 33 114 0 0
%AI5_OpenViewLayers: 777
%%PageOrigin:0 0
%AI7_GridSettings: 0.01 8 0.01 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI7_Thumbnail: 100 128 8
%%BeginData: 7772 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FDFCFFFDC3FFA7C9A6C9FD5FFFA0C8A6CEA6C8A7FD5CFFA6CDA7CE
%CECEA7C8A6FD5AFFA0CDA7CEA6CEA6CEA6CEA0C9A8FD56FFCAC8FD0ACEA6
%C9CAFD55FFA7A6CEA7CEA6CEA7CEA6CEA7CEA6C8A6FD54FFA6FD0DCEA7CE
%A6CAFD51FFA8C8A7CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6A7A8FD4FFFC9
%CDFD11CEA6C8A7FD4DFFC9A6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7
%CEA6CDA6CAFD4AFFCFA6FD15CEA7CEA6C9A8FD47FFA7A6CEA7CEA6CEA6CE
%A6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6A6A0FD45FFCF9FFD1DCEA6
%CAFD43FFA0C8A6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CE
%A6CEA7CEA7CEA6A6A7FD40FFA7FD22CEC8A6FD3EFFA7A6A6CEA6CEA6CEA6
%CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA7CEA0
%C9CAFD39FFCFA6FD27CEC8C8A7FD37FFC9A5CEA7CEA6CEA7CEA6CEA7CEA6
%CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7
%A6A8FD36FFA7C8A7FD29CEA6FD38FFA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6
%CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6C9FD
%38FFCFA6FD29CEA7FD39FFA7A6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CE
%A7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CFFD39FFCFC8A7
%FD26CEC8CFFD38FFCAFFA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CE
%A6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CDA7FD3AFFA0FD27CEA6FD
%3AFFA8C8A7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CE
%A6CEA7CEA6CEA7CEA6CEA7CEA6C9FD3AFFC9A6FD26CEC8CAFD38FFA0C8A6
%CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6
%CEA6CEA6CEA6CEA6CEA6FD38FFA6FD29CEA6FD39FFA7A6CEA7CEA6CEA7CE
%A6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CE
%A7CEA7C9CAFD38FFA6FD28CEC8A7FD38FFA8A6A6CEA6CEA6CEA6CEA6CEA6
%CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6C8A0
%FD3AFFA6FD27CEA6FD3AFFA8C8A7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7
%CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6C8A6C8A0CFFD3BFFA6FD23CE
%A7FFCFFD3CFFCAA6A6CEA7CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CE
%A6CEA6CEA6CEA6CEA6CEA6CEA6CFFD3FFFA6CEA6FD20CEC9CFFD3FFFCAA6
%CFA6C8A7CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7
%CEA7CEA0FD44FFA7FD1DCEA6FD45FFCFA6CEA6CEA6CEA6CEA6CEA6CEA6CE
%A6CEA6CEA6CEA6CEA6CEA6CEA6CEA6A7FD45FFCFFD1CCEC8CAFD45FFCFA6
%CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA6FD08
%FFCAA7FD3CFFA7FD1DCEA6CFA8CAA7FFFFFFCFA0CAFD3BFFCAA6CEA7CEA6
%CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6A69FC8A6
%A7A8FFA0A7FD3CFFC9A6C8C8FD1FCEA6C9A7C8A7FD3CFFA8CAA8A6A6CEA7
%CEA6CECECEA6CEA7CEA6CEA7CEA6CECECEA6CEA7CEA6CEA7CEA6CEA7CEA6
%CEA6C9FD3FFFCAC8A7FD21CEA7FD40FFA6CEA6CEA6A77CA7A7A7A6CEA7A7
%A6CECDA77CCEA7CE7CA7A7A7A6A7A7A7A6CEA6CEA6C9FD40FFC9A6CECECE
%A77D7DA77D7DA77D7CA7CECEA7A77D7D7DA7A77DA7A77DA77DA7FD04CEA7
%FD41FFCAA0CECEA77D7DA77D7CA77D7DA6CE7D7DA7A77DA7A7A77CA77D7D
%A77D7DCEA7CEA6C9FD42FFCFA6CECECEA7FD09CEA7CEA7CECECEA7FD05CE
%7DFD05CEA7FD43FFA7A6CEA6CEA6CEA7CEA6CEA6CEA6CEA6CEA6CEA6CEA6
%CEA6CEA6CEA6CEA6CEA6CAFD43FFCAC9C8FD1CCEC9CFFD44FFA8C9A6CEA6
%CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA6FD47FFC9
%C8FD19CEA6C9FD47FFA8A6A6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6
%CEA6CEA6CEA7C8A7FD48FFCAC8FD18CEA6FD48FFA8C9A6CEA6CEA7CEA6CE
%A7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7A6A8FD45FFC9A6C8A6FD19CEA7
%FD45FFA7A6CEA7CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CE
%A6CEA6C9FD42FFCFA7C9A6FD1DCECAFD41FFA7A6CEA6CEA6CEA7CEA6CEA7
%CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6FD40FFCAC9C8FD20
%CEC9CAFD3EFFA7A6A6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CE
%A6CEA6CEA6CEA6CEA6CEA6CEA6FD3EFFC9C8FD22CEC8C9FD3CFFCFA0C8A7
%CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6
%CEA7CEA6CEA7FD3CFFA6CEA7FD23CEA6CFFD3BFFA8C9A7CEA6CEA6CEA6CE
%A6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA7A6
%A8FD3CFFA7FD25CEA6FD3AFFCFC9A6C9A7CEA6CEA7CEA6CEA7CEA6CEA7CE
%A6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7C8A8FD36FFCFFF
%A7C9A6FD27CEA7FD34FFA8A6A6C8A6C8A6CEA7CEA6CEA6CEA6CEA6CEA6CE
%A6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6C9FD33
%FFCAC8C8FD2DCEC9FD32FFA7A6A7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7
%CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6
%C9FD31FFC9C8A6FD2FCEA7FD30FFA8A6A6CEA6CEA6CEA6CEA6CEA6CEA6CE
%A6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CE
%A6CEA6CEA6CFFD30FFCFA6FD30CEC9FD31FFA0CEA7CEA6CEA7CEA6CEA7CE
%A6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CE
%A7CEA6CEA7CEA7C8A7FD30FFA7CDFD30CEA6FD30FFA8C8A6CEA6CEA6CEA6
%CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6
%CEA6CEA6CEA6CEA6CEA6CEA6C9FD30FFC9C8FD30CEC9FD30FFC9A6CEA7CE
%A6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CE
%A7CEA6CEA7CEA6CEA7CEA6CEA7CEA7C8A8FD30FFA7CDA7FD2FCEA6FD32FF
%A0C8A6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CE
%A6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CFFD33FFA6FD2DCEC8C9FD
%33FFA7C8A7CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CE
%A7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6A6FD34FFCFC8FD2CCEC8A8
%FD34FFA0CEA7CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6
%CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6C8A7FD34FFCFC8FD2CCEA7FD
%36FFA7C8A6CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CE
%A6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6C9FD37FFCAC9A6FD28CEC8CAFD
%39FFA6A6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6
%CEA6CEA6CEA6CEA6CEA6CEA6C8A7FD3AFFCAC8FD25CEC8A7FD3CFFA8A6A6
%CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7
%CEA6CEA7A6A7FD3EFFCAC8A6FD1FCEA6C8A7FD40FFA8CAA6CEA7CEA6CEA6
%CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6A7A8FD43FFC9
%A6FD1BCEA6CFFD45FFA8C9A7C8A7CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6
%CEA7CEA6CEA7CEA0FD4AFFA6C8A7FD15CEA6CFFD4BFFA7A6A6CEA7CEA6CE
%A6CEA6CEA6CEA6CEA6CEA6CEA7CEA0FD4EFFA7CECECEA6FD0FCEA6FD4FFF
%CAA6C9A6C9A0C8A6CEA7CEA7CEA6CEA7CEA6CEA6CAFD50FFC9A7FFFFFFA7
%CEA7C8A6FD07CEA6C9FD59FFA8A7A6CEA6CEA6CEA7A6A8FD5BFFC9FD06CE
%A7FD5BFFCFA6CEA7CEA6CEA6FD5CFFA7FD05CEA7C8FD5BFFA8C8A6CEA6CE
%A7A6A7FD5BFFCFA6FD05CEA7FD5CFFA0CEA7CEA6CEA6FD5CFFA7CDA7CECE
%CEA6CFFD0EFFA8FD07FFA8FD0FFFA8FD35FFC9A6CEA6CEA6A6A8FD05FF27
%FD06FF7D527D52FD05FF7D2752FD0EFF7D277D7D27527D52A8FD2DFFA6CE
%CECECDC9CAFD06FFA8FD06FFFD04A8FD05FFA87DA8FD0EFFA87DA8A87DA8
%7D7DA8FD2CFFA8C8A7CEA6C8FD5FFFA6C9A6C9CFFD09FFA8FFA8A8A8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8A8A8FFA8A8FD35FF
%A8FD0BFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FDFCFFFDFCFFFDFCFFFD38FFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 1
%%CreationDate:(6/10/1996) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 68 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/havefont
{
	systemdict /languagelevel known
		{
		/Font resourcestatus dup
			{ exch pop exch pop }
		if
		}
		{
		systemdict /FontDirectory get 1 index known
			{ pop true }
			{
			systemdict /fileposition known
				{
				dup length 6 add exch
				Ss 6 250 getinterval
				cvs pop
				Ss exch 0 exch getinterval
				status
					{ pop pop pop pop true }
					{ false }
				ifelse
				}
				{
				pop false
				}
			ifelse
			}
		ifelse
		}
	ifelse
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
/subststring {
	exch 2 index exch search
	{
		exch pop
		exch dup () eq
		{
			pop exch concatstring
		}
		{
			3 -1 roll
			exch concatstring
			concatstring
		} ifelse
		exch pop true
	}
	{
		pop pop false
	} ifelse
} def
/concatstring {
	1 index length 1 index length
	1 index add
	string
	dup 0 5 index putinterval
	dup 2 index 4 index putinterval
	4 1 roll pop pop pop
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	2 index havefont
	{
		3 index
		255 string
		cvs
		
		dup
		(_Symbol_)
		eq
		{
			pop
			2 index
			findfont
			
		}
		{
			1 index 0 eq
			{
				dup length 1 sub
				1 exch
				getinterval
				
				cvn
				findfont
			}
			{
				pop 2 index findfont
			} ifelse
		} ifelse
	}
	{
		dup 1 eq
		{
			2 index 64 string cvs
			dup (-90pv-RKSJ-) (-83pv-RKSJ-) subststring
			{
				exch pop dup havefont
				{
					findfont false
				}
				{
					pop true
				} ifelse
			}
			{
				pop	dup
				(-90ms-RKSJ-) (-Ext-RKSJ-) subststring
				{
					exch pop dup havefont
					{
						findfont false
					}
					{
						pop true
					} ifelse
				}
				{
					pop pop true
				} ifelse
			} ifelse
			{
				1 index 1 eq
				{
					/Ryumin-Light-Ext-RKSJ-V havefont
					{/Ryumin-Light-Ext-RKSJ-V}
					{/Courier}
					ifelse
				}
				{
					/Ryumin-Light-83pv-RKSJ-H havefont
					{/Ryumin-Light-83pv-RKSJ-H}
					{/Courier}
					ifelse
				} ifelse
				findfont
				[1 0 0.5 1 0 0] makefont
			} if
		}
		{
			/Courier findfont
		} ifelse
	} ifelse
	_wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 10 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontScript exch def
	/FontDirection exch def
	/FontRequest exch def
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
W B
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
W F 
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
W S
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat
	_shift aload pop _lineorientation 1 eq { exch } if translate
	_scale aload pop _lineorientation 1 eq _yokoorientation 1 eq or { exch } if scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	1 index type /nametype eq
	{
		dup 0.75 mul 1 index 0.25 mul neg
	} if
	/_fontDescent exch ddef
	/_fontAscent exch ddef
	/_fontSize exch ddef
	/_fontRotateAdjust _fontAscent _fontDescent add 2 div neg ddef
	/_fontHeight _fontSize ddef
	findfont _fontSize scalefont setfont
} def
/Tl
{
	pop neg 0 exch
	_leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	0 exch
	_shift astore pop
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	count 1 eq { 100 } if
	100 div exch 100 div exch
	_scale astore pop
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Tg
{
	pop
} def
/TG
{
	pop
} def
/Tv
{
	/_lineorientation exch ddef
} def
/TV
{
	/_charorientation exch ddef
} def
/Ty
{
	dup /_yokoorientation exch ddef 1 sub neg Tv
} def
/TY
{
	pop
} def
/T~
{
	Tx
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	_fontSize mul 1000 div
	_lineorientation 0 eq { neg 0 } { 0 exch } ifelse
	rmoveto
	pop
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	Td
} def
/T*-
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	exch neg exch neg
	Td
} def
/T-
{
	_ax neg 0 rmoveto
	_lineorientation 1 eq _charorientation 0 eq and { 1 TV _hyphen Tx 0 TV } { _hyphen Tx } ifelse
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ findfont _fontSize scalefont setfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%
/X^
{
	currentfont 5 1 roll
	dup havefont
		{
		findfont _fontSize scalefont setfont
		}
		{
		pop
		exch
		} ifelse
	2 index 0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	pop	pop
	setfont
} def
/T^	/X^	load def
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: ArialMT
%%IncludeFont: Arial-BoldItalicMT
userdict /_useSmoothShade false put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 128/Euro 130/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE 145/quoteleft
/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark
/scaron/guilsinglright/oe/dotlessi 159/Ydieresis /space 164/currency 166/brokenbar
168/dieresis/copyright/ordfeminine 172/logicalnot/hyphen/registered/macron/ring
/plusminus/twosuperior/threesuperior/acute/mu 183/periodcentered/cedilla
/onesuperior/ordmasculine 188/onequarter/onehalf/threequarters 192/Agrave
/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute
/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave
/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute
/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex
/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute
/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
TE
%AI55J_Tsume: None
%AI3_BeginEncoding: _ArialMT ArialMT
[/_ArialMT/ArialMT 0 0 0 TZ%AI3_EndEncoding TrueType
%AI55J_Tsume: None
%AI3_BeginEncoding: _Arial-BoldItalicMT Arial-BoldItalicMT
[/_Arial-BoldItalicMT/Arial-BoldItalicMT 0 0 0 TZ%AI3_EndEncoding TrueType
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Registration]) 0 Xs
([Registration]) Pc
0 0 0.4 0.05 k
(C=0 M=0 Y=40 K=5) Pc
0.34 0.56 1 0 k
(C=34 M=56 Y=100 K=0) Pc
0 0 0 0 k
(C=0 M=0 Y=0 K=0) Pc
0 0 0 0.49 k
(C=0 M=0 Y=0 K=49) Pc
0 0 0 1 k
(C=0 M=0 Y=0 K=100) Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 100 Lb
(State) Ln
0 A
q
0 J 0 j 1 w 4 M []0 d0 XR
6.7188 7.1201 m
6.7188 779.7588 l
603.4893 779.7588 l
603.4893 7.1201 l
6.7188 7.1201 l
h
W
n
0 O
0 0 0.4 0.05 k
1 J 1 j 1.1998 w 3.85 M135.335 304.9902 m
135.0952 304.9902 l
135.0952 305.2305 l
136.2949 306.4307 l
137.4946 307.8711 l
137.9746 307.8711 l
140.1343 309.0703 l
144.9336 311.4707 l
142.7739 313.1514 l
144.9336 314.5908 l
145.4136 314.8311 l
146.1333 315.3115 l
146.6133 315.5518 l
148.293 316.9922 l
150.2124 318.4316 l
150.9321 319.1523 l
151.8921 319.8721 l
152.6118 320.5918 l
153.5718 321.3125 l
156.2114 323.7129 l
156.4512 324.1924 l
157.4111 324.6729 l
157.8911 324.9121 l
158.6108 325.3926 l
159.0908 325.6318 l
159.3311 325.873 l
159.5708 325.873 l
161.9702 326.5928 l
163.6499 326.832 l
164.6099 326.832 l
164.8496 326.832 l
165.0898 326.832 l
166.5293 327.0732 l
168.4492 326.832 l
168.9292 326.5928 l
170.3687 326.5928 l
171.3286 326.5928 l
171.5684 326.5928 l
174.9277 326.5928 l
175.168 326.5928 l
175.4077 326.5928 l
178.5273 327.3125 l
181.6465 328.0322 l
183.3262 328.7529 l
184.7661 329.2324 l
186.686 329.9531 l
189.0854 331.3936 l
191.2451 333.5527 l
192.4448 334.5137 l
192.4448 334.7529 l
193.8843 335.7129 l
194.8442 335.9531 l
195.0845 335.9531 l
197.0039 336.1934 l
202.5229 336.1934 l
203.7227 336.6738 l
204.4424 337.1533 l
204.9224 337.874 l
205.8823 339.3145 l
206.3623 340.0342 l
207.082 341.2344 l
207.3223 342.6738 l
207.3223 343.3945 l
207.562 344.5947 l
207.562 345.3145 l
207.3223 345.7939 l
207.082 346.2744 l
206.8423 346.7549 l
206.6021 347.4746 l
206.1221 348.6748 l
206.1221 349.1543 l
206.1221 349.875 l
205.8823 350.835 l
205.8823 351.0752 l
205.8823 352.9951 l
205.8823 353.9561 l
205.8823 354.4355 l
205.8823 354.915 l
206.1221 355.1563 l
206.1221 355.3955 l
206.1221 355.6357 l
206.3623 356.5957 l
206.6021 357.0762 l
207.3223 358.2754 l
207.3223 358.5156 l
207.562 358.5156 l
208.042 358.9961 l
208.2817 359.2354 l
208.522 359.4766 l
209.7217 360.1963 l
211.1611 361.1563 l
212.1211 361.6357 l
215.4805 362.8359 l
216.6802 363.0762 l
220.2798 364.7559 l
220.9995 365.4766 l
221.4795 365.9561 l
221.7192 366.1973 l
222.9189 367.6367 l
223.3989 368.1172 l
224.8389 371.2373 l
225.0786 371.7168 l
226.0386 372.918 l
226.9985 373.6367 l
227.4785 373.877 l
227.7183 374.1172 l
227.958 374.1172 l
229.8779 374.8379 l
230.1177 374.8379 l
232.0376 375.5576 l
232.9976 376.0371 l
233.2373 376.0371 l
233.4771 376.0371 l
233.7173 376.2773 l
234.1973 376.5176 l
234.917 376.998 l
236.1167 378.1982 l
238.9961 381.0781 l
239.4761 381.7979 l
239.7163 382.0381 l
240.1958 382.7578 l
240.6758 383.2383 l
242.3555 384.4385 l
244.0352 385.6387 l
245.2349 386.1191 l
248.5942 388.2783 l
249.0742 388.5186 l
251.4741 389.959 l
251.9541 390.1992 l
252.9136 390.4395 l
253.3936 390.6797 l
253.6338 390.6797 l
253.6338 390.9189 l
254.3535 390.9189 l
256.5132 390.4395 l
256.9932 390.6797 l
258.4326 391.1592 l
259.3926 391.3994 l
261.792 392.1191 l
263.4717 393.0801 l
266.1113 393.7988 l
267.311 394.04 l
267.791 394.5195 l
268.0308 394.7598 l
268.5107 395.9595 l
268.9907 396.6797 l
269.4707 397.1597 l
269.9507 397.6396 l
270.1904 397.8799 l
270.6704 398.1201 l
270.9102 398.1201 l
271.1504 398.3599 l
271.8701 398.6001 l
273.0698 399.5601 l
273.79 400.2803 l
274.0298 401.2402 l
274.2695 402.6802 l
274.7495 403.8804 l
274.7495 404.1206 l
274.9897 404.6006 l
275.2295 405.0806 l
275.7095 406.2808 l
276.6694 407.001 l
277.3892 407.2407 l
277.8691 407.2407 l
278.8291 407.001 l
279.3086 406.7607 l
280.5088 406.2808 l
281.4683 405.8008 l
283.6279 405.3208 l
284.1079 405.0806 l
284.5879 405.0806 l
284.8276 405.0806 l
285.5479 405.3208 l
286.9873 406.521 l
288.4272 407.7207 l
289.8667 408.6812 l
290.8267 409.1611 l
291.3066 409.1611 l
291.5464 409.4009 l
291.7866 409.4009 l
293.7061 409.1611 l
294.4263 409.1611 l
294.9058 409.4009 l
298.2656 412.5215 l
298.5054 413.0015 l
298.9854 413.7217 l
299.2251 414.9219 l
299.2251 416.1216 l
298.9854 416.8418 l
296.5859 420.9224 l
295.626 421.8823 l
294.186 422.8423 l
292.5063 423.5625 l
292.2666 423.5625 l
291.7866 424.0425 l
291.5464 424.5225 l
291.3066 425.2427 l
290.5869 427.6431 l
290.5869 427.8828 l
290.5869 428.123 l
289.627 429.563 l
289.147 430.7632 l
288.9072 431.2432 l
288.4272 432.6836 l
288.187 432.6836 l
288.187 432.9233 l
286.7476 433.8838 l
286.7476 434.1235 l
286.5073 434.1235 l
286.0278 434.6035 l
285.7876 434.6035 l
285.5479 435.0835 l
285.3076 435.3237 l
284.8276 435.3237 l
284.5879 435.8037 l
284.1079 436.0439 l
282.6685 437.0039 l
281.4683 437.7241 l
277.3892 439.644 l
276.4292 440.6045 l
275.9492 440.8442 l
273.5498 442.0444 l
272.3501 443.2446 l
271.3901 445.6445 l
269.9507 448.7651 l
269.2305 451.1655 l
268.271 453.0854 l
267.311 455.0059 l
266.5913 456.2061 l
263.7119 459.3262 l
263.2319 459.8062 l
262.5117 460.5264 l
262.272 460.7661 l
261.312 461.4863 l
260.3525 462.2065 l
259.1523 462.2065 l
258.6729 462.2065 l
257.4727 462.6865 l
255.5532 464.3667 l
253.6338 466.2871 l
253.3936 466.2871 l
251.9541 467.4868 l
250.5142 468.9272 l
249.7944 469.8872 l
249.7944 470.1274 l
249.3145 471.5674 l
249.3145 472.2876 l
249.3145 473.9678 l
249.3145 474.4478 l
248.5942 476.6079 l
247.8745 479.248 l
247.6348 479.9683 l
247.3945 480.2085 l
246.6748 482.1284 l
245.2349 485.729 l
244.9951 486.209 l
244.5151 486.4487 l
244.0352 486.9287 l
241.8755 487.8892 l
241.396 488.1289 l
241.1558 488.1289 l
241.1558 488.3691 l
240.6758 488.6094 l
240.436 488.8491 l
240.1958 488.8491 l
240.1958 489.0894 l
239.7163 489.5693 l
238.0366 490.0493 l
237.5566 490.0493 l
236.5967 489.3291 l
233.4771 488.3691 l
231.7974 488.1289 l
231.5576 488.1289 l
231.0776 488.1289 l
230.8379 488.1289 l
230.5977 488.3691 l
229.8779 488.6094 l
229.1582 489.0894 l
228.918 489.3291 l
227.958 490.0493 l
227.7183 490.5293 l
227.4785 490.5293 l
227.2383 490.7695 l
226.7583 491.2495 l
226.2783 491.2495 l
225.0786 491.7295 l
224.8389 491.7295 l
224.5986 491.9697 l
224.3589 492.2095 l
224.1191 492.4497 l
223.8789 492.9297 l
223.8789 493.1694 l
223.6392 493.4097 l
223.6392 493.8896 l
223.1592 497.0098 l
222.1992 501.3306 l
221.4795 503.2505 l
221.4795 503.4907 l
221.9595 505.1709 l
222.1992 505.6509 l
222.4395 506.1309 l
222.1992 506.1309 l
222.1992 507.0908 l
222.1992 508.5313 l
222.9189 509.4912 l
223.3989 510.9316 l
223.6392 512.3716 l
223.3989 513.8115 l
223.3989 514.5317 l
222.9189 517.6523 l
222.6792 519.5723 l
222.6792 521.4927 l
222.6792 521.9727 l
222.9189 523.8926 l
222.6792 527.0132 l
222.4395 527.9731 l
222.1992 528.6934 l
220.0396 530.3735 l
218.8398 532.0537 l
218.1201 532.7734 l
216.2002 535.1738 l
215.2407 536.1338 l
215.0005 536.374 l
212.8408 537.0942 l
211.4014 537.814 l
210.2017 538.0542 l
207.082 538.5342 l
206.8423 538.5342 l
206.3623 538.5342 l
205.8823 538.5342 l
205.6426 538.2939 l
205.1626 538.0542 l
204.6826 537.814 l
204.4424 537.5742 l
204.2026 537.334 l
202.2827 535.6538 l
202.043 535.6538 l
201.3232 535.1738 l
200.3633 535.1738 l
199.8833 535.1738 l
199.4033 535.4141 l
198.6836 535.4141 l
198.4438 535.4141 l
198.2036 535.6538 l
197.0039 536.1338 l
196.7642 536.1338 l
196.5239 536.374 l
196.2842 536.6143 l
195.8042 536.854 l
195.3242 537.334 l
194.6045 538.2939 l
194.3643 538.7744 l
194.1245 539.4941 l
194.1245 539.7344 l
194.1245 540.4546 l
194.3643 540.6943 l
194.8442 541.6543 l
195.0845 541.8945 l
195.0845 542.8545 l
195.3242 542.8545 l
195.0845 543.0947 l
195.0845 543.335 l
195.0845 543.5747 l
195.0845 543.8149 l
194.8442 546.4551 l
193.8843 547.6553 l
193.8843 548.375 l
193.4048 549.0952 l
192.6846 550.0552 l
192.6846 550.7754 l
192.9248 551.0156 l
193.6445 551.4956 l
195.0845 551.4956 l
195.564 551.9756 l
195.564 552.2158 l
195.564 552.9355 l
195.3242 555.8159 l
195.0845 556.7759 l
194.8442 557.7363 l
194.6045 557.9761 l
194.6045 558.2163 l
192.9248 559.4165 l
193.1646 560.1362 l
193.8843 561.8164 l
195.0845 563.4966 l
195.3242 563.7368 l
195.8042 564.457 l
197.0039 564.937 l
197.2437 565.417 l
197.4839 565.6572 l
197.4839 565.897 l
197.7236 566.377 l
198.2036 566.8569 l
198.4438 567.8174 l
198.2036 568.2974 l
198.2036 568.5371 l
197.9639 568.5371 l
197.7236 568.7773 l
197.4839 568.7773 l
197.4839 569.0176 l
197.2437 569.0176 l
197.0039 569.0176 l
196.7642 569.0176 l
195.564 569.0176 l
195.3242 569.0176 l
193.8843 569.4976 l
192.9248 570.6973 l
192.9248 570.9375 l
192.9248 571.1777 l
192.6846 571.4175 l
192.6846 571.8975 l
192.4448 572.6177 l
192.6846 573.3379 l
192.6846 573.5776 l
193.1646 575.2578 l
193.6445 576.458 l
193.6445 576.938 l
194.1245 578.1382 l
194.6045 579.0981 l
194.8442 579.3384 l
194.8442 579.5781 l
195.564 580.2983 l
196.2842 581.9785 l
196.5239 581.9785 l
196.5239 582.2188 l
196.5239 582.4585 l
197.2437 583.6587 l
197.2437 584.1387 l
197.2437 584.8589 l
196.7642 585.5791 l
196.5239 585.5791 l
196.5239 585.8188 l
196.2842 586.0591 l
195.564 586.7793 l
194.3643 588.2192 l
194.1245 588.6992 l
194.1245 589.6592 l
194.1245 590.1396 l
194.3643 590.3794 l
195.3242 591.3398 l
197.2437 592.2998 l
197.9639 593.0195 l
198.4438 593.7397 l
198.6836 594.9399 l
198.9233 596.1401 l
199.1636 596.8604 l
199.4033 597.1001 l
199.6436 597.3403 l
199.6436 597.5801 l
200.1235 597.8203 l
201.083 597.8203 l
201.563 597.8203 l
202.2827 597.5801 l
204.6826 596.6201 l
206.8423 596.3799 l
208.042 596.3799 l
208.2817 596.6201 l
208.7617 597.1001 l
209.4814 598.3003 l
209.9614 599.5005 l
210.4414 600.2207 l
211.4014 600.7007 l
211.6411 600.7007 l
211.8813 600.9404 l
212.1211 600.9404 l
213.0811 601.1807 l
213.3208 601.1807 l
213.8008 601.4204 l
215.4805 604.061 l
215.7207 604.3008 l
215.7207 605.021 l
215.4805 605.7412 l
215.7207 606.2212 l
216.2002 606.9414 l
216.6802 607.6611 l
217.8799 608.6211 l
219.0801 610.5415 l
219.3198 611.0215 l
219.3198 611.2617 l
219.3198 611.9814 l
219.3198 612.2217 l
219.0801 612.4619 l
219.0801 612.7017 l
218.6001 613.1816 l
216.9204 614.8618 l
216.4404 615.582 l
216.2002 616.062 l
216.2002 616.542 l
216.4404 617.0225 l
216.6802 617.7422 l
217.8799 618.4624 l
220.9995 618.4624 l
221.7192 618.2222 l
222.1992 617.7422 l
223.3989 617.9824 l
223.6392 617.9824 l
224.5986 619.4224 l
226.0386 621.3428 l
226.2783 621.3428 l
226.2783 622.0625 l
226.5186 622.7827 l
226.7583 623.0229 l
226.7583 623.7427 l
226.5186 624.4629 l
226.5186 624.9429 l
226.0386 625.4229 l
225.0786 626.623 l
224.3589 628.063 l
223.8789 628.5435 l
223.6392 629.0234 l
221.7192 630.9434 l
221.2393 631.4238 l
221.2393 631.9038 l
221.4795 633.3438 l
221.2393 635.2642 l
220.9995 635.9839 l
220.9995 636.4639 l
220.5195 636.9443 l
220.5195 637.1841 l
218.8398 638.6245 l
218.3599 639.1045 l
216.9204 640.3047 l
216.4404 641.0244 l
215.9604 641.9849 l
214.7607 643.9048 l
214.5205 644.8652 l
213.3208 647.2651 l
212.1211 648.7056 l
211.8813 649.6655 l
211.6411 651.3457 l
211.6411 651.5859 l
211.4014 652.0654 l
211.6411 652.7861 l
211.4014 653.2656 l
211.4014 653.5059 l
210.9214 653.7456 l
209.4814 653.5059 l
209.002 653.5059 l
208.522 653.9858 l
208.2817 654.9463 l
208.2817 655.666 l
208.7617 656.626 l
209.002 657.3462 l
209.002 658.0664 l
209.002 659.2666 l
209.2417 659.7466 l
209.2417 659.9863 l
209.7217 660.2266 l
209.9614 660.4668 l
209.9614 660.7065 l
210.9214 661.4268 l
213.8008 663.1069 l
214.041 663.5869 l
215.9604 664.3071 l
216.2002 664.5469 l
216.9204 665.0273 l
217.1602 665.0273 l
217.6401 665.7471 l
218.1201 665.9873 l
218.3599 666.2271 l
218.3599 666.707 l
220.2798 667.4272 l
221.7192 667.4272 l
222.6792 667.9072 l
228.438 671.2676 l
229.3979 671.748 l
230.5977 673.188 l
231.5576 673.668 l
232.5176 673.9082 l
232.7573 674.1479 l
232.5176 675.3481 l
232.5176 675.8281 l
233.957 677.748 l
234.437 678.4688 l
234.917 679.4287 l
234.917 680.1484 l
235.6367 681.5889 l
235.877 682.0688 l
236.8364 682.0688 l
238.5161 683.9893 l
239.4761 684.709 l
240.6758 685.1895 l
242.1157 685.4292 l
244.7554 687.1094 l
245.2349 687.8291 l
245.7148 689.5093 l
245.7148 689.7495 l
245.7148 689.9897 l
245.4751 690.2295 l
245.2349 690.2295 l
244.5151 690.2295 l
243.7954 689.7495 l
242.5957 688.5498 l
241.8755 688.3096 l
241.6357 688.0693 l
240.916 688.0693 l
240.436 688.0693 l
240.1958 688.3096 l
240.1958 689.2695 l
242.3555 693.8301 l
242.8354 694.5498 l
244.2754 695.27 l
245.2349 695.5103 l
245.9551 695.5103 l
246.1948 695.75 l
250.0342 698.3906 l
250.0342 698.6304 l
250.0342 699.1104 l
250.5142 699.8306 l
253.6338 701.2705 l
255.3135 702.4707 l
259.3926 707.7515 l
260.1123 709.4316 l
260.3525 710.1514 l
260.5923 710.6318 l
262.9917 712.792 l
264.4316 714.9521 l
265.3916 716.8721 l
265.3916 717.8325 l
266.3511 720.2324 l
266.8311 720.9526 l
266.8311 721.4326 l
267.791 723.1133 l
269.4707 725.7529 l
269.4707 726.2334 l
269.7104 726.4736 l
269.2305 727.1934 l
268.0308 728.3936 l
267.791 728.6333 l
268.0308 730.0737 l
268.9907 731.5137 l
269.2305 732.7139 l
270.1904 734.874 l
270.4307 735.1143 l
270.6704 735.354 l
271.8701 735.5942 l
272.3501 736.0742 l
272.5898 736.5542 l
272.8301 737.5146 l
272.5898 738.4746 l
272.5898 738.7148 l
272.5898 738.9546 l
273.79 741.355 l
274.0298 742.3149 l
274.2695 742.7949 l
274.2695 743.0352 l
274.7495 743.7549 l
275.2295 744.2354 l
276.1895 745.915 l
277.8691 748.0752 l
279.3086 748.5557 l
280.0288 749.2754 l
281.2285 750.7158 l
284.3481 752.876 l
284.5879 753.1162 l
284.3481 753.8359 l
283.8682 755.0361 l
283.6279 755.0361 l
283.8682 755.7563 l
284.5879 756.2363 l
284.8276 756.4761 l
285.3076 756.4761 l
285.5479 756.7163 l
286.5073 756.7163 l
286.7476 756.7163 l
287.7075 756.7163 l
288.4272 756.7163 l
288.4272 756.9565 l
288.667 756.9565 l
288.9072 756.9565 l
289.147 756.9565 l
289.3872 757.1963 l
290.1069 758.1563 l
290.3467 758.3965 l
290.5869 758.6367 l
290.8267 758.877 l
290.8267 759.3564 l
291.3066 760.3169 l
291.5464 761.2769 l
291.5464 761.5166 l
292.5063 762.957 l
292.9863 762.957 l
293.2261 763.1973 l
293.7061 763.1973 l
297.0654 763.1973 l
298.0254 763.1973 l
300.1851 763.437 l
303.0645 765.1172 l
303.7842 765.3574 l
304.7441 765.5972 l
305.9438 766.5576 l
306.1841 766.3174 l
306.4238 766.0771 l
308.1035 765.1172 l
310.5029 763.6772 l
313.1426 761.9971 l
316.0225 760.3169 l
317.7021 759.3564 l
325.1406 754.7959 l
332.5791 750.2358 l
335.2188 748.5557 l
335.459 748.5557 l
335.6982 748.3154 l
336.4189 747.8354 l
340.7383 745.1953 l
343.1367 743.5151 l
348.8965 740.1548 l
353.9355 737.0342 l
355.1348 736.3145 l
355.8555 735.834 l
358.2539 734.394 l
362.0938 731.9941 l
364.2529 730.3135 l
365.4531 729.5938 l
365.9336 729.3535 l
366.1729 729.1133 l
366.4131 729.1133 l
367.6133 728.1533 l
367.8525 728.1533 l
374.5713 723.5928 l
375.0518 723.353 l
375.5313 723.1133 l
376.4912 722.3931 l
377.4512 721.9126 l
378.4102 721.4326 l
380.8105 719.9927 l
382.25 719.0327 l
383.21 718.3125 l
383.6895 718.0723 l
386.5693 716.3921 l
388.249 715.4321 l
388.249 715.1919 l
392.5684 712.5522 l
397.3672 709.6714 l
405.5254 704.8711 l
407.4453 703.9111 l
407.6855 703.6709 l
412.2441 701.2705 l
413.4443 700.5508 l
416.3232 699.1104 l
418.9629 697.6704 l
423.2822 695.0303 l
423.5225 695.0303 l
424.002 694.79 l
424.2422 694.5498 l
426.1621 693.5898 l
426.1621 693.3501 l
426.6416 693.1099 l
426.8818 693.1099 l
427.8418 692.3896 l
430.7207 690.9497 l
431.2012 690.7095 l
431.2012 690.4697 l
432.1602 689.9897 l
432.6406 689.7495 l
432.8809 689.5093 l
434.5605 688.5498 l
435.7607 687.8291 l
436.4805 687.5894 l
437.6797 686.8691 l
437.9199 686.6294 l
438.8789 686.1494 l
441.2793 684.709 l
441.7598 684.4692 l
443.4395 683.5088 l
444.3984 683.0288 l
446.3184 681.8291 l
446.7979 681.5889 l
447.2783 681.1084 l
447.7578 680.8687 l
447.998 680.8687 l
450.3975 679.4287 l
451.1172 678.9482 l
451.3574 678.9482 l
452.0771 678.4688 l
453.7568 677.5083 l
453.9971 677.2686 l
456.3965 675.8281 l
456.6357 675.8281 l
459.5156 674.1479 l
460.7158 673.4282 l
464.5547 671.2676 l
466.7148 669.8276 l
468.3936 668.8672 l
469.834 668.1475 l
470.0732 667.9072 l
471.5137 667.1875 l
472.9531 666.2271 l
476.793 664.0669 l
477.2725 663.8271 l
478.9521 662.8667 l
479.9121 661.9067 l
480.3926 661.6665 l
481.1113 661.6665 l
483.0313 661.6665 l
482.3115 657.1064 l
481.8311 655.186 l
480.6318 650.1455 l
480.1523 648.2251 l
479.4316 645.3452 l
478.9521 643.665 l
478.2324 640.5449 l
477.752 638.8643 l
477.752 638.3843 l
477.5127 637.4243 l
477.2725 637.1841 l
475.833 631.9038 l
475.3535 630.2236 l
474.3936 628.063 l
473.4326 625.9033 l
471.2734 621.1025 l
470.3145 618.9424 l
469.834 617.9824 l
467.9141 611.7417 l
467.4346 610.7817 l
466.9551 610.0615 l
466.7148 610.0615 l
464.7949 606.4609 l
463.835 604.541 l
463.1152 603.1006 l
461.6758 600.4604 l
461.4355 599.9805 l
460.9561 598.7803 l
460.2354 597.5801 l
459.7559 596.8604 l
459.5156 596.3799 l
457.8359 593.2598 l
457.1162 591.8198 l
456.877 591.0996 l
455.916 586.2988 l
455.6768 584.6191 l
455.4365 583.4189 l
455.1973 583.1787 l
455.1973 582.6987 l
455.1973 582.2188 l
455.1973 581.9785 l
454.9561 581.4985 l
454.9561 580.5386 l
454.7168 579.3384 l
454.7168 579.0981 l
454.7168 578.6182 l
454.4766 577.418 l
451.3574 577.6582 l
451.1172 577.418 l
450.877 577.1782 l
450.3975 576.458 l
450.3975 576.2178 l
448.4785 573.3379 l
447.5186 572.6177 l
447.0381 572.1377 l
444.8779 570.4575 l
444.3984 569.9775 l
444.1582 569.7373 l
443.4395 569.0176 l
441.7598 567.0972 l
441.5186 566.8569 l
441.2793 566.1372 l
440.5586 564.457 l
440.0801 562.7769 l
440.5586 561.0967 l
439.1191 559.8965 l
436 559.1763 l
435.04 558.9365 l
433.3604 558.6963 l
432.1602 558.4561 l
430.2412 557.9761 l
428.3223 557.4961 l
428.0811 557.4961 l
424.2422 558.2163 l
419.6826 558.9365 l
418.7227 558.6963 l
418.2432 558.4561 l
418.2432 558.2163 l
418.0029 557.9761 l
417.5234 557.4961 l
416.3232 556.0562 l
415.3643 554.856 l
415.124 554.376 l
414.8838 551.7354 l
414.6436 550.0552 l
414.4043 547.1753 l
414.1641 543.8149 l
413.9238 541.8945 l
413.9238 541.4146 l
413.6836 538.5342 l
413.6836 538.2939 l
412.9648 535.894 l
412.2441 533.7339 l
411.5244 532.7734 l
409.125 533.2539 l
408.6445 533.2539 l
404.8057 530.6133 l
404.3262 528.4531 l
404.3262 527.7329 l
405.0459 524.3726 l
405.2852 522.2124 l
404.0859 520.5322 l
402.8857 518.8521 l
402.4063 518.3721 l
401.6865 517.4121 l
401.4463 517.1719 l
400.9668 516.4521 l
400.7266 516.2119 l
400.4863 515.7319 l
400.0068 514.5317 l
399.5273 512.6113 l
399.7666 511.8916 l
399.7666 511.4116 l
400.2461 509.9712 l
400.7266 507.811 l
400.7266 507.5713 l
401.9268 505.6509 l
402.8857 505.4106 l
403.3662 505.1709 l
407.6855 503.7305 l
410.5645 502.0503 l
413.6836 500.6104 l
413.6836 500.1304 l
414.4043 498.6899 l
414.4043 498.21 l
413.9238 497.73 l
414.1641 497.25 l
415.3643 498.21 l
416.8037 498.6899 l
417.0439 498.9302 l
417.7637 499.4102 l
418.4834 500.6104 l
421.3633 503.0107 l
421.3633 502.7705 l
421.3633 501.3306 l
420.8828 500.8506 l
421.3633 500.3701 l
422.5625 501.5703 l
423.043 501.0903 l
423.2822 500.6104 l
423.7617 501.0903 l
424.002 501.0903 l
425.2021 500.6104 l
426.1621 500.8506 l
426.4023 500.6104 l
426.4023 500.8506 l
427.3613 501.3306 l
428.5615 501.5703 l
429.2813 502.5308 l
429.5215 502.7705 l
430.002 503.0107 l
430.2412 503.0107 l
430.4814 502.7705 l
431.2012 502.5308 l
431.6816 502.0503 l
431.9209 501.8105 l
432.6406 501.3306 l
433.1201 501.0903 l
434.3203 500.3701 l
437.4395 499.4102 l
439.8398 498.4502 l
440.0801 498.4502 l
440.7988 498.21 l
442.2393 497.4902 l
443.4395 496.77 l
445.3584 495.0898 l
445.8379 494.8496 l
446.7979 494.1299 l
446.7979 493.8896 l
447.0381 493.8896 l
447.2783 493.6494 l
448.2383 493.1694 l
448.4785 493.1694 l
449.6777 492.4497 l
452.3174 491.9697 l
459.0361 490.2891 l
459.9951 490.2891 l
460.7158 490.2891 l
461.4355 492.6895 l
461.915 496.29 l
462.1553 499.6504 l
461.6758 500.8506 l
459.0361 505.8906 l
458.5566 506.1309 l
456.3965 508.0513 l
456.3965 508.771 l
457.1162 509.251 l
458.7959 509.0112 l
459.5156 508.291 l
461.1953 507.0908 l
465.2754 498.9302 l
465.5146 489.5693 l
465.9941 486.9287 l
466.4746 482.8486 l
466.9551 478.7681 l
466.9551 475.8877 l
466.9551 471.8076 l
466.9551 471.3271 l
466.7148 469.4072 l
466.4746 467.2471 l
466.2344 464.3667 l
465.9941 461.9663 l
465.9941 461.7266 l
465.7549 460.0464 l
465.7549 458.3662 l
465.7549 457.646 l
465.5146 456.2061 l
465.0352 453.8057 l
464.7949 451.8853 l
464.5547 450.9253 l
464.0752 449.2451 l
464.0752 448.2852 l
463.5947 446.3647 l
462.1553 439.644 l
461.915 438.4438 l
461.6758 437.4839 l
461.6758 437.0039 l
461.1953 435.8037 l
461.1953 435.0835 l
460.9561 434.8438 l
460.9561 433.8838 l
460.7158 433.6436 l
460.2354 431.2432 l
460.2354 431.0034 l
459.7559 429.563 l
459.7559 428.8433 l
459.5156 428.123 l
459.2754 427.4028 l
459.0361 426.2026 l
458.7959 425.0024 l
458.5566 424.5225 l
458.3154 423.3223 l
458.0762 422.3623 l
458.0762 421.8823 l
457.8359 421.1621 l
457.3564 419.002 l
456.1563 414.6816 l
455.1973 410.6011 l
454.7168 408.9209 l
454.2363 406.0405 l
453.9971 404.6006 l
453.2773 400.2803 l
453.7568 399.8003 l
453.9971 399.5601 l
453.5176 399.3198 l
453.0371 397.3999 l
452.3174 395.2393 l
452.3174 394.5195 l
452.0771 394.04 l
451.8379 392.3594 l
450.877 387.0781 l
449.1982 377.958 l
448.2383 371.957 l
447.998 370.5176 l
447.2783 366.6768 l
446.7979 364.5166 l
446.7979 364.0361 l
446.7979 363.7969 l
446.3184 361.876 l
446.3184 361.1563 l
445.8379 358.2754 l
445.8379 357.0762 l
445.3584 355.1563 l
445.1191 352.5146 l
444.8779 351.7949 l
444.8779 350.835 l
444.3984 348.1943 l
444.3984 347.2354 l
443.9189 344.835 l
443.9189 344.1143 l
443.6787 342.1943 l
443.6787 341.2344 l
442.959 333.5527 l
442.4795 329.2324 l
442.4795 328.2725 l
441.0391 311.7109 l
439.5996 302.3496 l
439.5996 302.1104 l
439.5996 301.3896 l
439.5996 300.9102 l
439.1191 299.9492 l
438.6396 298.9893 l
436.96 296.1094 l
436.2402 294.9092 l
436 294.4297 l
435.7607 293.9492 l
433.3604 288.1885 l
432.4004 285.5479 l
430.002 280.2686 l
429.7607 279.5479 l
429.7607 279.3076 l
429.5215 279.0684 l
428.8018 278.1074 l
426.1621 273.5479 l
423.2822 268.2666 l
422.8027 267.7861 l
420.4023 263.4668 l
418.7227 260.5859 l
415.3643 254.3447 l
413.6836 251.4648 l
413.2041 250.7451 l
412.9648 250.0244 l
409.8447 244.2646 l
407.6855 240.6641 l
407.6855 240.4238 l
407.4453 239.9434 l
407.2061 239.7031 l
406.7256 239.2236 l
405.7656 238.2637 l
405.5254 238.0234 l
405.2852 237.7832 l
402.6465 233.4639 l
399.2871 227.9424 l
396.168 226.2617 l
395.9277 226.2617 l
394.9678 226.0225 l
391.6084 225.7822 l
391.3682 223.8623 l
391.1279 222.6621 l
390.8887 222.1816 l
392.0879 219.3018 l
393.0479 219.0615 l
393.5273 217.8613 l
393.0479 215.7012 l
388.249 207.3008 l
386.3291 204.1807 l
382.0107 198.8994 l
380.0898 196.499 l
379.3711 195.7793 l
378.8906 195.2988 l
378.8906 195.0596 l
378.6504 195.0596 l
377.4512 194.0986 l
376.9707 193.8594 l
375.291 192.4189 l
374.0908 191.459 l
373.3711 190.7393 l
372.6523 190.2588 l
370.0117 188.0986 l
370.0117 187.1387 l
369.7725 186.1777 l
369.7725 185.9385 l
369.7725 185.459 l
369.5322 184.498 l
368.8125 183.5381 l
368.5723 183.2979 l
368.332 183.0576 l
367.373 182.8184 l
366.1729 182.3379 l
364.4932 181.3779 l
364.2529 181.3779 l
362.334 180.6572 l
361.374 180.1777 l
360.8936 179.9375 l
360.6533 179.6982 l
359.6943 179.457 l
358.9736 178.9775 l
358.7344 178.9775 l
358.0146 178.7383 l
357.7744 178.498 l
357.0547 178.0176 l
355.8555 177.2979 l
354.415 176.3379 l
354.1758 176.0977 l
353.2148 175.6172 l
352.9756 175.377 l
352.2559 174.8975 l
351.0557 174.1768 l
350.3359 173.6973 l
350.0957 173.457 l
349.6162 173.2168 l
348.6563 172.7363 l
348.416 172.4971 l
348.1768 172.2568 l
347.4561 171.7773 l
346.9766 171.5371 l
346.7363 171.5371 l
346.2568 171.0566 l
345.2969 170.3369 l
343.8564 169.6172 l
339.5371 165.5361 l
337.1387 163.6162 l
336.8984 162.6563 l
336.6582 161.6953 l
336.4189 160.9756 l
335.9385 160.7354 l
335.6982 160.2559 l
335.2188 159.7764 l
335.2188 159.5352 l
334.9785 159.2949 l
334.498 159.0557 l
334.0186 158.8154 l
333.5391 158.5762 l
332.8184 158.0957 l
331.3789 157.376 l
330.6602 157.1357 l
330.4189 156.8955 l
329.9395 156.415 l
329.2197 155.9355 l
328.9795 155.6953 l
328.5 155.2148 l
326.5801 153.5352 l
326.3398 153.0557 l
324.1807 150.8945 l
322.9814 149.4551 l
322.7402 149.4551 l
322.7402 149.2148 l
321.7813 147.7744 l
318.9014 143.6934 l
317.9414 142.4941 l
315.542 139.8535 l
315.542 139.373 l
315.3018 138.6533 l
314.3418 135.7734 l
314.1025 135.5332 l
310.2637 130.9727 l
310.2637 130.7324 l
309.7832 130.4932 l
309.5439 129.5322 l
305.7041 123.0518 l
305.7041 122.8115 l
304.9844 121.6113 l
303.3047 118.7314 l
302.8247 117.5313 l
302.1045 116.5713 l
301.625 115.8516 l
301.145 114.6514 l
300.1851 112.9707 l
299.9453 112.0107 l
300.1851 111.29 l
302.3447 109.3701 l
302.1045 107.9307 l
300.665 106.4902 l
300.4248 106.25 l
300.1851 106.0107 l
298.0254 103.3701 l
294.666 99.7695 l
292.5063 96.1689 l
290.5869 93.2891 l
285.3076 84.6475 l
283.6279 78.168 l
283.6279 77.9268 l
282.1885 75.5273 l
280.0288 74.5664 l
279.7886 74.5664 l
278.5889 73.8467 l
278.1089 73.3672 l
276.1895 71.9268 l
275.4697 71.2061 l
274.2695 70.2471 l
273.79 69.7666 l
269.7104 65.6855 l
268.9907 64.7266 l
265.6313 60.6455 l
265.6313 60.8857 l
264.6714 61.3652 l
264.4316 61.6055 l
261.792 61.126 l
261.5522 61.126 l
260.5923 60.6455 l
259.8726 60.165 l
256.0332 58.2451 l
255.3135 58.0059 l
254.1133 57.7646 l
253.1538 57.5254 l
252.9136 57.2852 l
252.6738 57.2852 l
251.7139 57.2852 l
250.0342 57.2852 l
244.0352 58.0059 l
243.0757 58.0059 l
242.3555 58.7256 l
241.1558 60.6455 l
242.8354 68.5664 l
243.0757 68.8066 l
243.0757 69.0469 l
244.0352 73.3672 l
244.0352 74.0869 l
244.5151 76.2471 l
244.7554 76.9678 l
244.7554 77.207 l
244.9951 78.4072 l
245.7148 80.0869 l
245.7148 80.5674 l
246.4351 82.4883 l
246.4351 82.7275 l
247.1548 84.4082 l
247.3945 84.6475 l
247.8745 85.8477 l
248.3545 87.0479 l
249.0742 88.248 l
249.0742 88.4883 l
249.5542 89.209 l
249.5542 89.4482 l
249.7944 89.6885 l
251.4741 92.8096 l
251.9541 94.0088 l
253.3936 96.8896 l
255.793 101.4492 l
256.5132 102.8896 l
256.9932 103.6104 l
257.7129 105.0508 l
258.4326 106.9697 l
258.9126 108.8906 l
259.6323 111.0508 l
259.6323 111.29 l
259.6323 111.5313 l
261.0723 119.9316 l
260.832 124.252 l
260.832 124.4922 l
260.5923 124.7314 l
259.8726 125.6924 l
259.6323 125.6924 l
256.7529 129.0527 l
256.0332 129.293 l
254.5933 130.0127 l
249.7944 131.6934 l
244.2754 133.6133 l
243.7954 133.6133 l
243.0757 133.8525 l
241.6357 134.0938 l
240.6758 134.333 l
240.436 134.333 l
238.0366 134.0938 l
235.6367 134.0938 l
232.7573 134.333 l
229.3979 134.8135 l
228.6782 135.0527 l
228.918 136.4932 l
229.8779 137.4531 l
229.8779 137.9336 l
229.3979 139.1338 l
229.3979 139.373 l
229.3979 139.6143 l
228.438 140.0938 l
227.2383 141.0537 l
225.7988 141.2939 l
225.0786 140.5732 l
224.3589 140.0938 l
223.3989 140.5732 l
220.9995 140.5732 l
215.7207 139.1338 l
213.3208 139.8535 l
212.3613 140.0938 l
210.9214 140.0938 l
210.6816 139.8535 l
210.2017 139.6143 l
209.2417 138.8936 l
207.3223 135.7734 l
206.3623 133.8525 l
204.2026 130.7324 l
203.7227 130.9727 l
201.563 133.1328 l
199.4033 135.293 l
197.4839 137.4531 l
197.7236 139.6143 l
197.9639 141.7734 l
196.5239 147.0547 l
195.0845 149.4551 l
188.6055 155.2148 l
187.1655 155.2148 l
185.2461 156.1758 l
184.5264 156.6553 l
181.8867 157.8555 l
180.687 158.5762 l
180.4468 158.5762 l
179.9668 159.7764 l
180.207 160.4951 l
180.207 161.4561 l
179.9668 161.9355 l
178.2871 166.0156 l
178.2871 166.2559 l
177.8076 166.2559 l
175.8877 166.7363 l
174.688 167.2158 l
173.728 167.4561 l
171.5684 166.0156 l
171.3286 166.0156 l
170.6089 164.0957 l
169.8887 163.1357 l
169.1689 163.8564 l
166.0498 166.7363 l
163.8901 169.377 l
162.4502 173.2168 l
161.4902 175.8574 l
161.2505 177.5371 l
161.2505 177.7773 l
160.7705 178.2568 l
159.8105 179.6982 l
157.8911 180.6572 l
155.0117 180.418 l
154.2915 179.9375 l
153.5718 179.2178 l
152.8521 178.498 l
147.0933 183.5381 l
146.1333 185.2188 l
146.1333 186.4189 l
146.1333 186.8984 l
145.8931 187.3779 l
145.4136 188.8184 l
145.1733 189.5391 l
145.1733 189.7783 l
144.9336 189.7783 l
144.2134 190.0186 l
143.2539 190.499 l
141.814 190.9785 l
139.8945 191.6982 l
139.8945 191.9395 l
137.7349 193.3789 l
135.335 196.499 l
134.1353 198.8994 l
133.4155 200.8193 l
131.9756 203.9395 l
130.2959 207.0605 l
130.2959 207.3008 l
127.8965 207.0605 l
126.2168 207.7813 l
122.8574 210.1807 l
121.418 211.3809 l
121.1777 211.3809 l
121.1777 211.6211 l
120.938 212.1016 l
120.6978 213.3018 l
114.6992 213.7813 l
114.459 213.7813 l
114.2192 213.7813 l
112.7793 216.6611 l
112.5396 218.5811 l
112.5396 219.3018 l
112.5396 219.541 l
113.0195 224.3428 l
116.3789 224.582 l
116.6187 225.3018 l
116.3789 225.3018 l
116.1387 225.543 l
115.8989 225.543 l
115.8989 226.7432 l
115.8989 228.4229 l
116.6187 232.9824 l
116.6187 234.4229 l
116.6187 235.623 l
115.6587 235.8633 l
115.1787 237.0635 l
115.4189 237.7832 l
116.8584 239.4639 l
118.5381 241.3838 l
119.498 243.5439 l
119.7383 243.7842 l
120.2178 244.9844 l
119.978 247.8643 l
119.498 248.8242 l
118.5381 249.5449 l
118.0586 249.5449 l
117.0986 249.7852 l
115.8989 250.9854 l
115.1787 251.7051 l
114.459 252.4258 l
113.979 252.665 l
113.979 252.9053 l
113.0195 253.3857 l
112.7793 253.625 l
110.8599 255.0654 l
110.3799 256.2656 l
110.1396 256.5059 l
110.1396 257.2256 l
110.1396 257.9453 l
109.8999 259.626 l
109.6602 261.5459 l
109.6602 262.9863 l
109.6602 263.2266 l
110.1396 263.9463 l
110.3799 264.666 l
111.5796 265.627 l
111.8193 265.627 l
112.5396 266.3467 l
113.0195 267.0664 l
113.499 267.5469 l
113.7393 267.7861 l
114.2192 268.0273 l
115.1787 268.2666 l
115.8989 268.9863 l
115.8989 269.2266 l
116.6187 269.9473 l
117.0986 270.4268 l
117.0986 270.667 l
117.3384 270.9072 l
117.5786 271.1475 l
117.5786 271.3867 l
118.0586 272.1064 l
118.7783 272.8271 l
119.0181 273.0674 l
119.498 274.0273 l
119.978 274.5068 l
120.458 276.1875 l
120.6978 276.4277 l
121.1777 279.3076 l
121.1777 279.5479 l
121.1777 281.9482 l
121.6577 282.668 l
122.3774 283.1484 l
124.0571 283.8682 l
124.7773 285.5479 l
125.0171 286.2686 l
125.2568 286.748 l
125.9771 287.9482 l
126.6968 288.1885 l
127.1768 287.9482 l
127.4165 287.9482 l
127.4165 287.709 l
128.1367 287.4688 l
128.3765 287.9482 l
128.6162 288.9082 l
128.3765 289.3887 l
128.6162 290.8291 l
128.8564 291.7891 l
128.8564 292.5098 l
129.0962 293.2295 l
129.3364 293.71 l
129.3364 293.9492 l
129.8164 294.9092 l
130.0562 295.6289 l
130.2959 296.1094 l
131.0161 298.2695 l
131.2559 298.9893 l
131.7358 300.4307 l
131.7358 301.3896 l
132.2158 301.8701 l
132.6958 302.5898 l
134.3755 303.5508 l
135.335 304.75 l
135.335 304.9902 l
f
0 R
0.3412 0.5608 1 0 K
135.335 304.9902 m
135.0952 304.9902 l
135.0952 305.2305 l
136.2949 306.4307 l
137.4946 307.8711 l
137.9746 307.8711 l
140.1343 309.0703 l
144.9336 311.4707 l
142.7739 313.1514 l
144.9336 314.5908 l
145.4136 314.8311 l
146.1333 315.3115 l
146.6133 315.5518 l
148.293 316.9922 l
150.2124 318.4316 l
150.9321 319.1523 l
151.8921 319.8721 l
152.6118 320.5918 l
153.5718 321.3125 l
156.2114 323.7129 l
156.4512 324.1924 l
157.4111 324.6729 l
157.8911 324.9121 l
158.6108 325.3926 l
159.0908 325.6318 l
159.3311 325.873 l
159.5708 325.873 l
161.9702 326.5928 l
163.6499 326.832 l
164.6099 326.832 l
164.8496 326.832 l
165.0898 326.832 l
166.5293 327.0732 l
168.4492 326.832 l
168.9292 326.5928 l
170.3687 326.5928 l
171.3286 326.5928 l
171.5684 326.5928 l
174.9277 326.5928 l
175.168 326.5928 l
175.4077 326.5928 l
178.5273 327.3125 l
181.6465 328.0322 l
183.3262 328.7529 l
184.7661 329.2324 l
186.686 329.9531 l
189.0854 331.3936 l
191.2451 333.5527 l
192.4448 334.5137 l
192.4448 334.7529 l
193.8843 335.7129 l
194.8442 335.9531 l
195.0845 335.9531 l
197.0039 336.1934 l
202.5229 336.1934 l
203.7227 336.6738 l
204.4424 337.1533 l
204.9224 337.874 l
205.8823 339.3145 l
206.3623 340.0342 l
207.082 341.2344 l
207.3223 342.6738 l
207.3223 343.3945 l
207.562 344.5947 l
207.562 345.3145 l
207.3223 345.7939 l
207.082 346.2744 l
206.8423 346.7549 l
206.6021 347.4746 l
206.1221 348.6748 l
206.1221 349.1543 l
206.1221 349.875 l
205.8823 350.835 l
205.8823 351.0752 l
205.8823 352.9951 l
205.8823 353.9561 l
205.8823 354.4355 l
205.8823 354.915 l
206.1221 355.1563 l
206.1221 355.3955 l
206.1221 355.6357 l
206.3623 356.5957 l
206.6021 357.0762 l
207.3223 358.2754 l
207.3223 358.5156 l
207.562 358.5156 l
208.042 358.9961 l
208.2817 359.2354 l
208.522 359.4766 l
209.7217 360.1963 l
211.1611 361.1563 l
212.1211 361.6357 l
215.4805 362.8359 l
216.6802 363.0762 l
220.2798 364.7559 l
220.9995 365.4766 l
221.4795 365.9561 l
221.7192 366.1973 l
222.9189 367.6367 l
223.3989 368.1172 l
224.8389 371.2373 l
225.0786 371.7168 l
226.0386 372.918 l
226.9985 373.6367 l
227.4785 373.877 l
227.7183 374.1172 l
227.958 374.1172 l
229.8779 374.8379 l
230.1177 374.8379 l
232.0376 375.5576 l
232.9976 376.0371 l
233.2373 376.0371 l
233.4771 376.0371 l
233.7173 376.2773 l
234.1973 376.5176 l
234.917 376.998 l
236.1167 378.1982 l
238.9961 381.0781 l
239.4761 381.7979 l
239.7163 382.0381 l
240.1958 382.7578 l
240.6758 383.2383 l
242.3555 384.4385 l
244.0352 385.6387 l
245.2349 386.1191 l
248.5942 388.2783 l
249.0742 388.5186 l
251.4741 389.959 l
251.9541 390.1992 l
252.9136 390.4395 l
253.3936 390.6797 l
253.6338 390.6797 l
253.6338 390.9189 l
254.3535 390.9189 l
256.5132 390.4395 l
256.9932 390.6797 l
258.4326 391.1592 l
259.3926 391.3994 l
261.792 392.1191 l
263.4717 393.0801 l
266.1113 393.7988 l
267.311 394.04 l
267.791 394.5195 l
268.0308 394.7598 l
268.5107 395.9595 l
268.9907 396.6797 l
269.4707 397.1597 l
269.9507 397.6396 l
270.1904 397.8799 l
270.6704 398.1201 l
270.9102 398.1201 l
271.1504 398.3599 l
271.8701 398.6001 l
273.0698 399.5601 l
273.79 400.2803 l
274.0298 401.2402 l
274.2695 402.6802 l
274.7495 403.8804 l
274.7495 404.1206 l
274.9897 404.6006 l
275.2295 405.0806 l
275.7095 406.2808 l
276.6694 407.001 l
277.3892 407.2407 l
277.8691 407.2407 l
278.8291 407.001 l
279.3086 406.7607 l
280.5088 406.2808 l
281.4683 405.8008 l
283.6279 405.3208 l
284.1079 405.0806 l
284.5879 405.0806 l
284.8276 405.0806 l
285.5479 405.3208 l
286.9873 406.521 l
288.4272 407.7207 l
289.8667 408.6812 l
290.8267 409.1611 l
291.3066 409.1611 l
291.5464 409.4009 l
291.7866 409.4009 l
293.7061 409.1611 l
294.4263 409.1611 l
294.9058 409.4009 l
298.2656 412.5215 l
298.5054 413.0015 l
298.9854 413.7217 l
299.2251 414.9219 l
299.2251 416.1216 l
298.9854 416.8418 l
296.5859 420.9224 l
295.626 421.8823 l
294.186 422.8423 l
292.5063 423.5625 l
292.2666 423.5625 l
291.7866 424.0425 l
291.5464 424.5225 l
291.3066 425.2427 l
290.5869 427.6431 l
290.5869 427.8828 l
290.5869 428.123 l
289.627 429.563 l
289.147 430.7632 l
288.9072 431.2432 l
288.4272 432.6836 l
288.187 432.6836 l
288.187 432.9233 l
286.7476 433.8838 l
286.7476 434.1235 l
286.5073 434.1235 l
286.0278 434.6035 l
285.7876 434.6035 l
285.5479 435.0835 l
285.3076 435.3237 l
284.8276 435.3237 l
284.5879 435.8037 l
284.1079 436.0439 l
282.6685 437.0039 l
281.4683 437.7241 l
277.3892 439.644 l
276.4292 440.6045 l
275.9492 440.8442 l
273.5498 442.0444 l
272.3501 443.2446 l
271.3901 445.6445 l
269.9507 448.7651 l
269.2305 451.1655 l
268.271 453.0854 l
267.311 455.0059 l
266.5913 456.2061 l
263.7119 459.3262 l
263.2319 459.8062 l
262.5117 460.5264 l
262.272 460.7661 l
261.312 461.4863 l
260.3525 462.2065 l
259.1523 462.2065 l
258.6729 462.2065 l
257.4727 462.6865 l
255.5532 464.3667 l
253.6338 466.2871 l
253.3936 466.2871 l
251.9541 467.4868 l
250.5142 468.9272 l
249.7944 469.8872 l
249.7944 470.1274 l
249.3145 471.5674 l
249.3145 472.2876 l
249.3145 473.9678 l
249.3145 474.4478 l
248.5942 476.6079 l
247.8745 479.248 l
247.6348 479.9683 l
247.3945 480.2085 l
246.6748 482.1284 l
245.2349 485.729 l
244.9951 486.209 l
244.5151 486.4487 l
244.0352 486.9287 l
241.8755 487.8892 l
241.396 488.1289 l
241.1558 488.1289 l
241.1558 488.3691 l
240.6758 488.6094 l
240.436 488.8491 l
240.1958 488.8491 l
240.1958 489.0894 l
239.7163 489.5693 l
238.0366 490.0493 l
237.5566 490.0493 l
236.5967 489.3291 l
233.4771 488.3691 l
231.7974 488.1289 l
231.5576 488.1289 l
231.0776 488.1289 l
230.8379 488.1289 l
230.5977 488.3691 l
229.8779 488.6094 l
229.1582 489.0894 l
228.918 489.3291 l
227.958 490.0493 l
227.7183 490.5293 l
227.4785 490.5293 l
227.2383 490.7695 l
226.7583 491.2495 l
226.2783 491.2495 l
225.0786 491.7295 l
224.8389 491.7295 l
224.5986 491.9697 l
224.3589 492.2095 l
224.1191 492.4497 l
223.8789 492.9297 l
223.8789 493.1694 l
223.6392 493.4097 l
223.6392 493.8896 l
223.1592 497.0098 l
222.1992 501.3306 l
221.4795 503.2505 l
221.4795 503.4907 l
221.9595 505.1709 l
222.1992 505.6509 l
222.4395 506.1309 l
222.1992 506.1309 l
222.1992 507.0908 l
222.1992 508.5313 l
222.9189 509.4912 l
223.3989 510.9316 l
223.6392 512.3716 l
223.3989 513.8115 l
223.3989 514.5317 l
222.9189 517.6523 l
222.6792 519.5723 l
222.6792 521.4927 l
222.6792 521.9727 l
222.9189 523.8926 l
222.6792 527.0132 l
222.4395 527.9731 l
222.1992 528.6934 l
220.0396 530.3735 l
218.8398 532.0537 l
218.1201 532.7734 l
216.2002 535.1738 l
215.2407 536.1338 l
215.0005 536.374 l
212.8408 537.0942 l
211.4014 537.814 l
210.2017 538.0542 l
207.082 538.5342 l
206.8423 538.5342 l
206.3623 538.5342 l
205.8823 538.5342 l
205.6426 538.2939 l
205.1626 538.0542 l
204.6826 537.814 l
204.4424 537.5742 l
204.2026 537.334 l
202.2827 535.6538 l
202.043 535.6538 l
201.3232 535.1738 l
200.3633 535.1738 l
199.8833 535.1738 l
199.4033 535.4141 l
198.6836 535.4141 l
198.4438 535.4141 l
198.2036 535.6538 l
197.0039 536.1338 l
196.7642 536.1338 l
196.5239 536.374 l
196.2842 536.6143 l
195.8042 536.854 l
195.3242 537.334 l
194.6045 538.2939 l
194.3643 538.7744 l
194.1245 539.4941 l
194.1245 539.7344 l
194.1245 540.4546 l
194.3643 540.6943 l
194.8442 541.6543 l
195.0845 541.8945 l
195.0845 542.8545 l
195.3242 542.8545 l
195.0845 543.0947 l
195.0845 543.335 l
195.0845 543.5747 l
195.0845 543.8149 l
194.8442 546.4551 l
193.8843 547.6553 l
193.8843 548.375 l
193.4048 549.0952 l
192.6846 550.0552 l
192.6846 550.7754 l
192.9248 551.0156 l
193.6445 551.4956 l
195.0845 551.4956 l
195.564 551.9756 l
195.564 552.2158 l
195.564 552.9355 l
195.3242 555.8159 l
195.0845 556.7759 l
194.8442 557.7363 l
194.6045 557.9761 l
194.6045 558.2163 l
192.9248 559.4165 l
193.1646 560.1362 l
193.8843 561.8164 l
195.0845 563.4966 l
195.3242 563.7368 l
195.8042 564.457 l
197.0039 564.937 l
197.2437 565.417 l
197.4839 565.6572 l
197.4839 565.897 l
197.7236 566.377 l
198.2036 566.8569 l
198.4438 567.8174 l
198.2036 568.2974 l
198.2036 568.5371 l
197.9639 568.5371 l
197.7236 568.7773 l
197.4839 568.7773 l
197.4839 569.0176 l
197.2437 569.0176 l
197.0039 569.0176 l
196.7642 569.0176 l
195.564 569.0176 l
195.3242 569.0176 l
193.8843 569.4976 l
192.9248 570.6973 l
192.9248 570.9375 l
192.9248 571.1777 l
192.6846 571.4175 l
192.6846 571.8975 l
192.4448 572.6177 l
192.6846 573.3379 l
192.6846 573.5776 l
193.1646 575.2578 l
193.6445 576.458 l
193.6445 576.938 l
194.1245 578.1382 l
194.6045 579.0981 l
194.8442 579.3384 l
194.8442 579.5781 l
195.564 580.2983 l
196.2842 581.9785 l
196.5239 581.9785 l
196.5239 582.2188 l
196.5239 582.4585 l
197.2437 583.6587 l
197.2437 584.1387 l
197.2437 584.8589 l
196.7642 585.5791 l
196.5239 585.5791 l
196.5239 585.8188 l
196.2842 586.0591 l
195.564 586.7793 l
194.3643 588.2192 l
194.1245 588.6992 l
194.1245 589.6592 l
194.1245 590.1396 l
194.3643 590.3794 l
195.3242 591.3398 l
197.2437 592.2998 l
197.9639 593.0195 l
198.4438 593.7397 l
198.6836 594.9399 l
198.9233 596.1401 l
199.1636 596.8604 l
199.4033 597.1001 l
199.6436 597.3403 l
199.6436 597.5801 l
200.1235 597.8203 l
201.083 597.8203 l
201.563 597.8203 l
202.2827 597.5801 l
204.6826 596.6201 l
206.8423 596.3799 l
208.042 596.3799 l
208.2817 596.6201 l
208.7617 597.1001 l
209.4814 598.3003 l
209.9614 599.5005 l
210.4414 600.2207 l
211.4014 600.7007 l
211.6411 600.7007 l
211.8813 600.9404 l
212.1211 600.9404 l
213.0811 601.1807 l
213.3208 601.1807 l
213.8008 601.4204 l
215.4805 604.061 l
215.7207 604.3008 l
215.7207 605.021 l
215.4805 605.7412 l
215.7207 606.2212 l
216.2002 606.9414 l
216.6802 607.6611 l
217.8799 608.6211 l
219.0801 610.5415 l
219.3198 611.0215 l
219.3198 611.2617 l
219.3198 611.9814 l
219.3198 612.2217 l
219.0801 612.4619 l
219.0801 612.7017 l
218.6001 613.1816 l
216.9204 614.8618 l
216.4404 615.582 l
216.2002 616.062 l
216.2002 616.542 l
216.4404 617.0225 l
216.6802 617.7422 l
217.8799 618.4624 l
220.9995 618.4624 l
221.7192 618.2222 l
222.1992 617.7422 l
223.3989 617.9824 l
223.6392 617.9824 l
224.5986 619.4224 l
226.0386 621.3428 l
226.2783 621.3428 l
226.2783 622.0625 l
226.5186 622.7827 l
226.7583 623.0229 l
226.7583 623.7427 l
226.5186 624.4629 l
226.5186 624.9429 l
226.0386 625.4229 l
225.0786 626.623 l
224.3589 628.063 l
223.8789 628.5435 l
223.6392 629.0234 l
221.7192 630.9434 l
221.2393 631.4238 l
221.2393 631.9038 l
221.4795 633.3438 l
221.2393 635.2642 l
220.9995 635.9839 l
220.9995 636.4639 l
220.5195 636.9443 l
220.5195 637.1841 l
218.8398 638.6245 l
218.3599 639.1045 l
216.9204 640.3047 l
216.4404 641.0244 l
215.9604 641.9849 l
214.7607 643.9048 l
214.5205 644.8652 l
213.3208 647.2651 l
212.1211 648.7056 l
211.8813 649.6655 l
211.6411 651.3457 l
211.6411 651.5859 l
211.4014 652.0654 l
211.6411 652.7861 l
211.4014 653.2656 l
211.4014 653.5059 l
210.9214 653.7456 l
209.4814 653.5059 l
209.002 653.5059 l
208.522 653.9858 l
208.2817 654.9463 l
208.2817 655.666 l
208.7617 656.626 l
209.002 657.3462 l
209.002 658.0664 l
209.002 659.2666 l
209.2417 659.7466 l
209.2417 659.9863 l
209.7217 660.2266 l
209.9614 660.4668 l
209.9614 660.7065 l
210.9214 661.4268 l
213.8008 663.1069 l
214.041 663.5869 l
215.9604 664.3071 l
216.2002 664.5469 l
216.9204 665.0273 l
217.1602 665.0273 l
217.6401 665.7471 l
218.1201 665.9873 l
218.3599 666.2271 l
218.3599 666.707 l
220.2798 667.4272 l
221.7192 667.4272 l
222.6792 667.9072 l
228.438 671.2676 l
229.3979 671.748 l
230.5977 673.188 l
231.5576 673.668 l
232.5176 673.9082 l
232.7573 674.1479 l
232.5176 675.3481 l
232.5176 675.8281 l
233.957 677.748 l
234.437 678.4688 l
234.917 679.4287 l
234.917 680.1484 l
235.6367 681.5889 l
235.877 682.0688 l
236.8364 682.0688 l
238.5161 683.9893 l
239.4761 684.709 l
240.6758 685.1895 l
242.1157 685.4292 l
244.7554 687.1094 l
245.2349 687.8291 l
245.7148 689.5093 l
245.7148 689.7495 l
245.7148 689.9897 l
245.4751 690.2295 l
245.2349 690.2295 l
244.5151 690.2295 l
243.7954 689.7495 l
242.5957 688.5498 l
241.8755 688.3096 l
241.6357 688.0693 l
240.916 688.0693 l
240.436 688.0693 l
240.1958 688.3096 l
240.1958 689.2695 l
242.3555 693.8301 l
242.8354 694.5498 l
244.2754 695.27 l
245.2349 695.5103 l
245.9551 695.5103 l
246.1948 695.75 l
250.0342 698.3906 l
250.0342 698.6304 l
250.0342 699.1104 l
250.5142 699.8306 l
253.6338 701.2705 l
255.3135 702.4707 l
259.3926 707.7515 l
260.1123 709.4316 l
260.3525 710.1514 l
260.5923 710.6318 l
262.9917 712.792 l
264.4316 714.9521 l
265.3916 716.8721 l
265.3916 717.8325 l
266.3511 720.2324 l
266.8311 720.9526 l
266.8311 721.4326 l
267.791 723.1133 l
269.4707 725.7529 l
269.4707 726.2334 l
269.7104 726.4736 l
269.2305 727.1934 l
268.0308 728.3936 l
267.791 728.6333 l
268.0308 730.0737 l
268.9907 731.5137 l
269.2305 732.7139 l
270.1904 734.874 l
270.4307 735.1143 l
270.6704 735.354 l
271.8701 735.5942 l
272.3501 736.0742 l
272.5898 736.5542 l
272.8301 737.5146 l
272.5898 738.4746 l
272.5898 738.7148 l
272.5898 738.9546 l
273.79 741.355 l
274.0298 742.3149 l
274.2695 742.7949 l
274.2695 743.0352 l
274.7495 743.7549 l
275.2295 744.2354 l
276.1895 745.915 l
277.8691 748.0752 l
279.3086 748.5557 l
280.0288 749.2754 l
281.2285 750.7158 l
284.3481 752.876 l
284.5879 753.1162 l
284.3481 753.8359 l
283.8682 755.0361 l
283.6279 755.0361 l
283.8682 755.7563 l
284.5879 756.2363 l
284.8276 756.4761 l
285.3076 756.4761 l
285.5479 756.7163 l
286.5073 756.7163 l
286.7476 756.7163 l
287.7075 756.7163 l
288.4272 756.7163 l
288.4272 756.9565 l
288.667 756.9565 l
288.9072 756.9565 l
289.147 756.9565 l
289.3872 757.1963 l
290.1069 758.1563 l
290.3467 758.3965 l
290.5869 758.6367 l
290.8267 758.877 l
290.8267 759.3564 l
291.3066 760.3169 l
291.5464 761.2769 l
291.5464 761.5166 l
292.5063 762.957 l
292.9863 762.957 l
293.2261 763.1973 l
293.7061 763.1973 l
297.0654 763.1973 l
298.0254 763.1973 l
300.1851 763.437 l
303.0645 765.1172 l
303.7842 765.3574 l
304.7441 765.5972 l
305.9438 766.5576 l
306.1841 766.3174 l
306.4238 766.0771 l
308.1035 765.1172 l
310.5029 763.6772 l
313.1426 761.9971 l
316.0225 760.3169 l
317.7021 759.3564 l
325.1406 754.7959 l
332.5791 750.2358 l
335.2188 748.5557 l
335.459 748.5557 l
335.6982 748.3154 l
336.4189 747.8354 l
340.7383 745.1953 l
343.1367 743.5151 l
348.8965 740.1548 l
353.9355 737.0342 l
355.1348 736.3145 l
355.8555 735.834 l
358.2539 734.394 l
362.0938 731.9941 l
364.2529 730.3135 l
365.4531 729.5938 l
365.9336 729.3535 l
366.1729 729.1133 l
366.4131 729.1133 l
367.6133 728.1533 l
367.8525 728.1533 l
374.5713 723.5928 l
375.0518 723.353 l
375.5313 723.1133 l
376.4912 722.3931 l
377.4512 721.9126 l
378.4102 721.4326 l
380.8105 719.9927 l
382.25 719.0327 l
383.21 718.3125 l
383.6895 718.0723 l
386.5693 716.3921 l
388.249 715.4321 l
388.249 715.1919 l
392.5684 712.5522 l
397.3672 709.6714 l
405.5254 704.8711 l
407.4453 703.9111 l
407.6855 703.6709 l
412.2441 701.2705 l
413.4443 700.5508 l
416.3232 699.1104 l
418.9629 697.6704 l
423.2822 695.0303 l
423.5225 695.0303 l
424.002 694.79 l
424.2422 694.5498 l
426.1621 693.5898 l
426.1621 693.3501 l
426.6416 693.1099 l
426.8818 693.1099 l
427.8418 692.3896 l
430.7207 690.9497 l
431.2012 690.7095 l
431.2012 690.4697 l
432.1602 689.9897 l
432.6406 689.7495 l
432.8809 689.5093 l
434.5605 688.5498 l
435.7607 687.8291 l
436.4805 687.5894 l
437.6797 686.8691 l
437.9199 686.6294 l
438.8789 686.1494 l
441.2793 684.709 l
441.7598 684.4692 l
443.4395 683.5088 l
444.3984 683.0288 l
446.3184 681.8291 l
446.7979 681.5889 l
447.2783 681.1084 l
447.7578 680.8687 l
447.998 680.8687 l
450.3975 679.4287 l
451.1172 678.9482 l
451.3574 678.9482 l
452.0771 678.4688 l
453.7568 677.5083 l
453.9971 677.2686 l
456.3965 675.8281 l
456.6357 675.8281 l
459.5156 674.1479 l
460.7158 673.4282 l
464.5547 671.2676 l
466.7148 669.8276 l
468.3936 668.8672 l
469.834 668.1475 l
470.0732 667.9072 l
471.5137 667.1875 l
472.9531 666.2271 l
476.793 664.0669 l
477.2725 663.8271 l
478.9521 662.8667 l
479.9121 661.9067 l
480.3926 661.6665 l
481.1113 661.6665 l
483.0313 661.6665 l
482.3115 657.1064 l
481.8311 655.186 l
480.6318 650.1455 l
480.1523 648.2251 l
479.4316 645.3452 l
478.9521 643.665 l
478.2324 640.5449 l
477.752 638.8643 l
477.752 638.3843 l
477.5127 637.4243 l
477.2725 637.1841 l
475.833 631.9038 l
475.3535 630.2236 l
474.3936 628.063 l
473.4326 625.9033 l
471.2734 621.1025 l
470.3145 618.9424 l
469.834 617.9824 l
467.9141 611.7417 l
467.4346 610.7817 l
466.9551 610.0615 l
466.7148 610.0615 l
464.7949 606.4609 l
463.835 604.541 l
463.1152 603.1006 l
461.6758 600.4604 l
461.4355 599.9805 l
460.9561 598.7803 l
460.2354 597.5801 l
459.7559 596.8604 l
459.5156 596.3799 l
457.8359 593.2598 l
457.1162 591.8198 l
456.877 591.0996 l
455.916 586.2988 l
455.6768 584.6191 l
455.4365 583.4189 l
455.1973 583.1787 l
455.1973 582.6987 l
455.1973 582.2188 l
455.1973 581.9785 l
454.9561 581.4985 l
454.9561 580.5386 l
454.7168 579.3384 l
454.7168 579.0981 l
454.7168 578.6182 l
454.4766 577.418 l
451.3574 577.6582 l
451.1172 577.418 l
450.877 577.1782 l
450.3975 576.458 l
450.3975 576.2178 l
448.4785 573.3379 l
447.5186 572.6177 l
447.0381 572.1377 l
444.8779 570.4575 l
444.3984 569.9775 l
444.1582 569.7373 l
443.4395 569.0176 l
441.7598 567.0972 l
441.5186 566.8569 l
441.2793 566.1372 l
440.5586 564.457 l
440.0801 562.7769 l
440.5586 561.0967 l
439.1191 559.8965 l
436 559.1763 l
435.04 558.9365 l
433.3604 558.6963 l
432.1602 558.4561 l
430.2412 557.9761 l
428.3223 557.4961 l
428.0811 557.4961 l
424.2422 558.2163 l
419.6826 558.9365 l
418.7227 558.6963 l
418.2432 558.4561 l
418.2432 558.2163 l
418.0029 557.9761 l
417.5234 557.4961 l
416.3232 556.0562 l
415.3643 554.856 l
415.124 554.376 l
414.8838 551.7354 l
414.6436 550.0552 l
414.4043 547.1753 l
414.1641 543.8149 l
413.9238 541.8945 l
413.9238 541.4146 l
413.6836 538.5342 l
413.6836 538.2939 l
412.9648 535.894 l
412.2441 533.7339 l
411.5244 532.7734 l
409.125 533.2539 l
408.6445 533.2539 l
404.8057 530.6133 l
404.3262 528.4531 l
404.3262 527.7329 l
405.0459 524.3726 l
405.2852 522.2124 l
404.0859 520.5322 l
402.8857 518.8521 l
402.4063 518.3721 l
401.6865 517.4121 l
401.4463 517.1719 l
400.9668 516.4521 l
400.7266 516.2119 l
400.4863 515.7319 l
400.0068 514.5317 l
399.5273 512.6113 l
399.7666 511.8916 l
399.7666 511.4116 l
400.2461 509.9712 l
400.7266 507.811 l
400.7266 507.5713 l
401.9268 505.6509 l
402.8857 505.4106 l
403.3662 505.1709 l
407.6855 503.7305 l
410.5645 502.0503 l
413.6836 500.6104 l
413.6836 500.1304 l
414.4043 498.6899 l
414.4043 498.21 l
413.9238 497.73 l
414.1641 497.25 l
415.3643 498.21 l
416.8037 498.6899 l
417.0439 498.9302 l
417.7637 499.4102 l
418.4834 500.6104 l
421.3633 503.0107 l
421.3633 502.7705 l
421.3633 501.3306 l
420.8828 500.8506 l
421.3633 500.3701 l
422.5625 501.5703 l
423.043 501.0903 l
423.2822 500.6104 l
423.7617 501.0903 l
424.002 501.0903 l
425.2021 500.6104 l
426.1621 500.8506 l
426.4023 500.6104 l
426.4023 500.8506 l
427.3613 501.3306 l
428.5615 501.5703 l
429.2813 502.5308 l
429.5215 502.7705 l
430.002 503.0107 l
430.2412 503.0107 l
430.4814 502.7705 l
431.2012 502.5308 l
431.6816 502.0503 l
431.9209 501.8105 l
432.6406 501.3306 l
433.1201 501.0903 l
434.3203 500.3701 l
437.4395 499.4102 l
439.8398 498.4502 l
440.0801 498.4502 l
440.7988 498.21 l
442.2393 497.4902 l
443.4395 496.77 l
445.3584 495.0898 l
445.8379 494.8496 l
446.7979 494.1299 l
446.7979 493.8896 l
447.0381 493.8896 l
447.2783 493.6494 l
448.2383 493.1694 l
448.4785 493.1694 l
449.6777 492.4497 l
452.3174 491.9697 l
459.0361 490.2891 l
459.9951 490.2891 l
460.7158 490.2891 l
461.4355 492.6895 l
461.915 496.29 l
462.1553 499.6504 l
461.6758 500.8506 l
459.0361 505.8906 l
458.5566 506.1309 l
456.3965 508.0513 l
456.3965 508.771 l
457.1162 509.251 l
458.7959 509.0112 l
459.5156 508.291 l
461.1953 507.0908 l
465.2754 498.9302 l
465.5146 489.5693 l
465.9941 486.9287 l
466.4746 482.8486 l
466.9551 478.7681 l
466.9551 475.8877 l
466.9551 471.8076 l
466.9551 471.3271 l
466.7148 469.4072 l
466.4746 467.2471 l
466.2344 464.3667 l
465.9941 461.9663 l
465.9941 461.7266 l
465.7549 460.0464 l
465.7549 458.3662 l
465.7549 457.646 l
465.5146 456.2061 l
465.0352 453.8057 l
464.7949 451.8853 l
464.5547 450.9253 l
464.0752 449.2451 l
464.0752 448.2852 l
463.5947 446.3647 l
462.1553 439.644 l
461.915 438.4438 l
461.6758 437.4839 l
461.6758 437.0039 l
461.1953 435.8037 l
461.1953 435.0835 l
460.9561 434.8438 l
460.9561 433.8838 l
460.7158 433.6436 l
460.2354 431.2432 l
460.2354 431.0034 l
459.7559 429.563 l
459.7559 428.8433 l
459.5156 428.123 l
459.2754 427.4028 l
S
459.2754 427.4028 m
459.0361 426.2026 l
458.7959 425.0024 l
458.5566 424.5225 l
458.3154 423.3223 l
458.0762 422.3623 l
458.0762 421.8823 l
457.8359 421.1621 l
457.3564 419.002 l
456.1563 414.6816 l
455.1973 410.6011 l
454.7168 408.9209 l
454.2363 406.0405 l
453.9971 404.6006 l
453.2773 400.2803 l
453.7568 399.8003 l
453.9971 399.5601 l
453.5176 399.3198 l
453.0371 397.3999 l
452.3174 395.2393 l
452.3174 394.5195 l
452.0771 394.04 l
451.8379 392.3594 l
450.877 387.0781 l
449.1982 377.958 l
448.2383 371.957 l
447.998 370.5176 l
447.2783 366.6768 l
446.7979 364.5166 l
446.7979 364.0361 l
446.7979 363.7969 l
446.3184 361.876 l
446.3184 361.1563 l
445.8379 358.2754 l
445.8379 357.0762 l
445.3584 355.1563 l
445.1191 352.5146 l
444.8779 351.7949 l
444.8779 350.835 l
444.3984 348.1943 l
444.3984 347.2354 l
443.9189 344.835 l
443.9189 344.1143 l
443.6787 342.1943 l
443.6787 341.2344 l
442.959 333.5527 l
442.4795 329.2324 l
442.4795 328.2725 l
441.0391 311.7109 l
439.5996 302.3496 l
439.5996 302.1104 l
439.5996 301.3896 l
439.5996 300.9102 l
439.1191 299.9492 l
438.6396 298.9893 l
436.96 296.1094 l
436.2402 294.9092 l
436 294.4297 l
435.7607 293.9492 l
433.3604 288.1885 l
432.4004 285.5479 l
430.002 280.2686 l
429.7607 279.5479 l
429.7607 279.3076 l
429.5215 279.0684 l
428.8018 278.1074 l
426.1621 273.5479 l
423.2822 268.2666 l
422.8027 267.7861 l
420.4023 263.4668 l
418.7227 260.5859 l
415.3643 254.3447 l
413.6836 251.4648 l
413.2041 250.7451 l
412.9648 250.0244 l
409.8447 244.2646 l
407.6855 240.6641 l
407.6855 240.4238 l
407.4453 239.9434 l
407.2061 239.7031 l
406.7256 239.2236 l
405.7656 238.2637 l
405.5254 238.0234 l
405.2852 237.7832 l
402.6465 233.4639 l
399.2871 227.9424 l
396.168 226.2617 l
395.9277 226.2617 l
394.9678 226.0225 l
391.6084 225.7822 l
391.3682 223.8623 l
391.1279 222.6621 l
390.8887 222.1816 l
392.0879 219.3018 l
393.0479 219.0615 l
393.5273 217.8613 l
393.0479 215.7012 l
388.249 207.3008 l
386.3291 204.1807 l
382.0107 198.8994 l
380.0898 196.499 l
379.3711 195.7793 l
378.8906 195.2988 l
378.8906 195.0596 l
378.6504 195.0596 l
377.4512 194.0986 l
376.9707 193.8594 l
375.291 192.4189 l
374.0908 191.459 l
373.3711 190.7393 l
372.6523 190.2588 l
370.0117 188.0986 l
370.0117 187.1387 l
369.7725 186.1777 l
369.7725 185.9385 l
369.7725 185.459 l
369.5322 184.498 l
368.8125 183.5381 l
368.5723 183.2979 l
368.332 183.0576 l
367.373 182.8184 l
366.1729 182.3379 l
364.4932 181.3779 l
364.2529 181.3779 l
362.334 180.6572 l
361.374 180.1777 l
360.8936 179.9375 l
360.6533 179.6982 l
359.6943 179.457 l
358.9736 178.9775 l
358.7344 178.9775 l
358.0146 178.7383 l
357.7744 178.498 l
357.0547 178.0176 l
355.8555 177.2979 l
354.415 176.3379 l
354.1758 176.0977 l
353.2148 175.6172 l
352.9756 175.377 l
352.2559 174.8975 l
351.0557 174.1768 l
350.3359 173.6973 l
350.0957 173.457 l
349.6162 173.2168 l
348.6563 172.7363 l
348.416 172.4971 l
348.1768 172.2568 l
347.4561 171.7773 l
346.9766 171.5371 l
346.7363 171.5371 l
346.2568 171.0566 l
345.2969 170.3369 l
343.8564 169.6172 l
339.5371 165.5361 l
337.1387 163.6162 l
336.8984 162.6563 l
336.6582 161.6953 l
336.4189 160.9756 l
335.9385 160.7354 l
335.6982 160.2559 l
335.2188 159.7764 l
335.2188 159.5352 l
334.9785 159.2949 l
334.498 159.0557 l
334.0186 158.8154 l
333.5391 158.5762 l
332.8184 158.0957 l
331.3789 157.376 l
330.6602 157.1357 l
330.4189 156.8955 l
329.9395 156.415 l
329.2197 155.9355 l
328.9795 155.6953 l
328.5 155.2148 l
326.5801 153.5352 l
326.3398 153.0557 l
324.1807 150.8945 l
322.9814 149.4551 l
322.7402 149.4551 l
322.7402 149.2148 l
321.7813 147.7744 l
318.9014 143.6934 l
317.9414 142.4941 l
315.542 139.8535 l
315.542 139.373 l
315.3018 138.6533 l
314.3418 135.7734 l
314.1025 135.5332 l
310.2637 130.9727 l
310.2637 130.7324 l
309.7832 130.4932 l
309.5439 129.5322 l
305.7041 123.0518 l
305.7041 122.8115 l
304.9844 121.6113 l
303.3047 118.7314 l
302.8247 117.5313 l
302.1045 116.5713 l
301.625 115.8516 l
301.145 114.6514 l
300.1851 112.9707 l
299.9453 112.0107 l
300.1851 111.29 l
302.3447 109.3701 l
302.1045 107.9307 l
300.665 106.4902 l
300.4248 106.25 l
300.1851 106.0107 l
298.0254 103.3701 l
294.666 99.7695 l
292.5063 96.1689 l
290.5869 93.2891 l
285.3076 84.6475 l
283.6279 78.168 l
283.6279 77.9268 l
282.1885 75.5273 l
280.0288 74.5664 l
279.7886 74.5664 l
278.5889 73.8467 l
278.1089 73.3672 l
276.1895 71.9268 l
275.4697 71.2061 l
274.2695 70.2471 l
273.79 69.7666 l
269.7104 65.6855 l
268.9907 64.7266 l
265.6313 60.6455 l
265.6313 60.8857 l
264.6714 61.3652 l
264.4316 61.6055 l
261.792 61.126 l
261.5522 61.126 l
260.5923 60.6455 l
259.8726 60.165 l
256.0332 58.2451 l
255.3135 58.0059 l
254.1133 57.7646 l
253.1538 57.5254 l
252.9136 57.2852 l
252.6738 57.2852 l
251.7139 57.2852 l
250.0342 57.2852 l
244.0352 58.0059 l
243.0757 58.0059 l
242.3555 58.7256 l
241.1558 60.6455 l
242.8354 68.5664 l
243.0757 68.8066 l
243.0757 69.0469 l
244.0352 73.3672 l
244.0352 74.0869 l
244.5151 76.2471 l
244.7554 76.9678 l
244.7554 77.207 l
244.9951 78.4072 l
245.7148 80.0869 l
245.7148 80.5674 l
246.4351 82.4883 l
246.4351 82.7275 l
247.1548 84.4082 l
247.3945 84.6475 l
247.8745 85.8477 l
248.3545 87.0479 l
249.0742 88.248 l
249.0742 88.4883 l
249.5542 89.209 l
249.5542 89.4482 l
249.7944 89.6885 l
251.4741 92.8096 l
251.9541 94.0088 l
253.3936 96.8896 l
255.793 101.4492 l
256.5132 102.8896 l
256.9932 103.6104 l
257.7129 105.0508 l
258.4326 106.9697 l
258.9126 108.8906 l
259.6323 111.0508 l
259.6323 111.29 l
259.6323 111.5313 l
261.0723 119.9316 l
260.832 124.252 l
260.832 124.4922 l
260.5923 124.7314 l
259.8726 125.6924 l
259.6323 125.6924 l
256.7529 129.0527 l
256.0332 129.293 l
254.5933 130.0127 l
249.7944 131.6934 l
244.2754 133.6133 l
243.7954 133.6133 l
243.0757 133.8525 l
241.6357 134.0938 l
240.6758 134.333 l
240.436 134.333 l
238.0366 134.0938 l
235.6367 134.0938 l
232.7573 134.333 l
229.3979 134.8135 l
228.6782 135.0527 l
228.918 136.4932 l
229.8779 137.4531 l
229.8779 137.9336 l
229.3979 139.1338 l
229.3979 139.373 l
229.3979 139.6143 l
228.438 140.0938 l
227.2383 141.0537 l
225.7988 141.2939 l
225.0786 140.5732 l
224.3589 140.0938 l
223.3989 140.5732 l
220.9995 140.5732 l
215.7207 139.1338 l
213.3208 139.8535 l
212.3613 140.0938 l
210.9214 140.0938 l
210.6816 139.8535 l
210.2017 139.6143 l
209.2417 138.8936 l
207.3223 135.7734 l
206.3623 133.8525 l
204.2026 130.7324 l
203.7227 130.9727 l
201.563 133.1328 l
199.4033 135.293 l
197.4839 137.4531 l
197.7236 139.6143 l
197.9639 141.7734 l
196.5239 147.0547 l
195.0845 149.4551 l
188.6055 155.2148 l
187.1655 155.2148 l
185.2461 156.1758 l
184.5264 156.6553 l
181.8867 157.8555 l
180.687 158.5762 l
180.4468 158.5762 l
179.9668 159.7764 l
180.207 160.4951 l
180.207 161.4561 l
179.9668 161.9355 l
178.2871 166.0156 l
178.2871 166.2559 l
177.8076 166.2559 l
175.8877 166.7363 l
174.688 167.2158 l
173.728 167.4561 l
171.5684 166.0156 l
171.3286 166.0156 l
170.6089 164.0957 l
169.8887 163.1357 l
169.1689 163.8564 l
166.0498 166.7363 l
163.8901 169.377 l
162.4502 173.2168 l
161.4902 175.8574 l
161.2505 177.5371 l
161.2505 177.7773 l
160.7705 178.2568 l
159.8105 179.6982 l
157.8911 180.6572 l
155.0117 180.418 l
154.2915 179.9375 l
153.5718 179.2178 l
152.8521 178.498 l
147.0933 183.5381 l
146.1333 185.2188 l
146.1333 186.4189 l
146.1333 186.8984 l
145.8931 187.3779 l
145.4136 188.8184 l
145.1733 189.5391 l
145.1733 189.7783 l
144.9336 189.7783 l
144.2134 190.0186 l
143.2539 190.499 l
141.814 190.9785 l
139.8945 191.6982 l
139.8945 191.9395 l
137.7349 193.3789 l
135.335 196.499 l
134.1353 198.8994 l
133.4155 200.8193 l
131.9756 203.9395 l
130.2959 207.0605 l
130.2959 207.3008 l
127.8965 207.0605 l
126.2168 207.7813 l
122.8574 210.1807 l
121.418 211.3809 l
121.1777 211.3809 l
121.1777 211.6211 l
120.938 212.1016 l
120.6978 213.3018 l
114.6992 213.7813 l
114.459 213.7813 l
114.2192 213.7813 l
112.7793 216.6611 l
112.5396 218.5811 l
112.5396 219.3018 l
112.5396 219.541 l
113.0195 224.3428 l
116.3789 224.582 l
116.6187 225.3018 l
116.3789 225.3018 l
116.1387 225.543 l
115.8989 225.543 l
115.8989 226.7432 l
115.8989 228.4229 l
116.6187 232.9824 l
116.6187 234.4229 l
116.6187 235.623 l
115.6587 235.8633 l
115.1787 237.0635 l
115.4189 237.7832 l
116.8584 239.4639 l
118.5381 241.3838 l
119.498 243.5439 l
119.7383 243.7842 l
120.2178 244.9844 l
119.978 247.8643 l
119.498 248.8242 l
118.5381 249.5449 l
118.0586 249.5449 l
117.0986 249.7852 l
115.8989 250.9854 l
115.1787 251.7051 l
114.459 252.4258 l
113.979 252.665 l
113.979 252.9053 l
113.0195 253.3857 l
112.7793 253.625 l
110.8599 255.0654 l
110.3799 256.2656 l
110.1396 256.5059 l
110.1396 257.2256 l
110.1396 257.9453 l
109.8999 259.626 l
109.6602 261.5459 l
109.6602 262.9863 l
109.6602 263.2266 l
110.1396 263.9463 l
110.3799 264.666 l
111.5796 265.627 l
111.8193 265.627 l
112.5396 266.3467 l
113.0195 267.0664 l
113.499 267.5469 l
113.7393 267.7861 l
114.2192 268.0273 l
115.1787 268.2666 l
115.8989 268.9863 l
115.8989 269.2266 l
116.6187 269.9473 l
117.0986 270.4268 l
117.0986 270.667 l
117.3384 270.9072 l
117.5786 271.1475 l
117.5786 271.3867 l
118.0586 272.1064 l
118.7783 272.8271 l
119.0181 273.0674 l
119.498 274.0273 l
119.978 274.5068 l
120.458 276.1875 l
120.6978 276.4277 l
121.1777 279.3076 l
121.1777 279.5479 l
121.1777 281.9482 l
121.6577 282.668 l
122.3774 283.1484 l
124.0571 283.8682 l
124.7773 285.5479 l
125.0171 286.2686 l
125.2568 286.748 l
125.9771 287.9482 l
126.6968 288.1885 l
127.1768 287.9482 l
127.4165 287.9482 l
127.4165 287.709 l
128.1367 287.4688 l
128.3765 287.9482 l
128.6162 288.9082 l
128.3765 289.3887 l
128.6162 290.8291 l
128.8564 291.7891 l
128.8564 292.5098 l
129.0962 293.2295 l
129.3364 293.71 l
129.3364 293.9492 l
129.8164 294.9092 l
130.0562 295.6289 l
130.2959 296.1094 l
131.0161 298.2695 l
131.2559 298.9893 l
131.7358 300.4307 l
131.7358 301.3896 l
132.2158 301.8701 l
132.6958 302.5898 l
134.3755 303.5508 l
135.335 304.75 l
135.335 304.9902 l
S
Q
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 100 Lb
(Text) Ln
0 A
q
0 J 0 j 1 w 4 M []0 d0 XR
6.7188 7.1201 m
6.7188 779.7588 l
603.4893 779.7588 l
603.4893 7.1201 l
6.7188 7.1201 l
h
W
n
u
u
0 To
1 0 0 1 281.0869 459.0508 0 Tp
0 Tv
TP
0 Tr
0 O
0 0 0 0.4902 k
/_Arial-BoldItalicMT 25.9152 22.2349 -9.7562 Tf
100 100.0286 Tz
0 Tt
0 TV
0 Tc
(\116) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 301.4604 459.0508 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldItalicMT 25.9152 22.2349 -9.7562 Tf
100 100.0286 Tz
0 Tt
0 TV
0 Tc
(\145) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 317.5322 459.0508 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldItalicMT 25.9152 22.2349 -9.7562 Tf
100 100.0286 Tz
0 Tt
0 TV
0 Tc
(\167) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 339.3477 459.0508 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldItalicMT 25.9152 22.2349 -9.7562 Tf
100 100.0286 Tz
0 Tt
0 TV
0 Tc
(\040) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 348.207 459.0508 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldItalicMT 25.9152 22.2349 -9.7562 Tf
100 100.0286 Tz
0 Tt
0 TV
0 Tc
(\112) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 364.2783 459.0508 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldItalicMT 25.9152 22.2349 -9.7562 Tf
100 100.0286 Tz
0 Tt
0 TV
0 Tc
(\145) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 380.3496 459.0508 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldItalicMT 25.9152 22.2349 -9.7562 Tf
100 100.0286 Tz
0 Tt
0 TV
0 Tc
(\162) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 392.0938 459.0508 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldItalicMT 25.9152 22.2349 -9.7562 Tf
100 100.0286 Tz
0 Tt
0 TV
0 Tc
(\163) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 408.1641 459.0508 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldItalicMT 25.9152 22.2349 -9.7562 Tf
100 100.0286 Tz
0 Tt
0 TV
0 Tc
(\145) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 424.2363 459.0508 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldItalicMT 25.9152 22.2349 -9.7562 Tf
100 100.0286 Tz
0 Tt
0 TV
0 Tc
(\171) Tx 1 0 Tk
TO
U

U

Q
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 100 Lb
(Scale) Ln
0 A
q
0 J 0 j 1 w 4 M []0 d0 XR
611.8877 792 m
611.8877 0 l
0 0 l
0 792 l
611.8877 792 l
h
W
n
0 R
0 0 0 1 K
1 J 1 j 0.9598 w 3.85 M324.9004 56.085 m
324.9004 65.2061 l
S
430.7207 56.085 m
430.7207 65.2061 l
S
536.3018 56.085 m
536.3018 65.2061 l
S
351.5352 56.085 m
351.5352 62.5654 l
S
377.9307 56.085 m
377.9307 62.5654 l
S
404.3262 56.085 m
404.3262 62.5654 l
S
457.1162 56.085 m
457.1162 62.5654 l
S
483.5107 56.085 m
483.5107 62.5654 l
S
509.9063 56.085 m
509.9063 62.5654 l
S
324.9004 56.085 m
536.3018 56.085 l
S
u
0 To
1 0 0 1 321.2305 72.167 0 Tp
0 Tv
TP
0 Tr
0 O
0 0 0 1 k
0 J 0 j 1 w 4 M/_ArialMT 13.2013 11.3265 -4.2866 Tf
99.972 100 Tz
0 Tt
0 TV
0 Tc
(0) Tx 1 0 Tk
TO
U


u
0 To
1 0 0 1 423.3799 72.167 0 Tp
0 Tv
TP
0 Tr
/_ArialMT 13.2013 11.3265 -4.2866 Tf
99.972 100 Tz
0 Tt
0 TV
0 Tc
(25) Tx 1 0 Tk
TO
U


u
0 To
1 0 0 1 528.9609 72.167 0 Tp
0 Tv
TP
0 Tr
/_ArialMT 13.2013 11.3265 -4.2866 Tf
99.972 100 Tz
0 Tt
0 TV
0 Tc
(50) Tx 1 0 Tk
TO
U


u
0 To
1 0 0 1 365.0879 72.167 0 Tp
0 Tv
TP
0 Tr
/_ArialMT 13.2013 11.3265 -4.2866 Tf
99.972 100 Tz
0 Tt
0 TV
0 Tc
(12\056\65) Tx 1 0 Tk
TO
U


u
0 To
1 0 0 1 547.5801 72.167 0 Tp
0 Tv
TP
0 Tr
/_ArialMT 13.2013 11.3265 -4.2866 Tf
99.972 100 Tz
0 Tt
0 TV
0 Tc
(\115\151\154\145\163) Tx 1 0 Tk
TO
U


Q
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
