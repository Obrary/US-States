%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 11.0.0
%%For: (Chris Chubb) (Chris Chubb Maps)
%%Title: (CT_09_00 [Converted].ai)
%%CreationDate: 6/19/2006 12:31 PM
%%BoundingBox: 0 0 792 612
%%HiResBoundingBox: 0 0 791.9961 612
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentFonts: ArialMT
%%+ Arial-BoldItalicMT
%%DocumentNeededFonts: ArialMT
%%+ Arial-BoldItalicMT
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_typography_AI5 1.0 1
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%CMYKProcessColor: 1 1 1 1 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 3 () 
%AI3_TemplateBox: 396 306 396 306
%AI3_TileBox: 88.2998 -72.2198 702.2198 685.7002
%AI3_DocumentPreview: None
%AI5_ArtSize: 1296 1296
%AI5_RulerUnits: 0
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 3
%AI8_OpenToView: -225.5 639.5 1 1178 682 26 0 1 33 114 0 0
%AI5_OpenViewLayers: 777
%%PageOrigin:0 0
%AI7_GridSettings: 0.01 8 0.01 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI7_Thumbnail: 128 100 8
%%BeginData: 8892 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDABFFCFA7C9A7C9A7
%C9A7C9A7C9A7CFA8CFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FD60FFA6
%CEC8CEA6CEC8CEA6CEC8CEA6CEA6CEA6C9A6C9A6C9A6C9A6C9A6C9A6CEA6
%C9A6CEA7C9A6CEA7C9A7FFFFFFA6CEA7C9A7CFA7C9A7FFCAC9A7CEA7C9A7
%CFA7C9A7CFA7CAA7CFA7CAA7CFA7CAA7CFA7CAA7CFCACFCAFFCFFFCFFFFF
%FFCAFFFFFFCFFFFFFFCFFD1AFFCAC8A6CEA7CEA6CEA7CEA6CEA7CEA6CEA7
%CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA6CEA6CEA6A7FFFFA7A6A6
%CEA6CDA6CEA6C8A6C8A6CDA6CEA6CDA6CEA6CDA6CEA6CDA6CEA6CDA6CEA6
%CDA6CEA6CEA6C8A6C8A6C8A6A6A6C8A6A6A6C8A6C8A6C9A6A6A7FD1AFFA6
%FD27CEA6CFA7C9FD38CEA6CFFD19FFCAC8A6CEA7CEA6CEA7CEA6CEA7CEA6
%CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7
%CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6
%CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA7FD1A
%FFA6FD63CEC8CAFD19FFA7C8A7CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CE
%A6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CE
%A6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CE
%A6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA7FD19FFCFC8FD63
%CEC8CEFD19FFA7CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CE
%A6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CE
%A7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CE
%A6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7FD19FFC9A6FD63CEA6CEFD
%19FFA7CDA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CE
%A6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CE
%A6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CE
%A6CEA6CEA6CEA6CEA6CEA6CEA7CDA7FD19FFCEA6FD63CEA6CEFD19FFA6CE
%A6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CE
%A7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CE
%A6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CE
%A7CEA6CEA7CEA6CEA7CEA6FD18FFCAC9FD65CEC9FD19FFA6CEA6CEA6CEA6
%CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6
%CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6
%CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6
%CEA6CEA6CEA6FD18FFCFFD66CEC9CFFD17FFCFA6CEA7CEA6CEA7CEA6CEA7
%CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6
%CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7
%CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6
%CEA6FD18FFCACEA7FD63CEA7C9FD18FFCAA6CEA6CEA6CEA6CEA6CEA6CEA6
%CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6
%CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6
%CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6
%FD18FFA7FD67CEFD18FFC9A6CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6
%CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7
%CEA6CEA7CEA6CECECEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6
%CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6FD18FFA7FD27
%CEA7FD3ECEC9CAFD17FFC9A6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6
%CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6A77CA7A6CEA7CEA6CEA7CEA6
%CEA7CEA6CEA7A7A6CEA7CEA6CEA7A7A6CEA6CEA6CEA6CEA6CEA6CEA6CEA6
%CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6FD18FFA7FD25
%CE7DCECEA77DA77DA7A7A77DA77D7DFD04A77DFD07A77DA7FD25CEC9CFFD
%17FFC9A6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7
%CEA6CEA7CEA6CEA7CEA77DA7A77CA77DA77DA77DA77C7D7D7D7CA77DA77C
%A77DA77DA77DA7A7CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7
%CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA6CFFD17FFA6FD25CEFD04A77DCEA7
%A7A7CEA7CEA7CECEFD09A77DCEA7FD25CEA7C9CFFD16FFA8C9A7CEA6CEA6
%CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6
%CEA6CEA6CECDCEA6CECDCEA6CEA6CEA6CECDCEA6CECDCEA6CECDCEA6CEA6
%CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6
%CEA6CEA6CEA6CEA6FD18FFA6FD67CEFD17FFA8C8A7CEA6CEA7CEA6CEA7CE
%A6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CE
%A7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CE
%A6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CE
%A7CEA6FD17FFCFA6FD66CEC9CAFD16FFA7C8A6CEA6CEA6CEA6CEA6CEA6CE
%A6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CE
%A6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CE
%A6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CE
%A6FD17FFCAA6FD66CEC9CFFD16FFA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CE
%A7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CE
%A6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CE
%A7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA6FD
%17FFCEC8FD65CEA6CEFD17FFA7CEA7CEA6CEA6CEA6CEA6CEA6CEA6CEA6CE
%A6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CE
%A6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CE
%A6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA7CEA6FD17FF
%FD67CEA6CEFD17FFA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CE
%A7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CE
%A6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CE
%A7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CDA7FD17FFC9A7FD65
%CEA6C9FD17FFA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CE
%A6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CE
%A6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CE
%A6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA7C9A0C9A7FD16FFCFC9FD64CEA6
%FD19FFCFA6CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CE
%A6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CE
%A7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CE
%A6CEA7CEA6CEA7CEA6CEA7CEA6CEA7C8A7FD18FFA7FD65CEC8C9FD18FFC9
%A6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CE
%A6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CE
%A6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CE
%A7CEA6CEA7CDA6CEA6CEA7CDA7FD18FFA7FD51CEC8FD05CEA6CECECEC8CE
%A6C8A7C9A6C9A6CEA6FD19FFC9A6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6
%CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7
%CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA7
%CEA7CEA0C9A6CEA6CEA6C9A7C9A6C9A7CFCAFD05FFA7FD1AFFA7FD25CEA7
%FD1BCEA7FD07CEA7CECECEA6C9A6FFFFCFA7C9A6CFFD28FFCAA6CEA6CEA6
%CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6
%CEA6A6A6CEA6CEA6CEA7CEA6CEA7CEA6CEA6CEA6CEA6CDA6CEA7CEA6CEA6
%A6A6C8A6CEA6C8A6A6A6C9A6CAA8CFFD04FFCAFD2BFFCAA6FD21CEC8C8A7
%C9CECEA6CEC8C9A6CEA6CEA6CEA6C9A6CEC9CEA7C9C8C8A6C9A7CFCFFFFF
%C9A6C9C9FFCFFD37FFA7A6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CE
%A6CEA7CEA6CEA7CEA6CEA7CEA0C9A8FF9FC8A6A7A7C9A8FFFFFFA7A69FC9
%FD06FFA8C9A8CFCAFD07FFCBFD3BFFC9A6FD1BCEA7CEA6FD05FFCAFD5AFF
%A8A6A6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6C8A6C8
%A0FD60FFA7C8C8FD17CEA6C9CACFA7FD5EFFA8C9A6CEA7CEA6CEA7CEA6CE
%A7CEA6CEA7CEA6CEA7CEA7CEA7CEA6CEA6C9FD60FFCFA6C8C8FD14CEC8A6
%C9C8CEA6CAFD5FFFA7C9A6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CE
%A7CEA6A6A7FFA8C9A6A6A8FD5DFFCAA6FD15CEA6CEA6CFFD63FFA7C8A6CE
%A7CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA6A6A7CFA6CAFD63FFA0CEA7
%FD11CEA6C9A7FD69FFC9A6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA7C8A0CF
%FD6CFFC9A6FD0DCEC8C8A6FD6FFFA6A6CEA7CEA6CEA7CEA7CEA6A6A0CAA7
%FD70FFCFC8A7CECECEA7CEA6C8A0FFA7CFFD73FFA7A6A6C8A6C89FCAA7C9
%FD77FF9FCFCFFFA7CFFD79FFCFCAFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFD
%FCFFFD42FFA8FD53FF7DA8FD08FFA87D52A8FD07FFA8527DFD13FF52527D
%52527DA8FD4EFF7DA8FD08FF7D7D7DA8FD07FFA852A8FD13FF7D7DA8527D
%52A8FD5FFFA8FD09FFA8FD05FFA8FD5EFFA8A8A8FFA8A8A8FFA8FFA8A8A8
%FFA8FFA8A8A8FFA8A8A8FFA8FFA8A8A8FFA8FFA8A8A8FFA8FFA8FFA8FFA8
%FFA8FDFCFFFDFCFFFDFCFFFD56FFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 1
%%CreationDate:(6/10/1996) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 68 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/havefont
{
	systemdict /languagelevel known
		{
		/Font resourcestatus dup
			{ exch pop exch pop }
		if
		}
		{
		systemdict /FontDirectory get 1 index known
			{ pop true }
			{
			systemdict /fileposition known
				{
				dup length 6 add exch
				Ss 6 250 getinterval
				cvs pop
				Ss exch 0 exch getinterval
				status
					{ pop pop pop pop true }
					{ false }
				ifelse
				}
				{
				pop false
				}
			ifelse
			}
		ifelse
		}
	ifelse
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
/subststring {
	exch 2 index exch search
	{
		exch pop
		exch dup () eq
		{
			pop exch concatstring
		}
		{
			3 -1 roll
			exch concatstring
			concatstring
		} ifelse
		exch pop true
	}
	{
		pop pop false
	} ifelse
} def
/concatstring {
	1 index length 1 index length
	1 index add
	string
	dup 0 5 index putinterval
	dup 2 index 4 index putinterval
	4 1 roll pop pop pop
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	2 index havefont
	{
		3 index
		255 string
		cvs
		
		dup
		(_Symbol_)
		eq
		{
			pop
			2 index
			findfont
			
		}
		{
			1 index 0 eq
			{
				dup length 1 sub
				1 exch
				getinterval
				
				cvn
				findfont
			}
			{
				pop 2 index findfont
			} ifelse
		} ifelse
	}
	{
		dup 1 eq
		{
			2 index 64 string cvs
			dup (-90pv-RKSJ-) (-83pv-RKSJ-) subststring
			{
				exch pop dup havefont
				{
					findfont false
				}
				{
					pop true
				} ifelse
			}
			{
				pop	dup
				(-90ms-RKSJ-) (-Ext-RKSJ-) subststring
				{
					exch pop dup havefont
					{
						findfont false
					}
					{
						pop true
					} ifelse
				}
				{
					pop pop true
				} ifelse
			} ifelse
			{
				1 index 1 eq
				{
					/Ryumin-Light-Ext-RKSJ-V havefont
					{/Ryumin-Light-Ext-RKSJ-V}
					{/Courier}
					ifelse
				}
				{
					/Ryumin-Light-83pv-RKSJ-H havefont
					{/Ryumin-Light-83pv-RKSJ-H}
					{/Courier}
					ifelse
				} ifelse
				findfont
				[1 0 0.5 1 0 0] makefont
			} if
		}
		{
			/Courier findfont
		} ifelse
	} ifelse
	_wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 10 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontScript exch def
	/FontDirection exch def
	/FontRequest exch def
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
W B
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
W F 
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
W S
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat
	_shift aload pop _lineorientation 1 eq { exch } if translate
	_scale aload pop _lineorientation 1 eq _yokoorientation 1 eq or { exch } if scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	1 index type /nametype eq
	{
		dup 0.75 mul 1 index 0.25 mul neg
	} if
	/_fontDescent exch ddef
	/_fontAscent exch ddef
	/_fontSize exch ddef
	/_fontRotateAdjust _fontAscent _fontDescent add 2 div neg ddef
	/_fontHeight _fontSize ddef
	findfont _fontSize scalefont setfont
} def
/Tl
{
	pop neg 0 exch
	_leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	0 exch
	_shift astore pop
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	count 1 eq { 100 } if
	100 div exch 100 div exch
	_scale astore pop
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Tg
{
	pop
} def
/TG
{
	pop
} def
/Tv
{
	/_lineorientation exch ddef
} def
/TV
{
	/_charorientation exch ddef
} def
/Ty
{
	dup /_yokoorientation exch ddef 1 sub neg Tv
} def
/TY
{
	pop
} def
/T~
{
	Tx
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	_fontSize mul 1000 div
	_lineorientation 0 eq { neg 0 } { 0 exch } ifelse
	rmoveto
	pop
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	Td
} def
/T*-
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	exch neg exch neg
	Td
} def
/T-
{
	_ax neg 0 rmoveto
	_lineorientation 1 eq _charorientation 0 eq and { 1 TV _hyphen Tx 0 TV } { _hyphen Tx } ifelse
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ findfont _fontSize scalefont setfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%
/X^
{
	currentfont 5 1 roll
	dup havefont
		{
		findfont _fontSize scalefont setfont
		}
		{
		pop
		exch
		} ifelse
	2 index 0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	pop	pop
	setfont
} def
/T^	/X^	load def
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: ArialMT
%%IncludeFont: Arial-BoldItalicMT
userdict /_useSmoothShade false put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 128/Euro 130/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE 145/quoteleft
/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark
/scaron/guilsinglright/oe/dotlessi 159/Ydieresis /space 164/currency 166/brokenbar
168/dieresis/copyright/ordfeminine 172/logicalnot/hyphen/registered/macron/ring
/plusminus/twosuperior/threesuperior/acute/mu 183/periodcentered/cedilla
/onesuperior/ordmasculine 188/onequarter/onehalf/threequarters 192/Agrave
/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute
/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave
/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute
/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex
/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute
/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
TE
%AI55J_Tsume: None
%AI3_BeginEncoding: _ArialMT ArialMT
[/_ArialMT/ArialMT 0 0 0 TZ%AI3_EndEncoding TrueType
%AI55J_Tsume: None
%AI3_BeginEncoding: _Arial-BoldItalicMT Arial-BoldItalicMT
[/_Arial-BoldItalicMT/Arial-BoldItalicMT 0 0 0 TZ%AI3_EndEncoding TrueType
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Registration]) 0 Xs
([Registration]) Pc
0.34 0.56 1 0 k
(C=34 M=56 Y=100 K=0) Pc
0 0 0.4 0.05 k
(C=0 M=0 Y=40 K=5) Pc
0 0 0 0.49 k
(C=0 M=0 Y=0 K=49) Pc
0 0 0 1 k
(C=0 M=0 Y=0 K=100) Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 100 Lb
(State) Ln
0 A
q
0 J 0 j 1 w 4 M []0 d0 XR
6.7202 7.1064 m
6.7202 602.8789 l
786.2363 602.8789 l
786.2363 7.1064 l
6.7202 7.1064 l
h
W
n
0 O
0 0 0.4 0.05 k
0 R
0.34 0.56 1 0 K
1 J 1 j 1.68 w 3.85 M108.4795 385.4048 m
108.4795 386.8452 l
108.9595 393.0859 l
108.9595 393.8062 l
109.1997 395.0063 l
109.1997 396.2065 l
110.6392 412.769 l
111.1196 419.25 l
112.0796 431.4922 l
113.2793 443.2539 l
113.2793 443.4937 l
114.2393 456.2158 l
114.4795 456.2158 l
114.7197 459.5762 l
114.7197 459.8164 l
115.1997 463.6572 l
115.1997 464.8574 l
115.6792 468.6978 l
116.3994 479.4995 l
116.3994 479.7393 l
116.6392 481.4199 l
117.5996 491.2612 l
117.5996 492.2212 l
117.5996 493.1816 l
119.0396 508.5439 l
119.7593 526.7866 l
138.479 527.2666 l
138.7192 527.2666 l
139.9194 527.2666 l
141.5996 527.0269 l
142.3193 527.0269 l
161.9995 526.5469 l
173.999 526.3066 l
178.7993 526.0664 l
179.519 526.0664 l
190.3193 525.8267 l
191.0391 525.8267 l
191.519 525.8267 l
213.5991 525.1064 l
213.8389 525.1064 l
214.5591 525.1064 l
215.0391 525.1064 l
236.1587 524.3862 l
252.959 523.9063 l
280.3188 523.186 l
296.6387 522.9463 l
296.8784 522.9463 l
299.9985 522.7061 l
305.5186 522.7061 l
307.6787 522.7061 l
316.5586 522.7061 l
328.0786 522.4663 l
350.1582 522.4663 l
350.3984 522.4663 l
356.3984 522.2261 l
360.2383 521.9858 l
360.9585 521.9858 l
368.8784 521.9858 l
367.6782 507.584 l
375.8384 508.5439 l
379.6782 508.7842 l
383.0381 509.2642 l
384.7183 509.5039 l
386.1582 509.5039 l
386.3979 511.1846 l
386.3979 511.4243 l
387.3584 512.1445 l
387.3584 513.1045 l
388.0781 513.8247 l
388.7983 514.7852 l
388.0781 515.2651 l
387.8384 515.5049 l
387.8384 515.7451 l
387.8384 516.4653 l
388.3184 516.4653 l
389.2783 516.2251 l
389.5181 516.2251 l
390.7183 517.9053 l
391.6782 519.5854 l
390.958 520.3057 l
389.5181 520.7856 l
390.2383 521.7461 l
391.6782 521.9858 l
403.6777 521.9858 l
405.3574 521.9858 l
405.5977 521.9858 l
406.0781 521.9858 l
411.1182 521.9858 l
411.3574 521.9858 l
411.5977 521.9858 l
412.3184 521.9858 l
413.2773 521.9858 l
413.7578 521.9858 l
415.918 521.7461 l
420.7178 521.2661 l
431.7578 520.5459 l
441.3574 520.0659 l
444.7178 519.8257 l
445.1982 517.6655 l
451.4385 517.6655 l
451.6777 517.6655 l
454.3184 517.6655 l
456.958 519.1055 l
457.6777 519.5854 l
461.998 520.0659 l
465.1172 520.3057 l
473.0371 521.0259 l
473.2773 521.0259 l
474.2383 521.2661 l
475.4375 521.2661 l
476.3975 521.0259 l
476.6377 521.0259 l
480.2383 521.0259 l
481.1982 521.0259 l
492.2383 521.0259 l
496.0771 521.0259 l
498.957 521.0259 l
499.4375 521.0259 l
499.918 521.0259 l
500.1572 521.0259 l
500.6377 521.0259 l
503.0371 521.0259 l
506.3975 521.0259 l
518.877 520.7856 l
522.4775 520.7856 l
533.7568 520.5459 l
545.2773 520.3057 l
550.5576 520.3057 l
550.7969 520.3057 l
552.2373 520.3057 l
557.7568 520.3057 l
563.0371 520.3057 l
569.5176 520.3057 l
577.1973 520.0659 l
580.3174 520.0659 l
593.7568 520.0659 l
594.2373 520.0659 l
595.917 519.8257 l
613.917 519.8257 l
616.5566 519.5854 l
619.4375 519.5854 l
631.6768 519.1055 l
632.6367 519.1055 l
644.6367 518.6255 l
646.0771 518.6255 l
656.6367 518.6255 l
659.7568 518.3857 l
665.7568 518.3857 l
671.0361 518.3857 l
671.9971 518.3857 l
672.2363 518.3857 l
674.1563 518.3857 l
683.0361 518.1455 l
687.1172 518.1455 l
698.6367 517.6655 l
699.8369 517.6655 l
705.3564 517.6655 l
705.8369 517.6655 l
709.916 517.4253 l
712.5566 517.4253 l
712.7969 517.4253 l
714.9561 517.4253 l
716.6367 517.4253 l
719.0361 517.4253 l
720.4766 517.4253 l
721.4365 517.4253 l
726.4766 517.4253 l
728.1563 517.4253 l
728.877 517.4253 l
741.5967 517.1855 l
743.2764 517.1855 l
743.7559 511.4243 l
743.7559 503.0229 l
743.9961 499.9028 l
743.9961 493.9019 l
743.9961 491.2612 l
744.2363 484.54 l
744.2363 484.0601 l
744.2363 483.5801 l
744.2363 482.1396 l
744.7168 473.2583 l
745.1963 459.8164 l
745.4365 455.0156 l
745.4365 454.7754 l
745.4365 453.8154 l
745.4365 452.8555 l
745.4365 449.7349 l
745.4365 449.4946 l
745.6758 445.1743 l
746.1563 437.7329 l
746.1563 437.2529 l
746.6367 425.0107 l
746.6367 423.5708 l
747.1162 406.7681 l
747.5967 396.9268 l
748.3164 381.3242 l
748.0762 375.3232 l
747.3564 359.481 l
746.877 350.3594 l
746.3965 340.5181 l
746.1563 333.5566 l
745.6758 325.6357 l
745.6758 323.2354 l
744.9561 310.2734 l
744.9561 308.353 l
744.7168 302.3525 l
744.4766 300.1914 l
744.4766 296.3516 l
744.2363 294.6709 l
744.2363 293.9512 l
744.2363 292.75 l
739.1963 293.4707 l
736.5566 293.9512 l
735.3564 293.4707 l
728.6367 291.0703 l
727.6768 290.3496 l
727.4365 289.6299 l
727.4365 288.9102 l
727.916 285.0693 l
727.916 284.8291 l
728.1563 284.5898 l
729.1172 283.1484 l
729.3564 283.1484 l
731.0361 280.9893 l
731.0361 280.748 l
731.0361 280.5088 l
731.2764 279.7891 l
731.2764 279.5479 l
731.2764 279.0684 l
731.2764 278.3477 l
731.5166 278.1084 l
731.7559 275.9482 l
731.7559 275.4678 l
731.7559 274.5078 l
731.7559 274.2676 l
731.7559 274.0273 l
731.7559 273.3076 l
731.7559 273.0674 l
731.7559 270.4268 l
731.7559 268.9863 l
731.7559 266.3457 l
731.2764 264.9063 l
728.6367 262.5059 l
725.9961 260.8262 l
725.5166 260.585 l
721.4365 257.9453 l
718.0762 261.0654 l
715.916 261.7852 l
713.0361 262.7461 l
711.5967 263.2266 l
709.1973 262.9854 l
704.3965 262.2656 l
702.2363 262.0254 l
701.5166 261.7852 l
700.3164 261.5449 l
698.1563 262.5059 l
697.916 262.7461 l
693.1172 263.7061 l
692.6367 263.7061 l
689.5166 263.7061 l
685.4365 260.8262 l
684.2363 260.3447 l
680.1563 258.9053 l
677.0361 260.8262 l
676.7969 260.8262 l
676.0762 260.8262 l
673.917 257.2246 l
669.3564 256.7451 l
668.3975 256.7451 l
664.5566 256.2646 l
662.1563 256.0254 l
661.4375 256.0254 l
649.1973 256.5049 l
641.7568 256.7451 l
639.1172 256.9854 l
638.1572 256.9854 l
635.2773 255.3047 l
634.5566 255.0645 l
632.6367 252.4238 l
631.6768 251.7041 l
628.0771 249.3037 l
623.0371 249.5439 l
619.917 249.5439 l
612.2373 252.6641 l
609.8369 253.624 l
605.2773 256.2646 l
603.8369 257.9453 l
601.4375 258.665 l
598.7969 258.1855 l
598.5566 258.1855 l
594.957 255.5449 l
594.4775 254.585 l
593.9971 249.3037 l
590.877 246.4229 l
590.3975 246.6631 l
586.5566 249.3037 l
586.3174 249.3037 l
582.4775 249.7832 l
577.6768 249.5439 l
576.4775 249.3037 l
576.957 247.623 l
576.4775 245.9434 l
572.877 243.3027 l
565.918 242.8232 l
551.998 241.623 l
548.3975 241.8633 l
547.918 242.1025 l
545.998 243.3027 l
543.3574 242.3428 l
540.7168 241.3818 l
540.7168 240.6621 l
540.957 238.502 l
540.4775 238.502 l
535.918 237.542 l
534.957 237.3018 l
526.5576 235.6221 l
523.6777 239.4619 l
522.4775 241.3818 l
522.2373 241.623 l
519.3574 241.623 l
515.5176 241.8633 l
509.998 241.8633 l
502.5576 241.8633 l
495.1172 238.7422 l
494.877 238.7422 l
491.998 238.7422 l
491.0371 238.9814 l
490.0771 238.9814 l
489.8379 238.9814 l
484.7979 237.0625 l
482.1572 234.9014 l
477.8379 235.3809 l
476.8779 237.0625 l
476.3975 237.0625 l
473.7578 236.5811 l
472.3184 235.8613 l
471.1172 233.4609 l
470.6377 233.2207 l
467.2773 231.541 l
458.3975 238.0225 l
454.0771 239.2227 l
453.8379 239.2227 l
453.5977 239.2227 l
453.3574 239.2227 l
448.5576 238.2617 l
441.3574 239.4619 l
440.6377 239.2227 l
436.0781 238.2617 l
432.4785 237.542 l
427.918 237.0625 l
427.4385 237.3018 l
424.5576 238.2617 l
424.3184 238.2617 l
423.1182 238.0225 l
422.8779 238.0225 l
420.958 237.542 l
420.2383 237.0625 l
416.3975 233.9414 l
416.1582 233.2207 l
416.1582 231.7813 l
414.2383 230.1006 l
412.7979 229.3809 l
410.3975 229.3809 l
408.4785 229.1406 l
408.2383 229.1406 l
406.7979 229.1406 l
405.5977 230.8203 l
406.5576 231.541 l
406.0781 232.7412 l
402.4785 234.6611 l
398.6387 232.9814 l
396.478 234.1816 l
394.7983 235.1416 l
391.438 237.0625 l
390.7183 237.542 l
389.5181 237.542 l
389.2783 237.542 l
388.3184 237.3018 l
386.1582 237.3018 l
385.918 237.3018 l
384.7183 237.0625 l
384.2383 237.0625 l
381.8384 236.8223 l
378.958 236.8223 l
377.5181 236.1016 l
374.1582 234.9014 l
371.7583 233.9414 l
369.8384 233.2207 l
366.958 232.0215 l
366.7183 232.7412 l
364.3184 233.7012 l
363.8384 233.7012 l
358.7983 233.7012 l
356.6382 233.7012 l
356.1582 233.7012 l
355.9185 233.4609 l
355.1982 233.2207 l
353.9985 230.8203 l
353.7583 230.3408 l
351.8384 229.6201 l
351.1182 229.6201 l
344.1582 228.6602 l
343.6782 228.4199 l
338.6382 228.9004 l
336.7183 229.6201 l
336.4785 229.6201 l
335.2783 230.3408 l
334.7983 230.5811 l
335.7583 232.2607 l
338.1582 233.2207 l
338.8784 233.4609 l
339.1182 234.9014 l
338.6382 235.8613 l
338.3984 236.3418 l
335.5186 240.6621 l
333.8384 243.3027 l
331.1982 243.0635 l
330.7183 243.0635 l
329.5186 242.3428 l
329.2783 240.4229 l
329.2783 238.7422 l
329.0386 238.2617 l
325.6782 235.8613 l
323.7583 234.4219 l
321.3584 233.7012 l
316.3184 232.501 l
314.6387 232.0215 l
313.9185 231.7813 l
312.7188 230.8203 l
311.0386 229.8604 l
309.1187 228.1807 l
308.8784 227.9404 l
307.4385 226.9805 l
307.1987 226.7402 l
305.7588 225.7803 l
305.5186 225.54 l
305.0386 225.0605 l
302.6387 223.1396 l
301.1987 221.46 l
300.7188 221.2188 l
300.2388 220.499 l
299.9985 220.2598 l
298.5586 218.3389 l
297.1187 216.4189 l
295.1987 214.9785 l
294.4785 214.2578 l
292.5586 214.2578 l
292.3184 214.498 l
292.3184 215.2188 l
291.5986 215.459 l
287.0386 215.9385 l
282.9585 216.4189 l
281.7588 216.4189 l
281.5186 216.4189 l
281.2788 216.4189 l
279.8389 215.9385 l
279.5986 215.9385 l
277.9185 215.2188 l
272.3989 211.6182 l
272.1587 211.6182 l
270.4785 210.6572 l
270.2388 210.418 l
269.5186 209.6982 l
267.8389 208.498 l
266.3989 207.0566 l
265.9189 206.5771 l
260.8789 202.4971 l
259.9189 201.2969 l
259.6787 200.3359 l
259.1987 197.9355 l
259.1987 196.9756 l
259.9189 195.5352 l
258.959 194.5752 l
257.999 194.335 l
251.7588 193.1348 l
249.1187 193.8555 l
239.2788 197.4561 l
237.1187 198.1758 l
236.8789 199.8564 l
235.439 200.0957 l
234.7188 200.3359 l
234.2388 200.3359 l
233.0391 200.0957 l
231.3589 199.376 l
224.8789 197.2158 l
218.3989 193.375 l
215.7588 191.6943 l
215.519 191.6943 l
215.519 191.4551 l
213.1191 192.1748 l
212.6392 191.6943 l
211.439 190.0146 l
209.2788 186.8936 l
208.3188 185.4531 l
203.0391 182.334 l
201.5991 182.8135 l
194.1592 185.9346 l
193.9189 186.1738 l
190.3193 185.2139 l
189.5991 184.9736 l
189.5991 184.7344 l
189.3589 184.7344 l
184.5591 181.8525 l
181.6792 180.8936 l
177.5991 179.4531 l
171.5991 178.7324 l
171.5991 178.4932 l
162.959 177.293 l
162.2393 177.293 l
158.1592 173.9316 l
155.0391 171.291 l
154.3193 171.0518 l
151.9189 170.8115 l
151.439 170.3311 l
147.1196 166.0107 l
145.439 164.8105 l
145.1992 164.5703 l
144.479 163.8506 l
139.1992 159.7695 l
134.8794 160.0098 l
134.6392 160.0098 l
134.3994 160.0098 l
133.4395 160.0098 l
132.2393 159.5303 l
129.3594 158.5693 l
128.1592 158.3301 l
126.9595 157.8496 l
123.3594 152.0889 l
119.0396 155.4492 l
117.5996 156.6494 l
116.8794 156.4092 l
109.1997 153.2891 l
108.9595 153.0488 l
108.9595 149.6885 l
106.7998 145.8477 l
104.3994 144.8877 l
103.6792 147.0479 l
103.9194 149.4482 l
102.9595 150.6484 l
102.2393 150.6484 l
101.9995 150.6484 l
101.5195 150.4082 l
100.5596 149.9277 l
95.9995 147.7686 l
95.5195 147.5273 l
92.1597 145.127 l
91.4395 144.168 l
89.9995 142.9678 l
89.2793 139.3672 l
83.9995 139.127 l
83.7593 142.2471 l
83.7593 142.7275 l
79.6797 144.6475 l
76.7998 144.4072 l
70.3198 142.2471 l
62.6396 139.8467 l
62.1597 139.6064 l
61.9199 139.3672 l
59.2798 136.9658 l
56.8794 133.3652 l
56.1597 134.3262 l
56.3999 136.4863 l
56.3999 136.7266 l
56.3999 137.2061 l
56.1597 138.6465 l
56.8794 139.8467 l
56.8794 140.0869 l
57.1196 140.3271 l
57.5996 141.7676 l
57.8398 142.2471 l
57.8398 142.9678 l
57.8398 143.207 l
57.8398 143.4473 l
57.5996 143.4473 l
56.3999 144.8877 l
55.6797 145.6074 l
54.9595 146.3271 l
53.7598 148.0078 l
53.52 148.0078 l
52.0796 149.9277 l
51.8398 150.1689 l
51.6001 150.4082 l
50.3999 152.0889 l
48.4795 154.249 l
48 155.209 l
47.52 155.6895 l
45.8398 157.6094 l
45.3599 158.3301 l
43.1997 160.7305 l
38.8799 166.251 l
35.7598 170.0908 l
35.04 171.291 l
32.8799 173.4521 l
30.96 176.0928 l
42.7197 181.373 l
42.7197 181.6133 l
47.52 183.7734 l
52.3198 185.9346 l
52.7998 186.1738 l
55.6797 187.6143 l
63.5996 191.2148 l
65.52 192.1748 l
66.2397 192.415 l
72.7197 195.2949 l
79.1997 198.1758 l
80.6396 198.8965 l
83.2793 200.0957 l
85.9199 201.2969 l
91.1997 203.6973 l
94.7998 205.1367 l
97.9194 206.8174 l
101.7593 208.498 l
106.3198 210.6572 l
109.6792 212.0977 l
110.3994 212.5781 l
111.5996 213.0576 l
113.5195 214.0186 l
114.4795 214.2578 l
116.6392 215.2188 l
120.4795 217.1387 l
121.4395 217.3789 l
117.8394 222.1797 l
115.4395 225.0605 l
113.9995 226.5 l
112.7998 228.1807 l
108.7197 233.2207 l
108.2393 233.7012 l
105.8398 236.8223 l
105.3594 237.0625 l
101.7593 241.3818 l
100.0796 243.543 l
97.1997 246.9033 l
96.9595 247.1436 l
96.2393 248.1035 l
96.7197 250.5039 l
96.7197 250.7441 l
96.9595 251.9443 l
96.9595 252.4238 l
96.9595 253.1445 l
96.7197 255.5449 l
96.7197 256.0254 l
96.9595 259.3857 l
97.1997 260.8262 l
97.4395 262.7461 l
98.6396 274.2676 l
99.1196 278.1084 l
99.3594 282.6689 l
99.3594 282.9092 l
99.3594 283.1484 l
99.8398 288.9102 l
101.2793 299.2314 l
101.2793 299.9521 l
101.2793 300.9111 l
101.5195 301.8721 l
101.7593 305.7124 l
101.7593 306.1924 l
101.7593 307.1528 l
101.7593 307.3926 l
101.9995 307.873 l
102.2393 313.1538 l
102.4795 314.834 l
102.4795 315.0737 l
102.4795 315.5542 l
102.4795 315.7939 l
102.4795 316.0342 l
103.1997 323.2354 l
103.1997 323.4751 l
103.6792 331.1563 l
103.9194 333.7969 l
105.1196 344.8384 l
105.5996 350.1191 l
107.2793 366.6821 l
107.2793 367.8823 l
107.7593 375.8032 l
107.7593 377.0034 l
108.4795 385.4048 l
b
Q
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 100 Lb
(Text) Ln
0 A
q
0 J 0 j 1 w 4 M []0 d0 XR
6.7202 7.1064 m
6.7202 602.8789 l
786.2363 602.8789 l
786.2363 7.1064 l
6.7202 7.1064 l
h
W
n
u
u
0 To
1 0 0 1 336.9585 373.1602 0 Tp
0 Tv
TP
0 Tr
0 O
0 0 0 0.4902 k
/_Arial-BoldItalicMT 26.9957 23.1619 -10.1629 Tf
100 100.016 Tz
0 Tt
0 TV
0 Tc
(\103) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 358.0195 373.1602 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldItalicMT 26.9957 23.1619 -10.1629 Tf
100 100.016 Tz
0 Tt
0 TV
0 Tc
(\157) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 376.0752 373.1602 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldItalicMT 26.9957 23.1619 -10.1629 Tf
100 100.016 Tz
0 Tt
0 TV
0 Tc
(\156) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 394.1313 373.1602 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldItalicMT 26.9957 23.1619 -10.1629 Tf
100 100.016 Tz
0 Tt
0 TV
0 Tc
(\156) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 412.4297 373.1602 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldItalicMT 26.9957 23.1619 -10.1629 Tf
100 100.016 Tz
0 Tt
0 TV
0 Tc
(\145) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 429.0098 373.1602 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldItalicMT 26.9957 23.1619 -10.1629 Tf
100 100.016 Tz
0 Tt
0 TV
0 Tc
(\143) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 445.832 373.1602 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldItalicMT 26.9957 23.1619 -10.1629 Tf
100 100.016 Tz
0 Tt
0 TV
0 Tc
(\164) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 456.3867 373.1602 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldItalicMT 26.9957 23.1619 -10.1629 Tf
100 100.016 Tz
0 Tt
0 TV
0 Tc
(\151) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 465.4531 373.1602 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldItalicMT 26.9957 23.1619 -10.1629 Tf
100 100.016 Tz
0 Tt
0 TV
0 Tc
(\143) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 482.2754 373.1602 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldItalicMT 26.9957 23.1619 -10.1629 Tf
100 100.016 Tz
0 Tt
0 TV
0 Tc
(\165) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 500.332 373.1602 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldItalicMT 26.9957 23.1619 -10.1629 Tf
100 100.016 Tz
0 Tt
0 TV
0 Tc
(\164) Tx 1 0 Tk
TO
U

U

Q
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 100 Lb
(Scale) Ln
0 A
q
0 J 0 j 1 w 4 M []0 d0 XR
791.9961 612 m
791.9961 0 l
0 0 l
0 612 l
791.9961 612 l
h
W
n
0 R
0 0 0 1 K
1 J 1 j 0.96 w 3.85 M54.9595 34.2305 m
54.9595 41.4316 l
S
188.6392 34.2305 m
188.6392 41.4316 l
S
322.5586 34.2305 m
322.5586 41.4316 l
S
88.3198 34.2305 m
88.3198 39.2715 l
S
121.9194 34.2305 m
121.9194 39.2715 l
S
155.2793 34.2305 m
155.2793 39.2715 l
S
222.2388 34.2305 m
222.2388 39.2715 l
S
255.5986 34.2305 m
255.5986 39.2715 l
S
289.1987 34.2305 m
289.1987 39.2715 l
S
54.9595 34.2305 m
322.5586 34.2305 l
S
u
0 To
1 0 0 1 52.1558 46.4736 0 Tp
0 Tv
TP
0 Tr
0 O
0 0 0 1 k
0 J 0 j 1 w 4 M/_ArialMT 10.0816 8.6499 -3.2736 Tf
99.9841 100 Tz
0 Tt
0 TV
0 Tc
(0) Tx 1 0 Tk
TO
U


u
0 To
1 0 0 1 183.0322 46.4736 0 Tp
0 Tv
TP
0 Tr
/_ArialMT 10.0816 8.6499 -3.2736 Tf
99.9841 100 Tz
0 Tt
0 TV
0 Tc
(25) Tx 1 0 Tk
TO
U


u
0 To
1 0 0 1 316.9517 46.4736 0 Tp
0 Tv
TP
0 Tr
/_ArialMT 10.0816 8.6499 -3.2736 Tf
99.9841 100 Tz
0 Tt
0 TV
0 Tc
(50) Tx 1 0 Tk
TO
U


u
0 To
1 0 0 1 112.1099 46.4736 0 Tp
0 Tv
TP
0 Tr
/_ArialMT 10.0816 8.6499 -3.2736 Tf
99.9841 100 Tz
0 Tt
0 TV
0 Tc
(12\056\65) Tx 1 0 Tk
TO
U


u
0 To
1 0 0 1 331.1978 46.4736 0 Tp
0 Tv
TP
0 Tr
/_ArialMT 10.0816 8.6499 -3.2736 Tf
99.9841 100 Tz
0 Tt
0 TV
0 Tc
(\115\151\154\145\163) Tx 1 0 Tk
TO
U


Q
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
