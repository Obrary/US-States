%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 11.0.0
%%For: (Chris Chubb) (Chris Chubb Maps)
%%Title: (MA_25_00 [Converted].ai)
%%CreationDate: 6/19/2006 12:31 PM
%%BoundingBox: 0 0 792 612
%%HiResBoundingBox: 0 0 791.9961 612
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentFonts: ArialMT
%%+ Arial-BoldItalicMT
%%DocumentNeededFonts: ArialMT
%%+ Arial-BoldItalicMT
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_typography_AI5 1.0 1
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%CMYKProcessColor: 1 1 1 1 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 3 () 
%AI3_TemplateBox: 396 306 396 306
%AI3_TileBox: 88.2998 -72.2198 702.2198 685.7002
%AI3_DocumentPreview: None
%AI5_ArtSize: 1296 1296
%AI5_RulerUnits: 0
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 3
%AI8_OpenToView: -225.5 639.5 1 1178 682 26 0 1 33 114 0 0
%AI5_OpenViewLayers: 777
%%PageOrigin:0 0
%AI7_GridSettings: 0.01 8 0.01 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI7_Thumbnail: 128 100 8
%%BeginData: 8047 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDF0FFCAC9A7FD7BFF
%CFA7C9C8C8A6C9FD78FFC9A6CDA6CEA7CE9FCFFD74FFC9CACFA6FD07CEC9
%FD72FFA8C8A6C8A0CEA7CEA6CEA7CEA6C9FD72FFCAA6FD0BCEA7FD2EFFA7
%A7A7C9A7C9A7C9A7CAA7CFCAFFA8FFCAFFA8FD31FFA7C8A6CEA6CEA6CEA6
%CEA6CEA6A6A8FD2DFFC9A6CEC8CEA6CEC8CEA6CEA6C9A6CEA6C9A6CEA6C9
%A7CEC9C9A7CFC9CFA7CFCAFFCFFFFFFFCFFD1CFFC9A6C8A6FD0BCEA6CFFD
%2CFFCFA6CEA6CEA7CEA6CEA7CEA7CEA7CEA6CEA7CEA6CEA6CEA6CEA6CDA6
%CEA6CEA6CEA6C8A6C8A6C8A6C9A6C9A6C9A7C9A7C9A7C9A7CAA7C9A7CFA8
%CFA8FFCAFFA8FFFFC9A6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CDA6FD2CFFA7
%FD1FCEA7CECECEA7CECECEA7CECECEA6CEC8CEA6CEC8CEA6CEC8CEA6CEA6
%C8A6C9A6C9A6C9A6FD10CEC8A8FFFFC9A7FD27FFA7A6CEA6CEA6CEA6CEA6
%CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6
%CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA6CEA6
%CEA6CEA6CEA6CEA6CEA6CEA6CEA6A6A7C9A6A6A8FD26FFA6FD55CEC8CEA6
%C9FD25FFA7C8A7CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CE
%A6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CE
%A7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CE
%A7CEA6A6FD26FFC9C8FD55CEA6C8CAFD26FFA0CEA6CEA6CEA6CEA6CEA6CE
%A6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CE
%A6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CE
%A6CEA6CEA6CEA6CEA6CEA7CEA6C8A6A7A7FD26FFCAFD51CEA6C9A7CFFD2A
%FFC9A6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CE
%A6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CE
%A7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6C9CAFD2CFFA6FD
%51CEA6C9FD2BFFA8C8A7CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6
%CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6
%CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6
%A6A7FD2BFFCFC8FD4FCEA6C9CFFD2CFFA6CEA7CEA6CEA7CEA6CEA7CEA6CE
%A7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CE
%A6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CE
%A7CEA6CEA7CE7BA7FD2DFFCFC8A7FD4DCEA6CF9FCFFD2CFFCAA6CEA6CEA6
%CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6A7A7A7A6CEA6CEA6
%CEA7CEA6CEA7CEA6A7A7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA6CEA6CEA6
%CEA6CEA6CEA6CEA6CEA6CEA6CEA6C9FFFFA8FD2CFFA7FD1BCE7D7D7DCE7D
%A77DCEFD06A77DA77DFD07A77DA77DFD04A7FD15CEA6CFFD2DFFCAC9A7CE
%A6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA77D52A7FD05
%7DA77DA752A77DA77DA77DA77CA77CA77C7D7DA77DA77CA7A6CEA7CEA6CE
%A7CEA6CEA7CEA6CEA7CEA6CEA7CEA6A6A0FD2DFFCFA6FD1BCEFD04A77DCE
%FD09A7CEA7CEFD07A7CEFD05A7FD14CEC8CAFD2EFFA7C8A6CEA6CEA6CEA6
%CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CECDCEA6
%CECDCEA6CEA6CEA6CECDCEA6CECDCEA6CECDCEA6CEA7CEA6CEA6CEA6CEA6
%CEA6CEA6CEA6CEA6CEA6CEA6CFFFCFA0CFFD2AFFC9FD50CEA7FFCFC8A6FD
%2AFFA6CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CE
%A7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CE
%A6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA6A6A6C9A6C8A6C9
%A8FD26FFA7FD53CEA7CECECEA6C8CAFD25FFA7A6CEA6CEA6CEA6CEA6CEA6
%CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6
%CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6
%CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6A6A8FD24FFA6FD59CEC8C9FD
%23FFA7C8A6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CE
%A7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CE
%A6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CE
%A7CEA6CEA6FD23FFC9C8FD5BCEA7FD22FFA0CEA6CEA6CEA6CEA6CEA6CEA6
%CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6
%CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6
%CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6A6A8FD20FFCAFD5DCECD
%C9FD21FF9FCEA6CDA6CEA6CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CE
%A7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CE
%A6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CE
%A7CEA6CEA7CEA6CEA6CAFD0CFFA6C9A6A6A7FD0FFFCAA7CFA7C9A6C9A6C9
%A6C9A6C9A6CEC8CEA6CEC8CEA6CECECEA6CECECEA7CECECEA7CECECEA7CE
%CECEA7CECECEA7CECECEA7FD2BCEA7C8CAFD0CFFC8A6CEA7A6A6FD14FFA8
%FFA8FFA8FFA8CFA7C9A7C9A7C9A7C9A0CEA6A7A7C9A6A6A6C8A6C9A6C9A6
%A6A6C8A6A6A6C8A6A6A6C8A6C8A6CEA6CDA6CEA6CEA6CEA7CEA6CEA7CEA6
%CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA7CEA0FD0E
%FF9FA7FFA7A6A0FD23FFCFA6C8FD04FFCACFFD06FFCFFFFFFFCFFFFFFFCF
%FFCACFCACFC9CFA7CFC9C9A6CEA6C9A6CEA6C9A6CEA7C9A7FD17CEA0CFFD
%0EFFCAFFFFFFA7CEA6FD22FFCACFCFFD1FFFCFCFA8FFCAFFA8FFCAFFA8FF
%FFFFA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA6A7FD13FFC9
%A6C8A7FD51FFC9A6FD15CEA6C9FD12FFA7CEA7C9FD51FFA6CEA6CEA6CEA6
%CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6A6A0C9FD0FFFCFA6CEA6CFFD
%50FFFD19CEC9CEA6CFFD0EFFCAA6A6CEA7FD50FFA6A6A6CEA7CEA6CEA7CE
%A6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA7CEA6FD0EFFCAA7CAA6C9CAFD50
%FFA7FD19CEA7C9CFFD0DFFCFCFFFC8A6CFFD50FFCFA6CEA6CEA6CEA6CEA6
%CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CFFD10FFA6CDA7FD50FFA7FD
%1ACEC9FD11FFC9CDCEFD50FFC9A6CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7
%CEA6CEA7CEA6CEA7CEA0FD11FFA6CEA6FD50FFA8C8FD1ACEA6FD0EFFCFA6
%CECEC9CAFD50FFA7A6A6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6
%CEA6CEA7CDA0CACAFD07FFA7C9A6C8A6CEA6CEA6FD52FFCFC9A6FD11CEC8
%FD07CEA6C9A7CFC9C9FFCFA6CEA6FD06CEC9CAFD52FFCAA6A6CEA7CEA6CE
%A7CEA6CEA7CEA6CEA7CEA0C9A6C8A6CEA7CEA6CEA7CEA6CEA6A6A6CEA7CE
%A6CEA7CEA6CEA6CFFD53FFA7C8A7FD0DCEA6C8FFCFA6FD11CEA7CECECEA7
%CECAFD54FFA0A6A6CEA6CEA6CEA6CEA6CEA7CEA6C9A8FFA7C8A7CEA6CEA6
%CEA6CEA7CEA6CEA7CEA6CEA6C8A6C8A6CEA6FD56FFA7C9FD0ACEA6C8A7FF
%FFFFA6FD09CEA6CECECEA6C9A7C9CAFFFFFFA6C9FD57FFA7CEA7CEA6CEA7
%CEA6C8A6A0A7FFFFFFA7C8A7CEA6CEA7CEA7CEA6C9A7C8A0C9A8FD06FFA0
%A8FD57FFC9A6FD05CEA6A6A0A0CFFD04FFCFA6FD05CEC8C8A6CFFFFFA7CF
%FD07FFCFA0FD58FFA7C8A6CEA6CEA6A6A7CF9FC9FD04FFA8A6A6CEA7CEA6
%A6A8FD0DFFA0A7FD58FFCFA6FD05CEA7FD08FFCFA6CEC8CEA6C8C9FD0EFF
%C8A7FD58FFCAC8A7CEA7CEA6C9FD08FFA0A6A6C9A7C9A8FD0FFFA7FD5AFF
%A6CEA6CEA6CFFD07FFCF9FC8CAFD6EFFA8C9A7C9A6FD08FFC99FA7A8FFCF
%FD79FFC99FCFFFFFA7C8A7FD76FFA6A09FCFFFFFA0C8A6C8A7FD72FFA7C9
%9FC9CFFFFFFFA6CEA7CEC8C9FFFFCAFD6EFFA8A6A7CFFD04FFA7C8A7CEA6
%CEA6C9A7A6CAFD0BFFCFCFFD67FFA8C8FD06CEA6C9A6FD0DFF9FCFFD63FF
%A8CFA8A6A6CEA6CEA6CEA6CEA6C8CAFD0CFFC9A0FD63FFCA9FCEA6C8A7CF
%A7CAA7CFA7C9A7FD0DFFA7C8A8FD63FFC9A5A6A8FD0EFFCAA7FFA8FFCAFF
%A7C8A6A6FD64FFCFCFFD0FFFC9A0A0CEA7C9A6CECECEA6CFFD75FFCFA7A6
%CEA6CEA6CEA7C8A7FD78FFA7C9A6C9A6C9A6FD7AFFA8FFCAFFA8FD97FFA8
%FD07FFA8FD6FFF7DA8FD05FF7D7D52A8FD05FF7D52FD0EFF5252A8527D52
%FD5AFF7DA8FD05FFA87D7DA8FD05FF7D7DFD0EFF7D7D7D525252A8FD6AFF
%A8FFFFFFA8FFFFFFA8FFFFFFA8FD62FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8
%A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8FDFCFFFDFCFFFDFCFFFD62
%FFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 1
%%CreationDate:(6/10/1996) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 68 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/havefont
{
	systemdict /languagelevel known
		{
		/Font resourcestatus dup
			{ exch pop exch pop }
		if
		}
		{
		systemdict /FontDirectory get 1 index known
			{ pop true }
			{
			systemdict /fileposition known
				{
				dup length 6 add exch
				Ss 6 250 getinterval
				cvs pop
				Ss exch 0 exch getinterval
				status
					{ pop pop pop pop true }
					{ false }
				ifelse
				}
				{
				pop false
				}
			ifelse
			}
		ifelse
		}
	ifelse
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
/subststring {
	exch 2 index exch search
	{
		exch pop
		exch dup () eq
		{
			pop exch concatstring
		}
		{
			3 -1 roll
			exch concatstring
			concatstring
		} ifelse
		exch pop true
	}
	{
		pop pop false
	} ifelse
} def
/concatstring {
	1 index length 1 index length
	1 index add
	string
	dup 0 5 index putinterval
	dup 2 index 4 index putinterval
	4 1 roll pop pop pop
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	2 index havefont
	{
		3 index
		255 string
		cvs
		
		dup
		(_Symbol_)
		eq
		{
			pop
			2 index
			findfont
			
		}
		{
			1 index 0 eq
			{
				dup length 1 sub
				1 exch
				getinterval
				
				cvn
				findfont
			}
			{
				pop 2 index findfont
			} ifelse
		} ifelse
	}
	{
		dup 1 eq
		{
			2 index 64 string cvs
			dup (-90pv-RKSJ-) (-83pv-RKSJ-) subststring
			{
				exch pop dup havefont
				{
					findfont false
				}
				{
					pop true
				} ifelse
			}
			{
				pop	dup
				(-90ms-RKSJ-) (-Ext-RKSJ-) subststring
				{
					exch pop dup havefont
					{
						findfont false
					}
					{
						pop true
					} ifelse
				}
				{
					pop pop true
				} ifelse
			} ifelse
			{
				1 index 1 eq
				{
					/Ryumin-Light-Ext-RKSJ-V havefont
					{/Ryumin-Light-Ext-RKSJ-V}
					{/Courier}
					ifelse
				}
				{
					/Ryumin-Light-83pv-RKSJ-H havefont
					{/Ryumin-Light-83pv-RKSJ-H}
					{/Courier}
					ifelse
				} ifelse
				findfont
				[1 0 0.5 1 0 0] makefont
			} if
		}
		{
			/Courier findfont
		} ifelse
	} ifelse
	_wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 10 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontScript exch def
	/FontDirection exch def
	/FontRequest exch def
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
W B
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
W F 
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
W S
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat
	_shift aload pop _lineorientation 1 eq { exch } if translate
	_scale aload pop _lineorientation 1 eq _yokoorientation 1 eq or { exch } if scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	1 index type /nametype eq
	{
		dup 0.75 mul 1 index 0.25 mul neg
	} if
	/_fontDescent exch ddef
	/_fontAscent exch ddef
	/_fontSize exch ddef
	/_fontRotateAdjust _fontAscent _fontDescent add 2 div neg ddef
	/_fontHeight _fontSize ddef
	findfont _fontSize scalefont setfont
} def
/Tl
{
	pop neg 0 exch
	_leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	0 exch
	_shift astore pop
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	count 1 eq { 100 } if
	100 div exch 100 div exch
	_scale astore pop
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Tg
{
	pop
} def
/TG
{
	pop
} def
/Tv
{
	/_lineorientation exch ddef
} def
/TV
{
	/_charorientation exch ddef
} def
/Ty
{
	dup /_yokoorientation exch ddef 1 sub neg Tv
} def
/TY
{
	pop
} def
/T~
{
	Tx
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	_fontSize mul 1000 div
	_lineorientation 0 eq { neg 0 } { 0 exch } ifelse
	rmoveto
	pop
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	Td
} def
/T*-
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	exch neg exch neg
	Td
} def
/T-
{
	_ax neg 0 rmoveto
	_lineorientation 1 eq _charorientation 0 eq and { 1 TV _hyphen Tx 0 TV } { _hyphen Tx } ifelse
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ findfont _fontSize scalefont setfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%
/X^
{
	currentfont 5 1 roll
	dup havefont
		{
		findfont _fontSize scalefont setfont
		}
		{
		pop
		exch
		} ifelse
	2 index 0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	pop	pop
	setfont
} def
/T^	/X^	load def
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: ArialMT
%%IncludeFont: Arial-BoldItalicMT
userdict /_useSmoothShade false put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 128/Euro 130/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE 145/quoteleft
/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark
/scaron/guilsinglright/oe/dotlessi 159/Ydieresis /space 164/currency 166/brokenbar
168/dieresis/copyright/ordfeminine 172/logicalnot/hyphen/registered/macron/ring
/plusminus/twosuperior/threesuperior/acute/mu 183/periodcentered/cedilla
/onesuperior/ordmasculine 188/onequarter/onehalf/threequarters 192/Agrave
/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute
/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave
/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute
/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex
/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute
/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
TE
%AI55J_Tsume: None
%AI3_BeginEncoding: _ArialMT ArialMT
[/_ArialMT/ArialMT 0 0 0 TZ%AI3_EndEncoding TrueType
%AI55J_Tsume: None
%AI3_BeginEncoding: _Arial-BoldItalicMT Arial-BoldItalicMT
[/_Arial-BoldItalicMT/Arial-BoldItalicMT 0 0 0 TZ%AI3_EndEncoding TrueType
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Registration]) 0 Xs
([Registration]) Pc
0 0 0.4 0.05 k
(C=0 M=0 Y=40 K=5) Pc
0.34 0.56 1 0 k
(C=34 M=56 Y=100 K=0) Pc
0 0 0 0.49 k
(C=0 M=0 Y=0 K=49) Pc
0 0 0 1 k
(C=0 M=0 Y=0 K=100) Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 100 Lb
(State) Ln
0 A
q
0 J 0 j 1 w 4 M []0 d0 XR
6.7202 7.1064 m
6.7202 602.8789 l
786.2363 602.8789 l
786.2363 7.1064 l
6.7202 7.1064 l
h
W
n
*u
0 O
0 0 0.4 0.05 k
1 J 1 j 1.2 w 3.85 M78.4795 491.2612 m
82.5596 491.0215 l
88.7998 490.7813 l
89.2793 490.7813 l
99.1196 490.3013 l
103.4395 490.061 l
107.0396 489.8213 l
109.9194 489.8213 l
113.9995 489.5811 l
117.5996 489.3408 l
117.8394 489.3408 l
119.7593 489.3408 l
122.6392 489.1011 l
127.6792 488.8608 l
128.3994 488.8608 l
146.3994 488.1406 l
147.1196 487.9009 l
159.8394 487.4209 l
164.6392 487.1807 l
171.1191 486.9404 l
174.7192 486.7007 l
176.6392 486.7007 l
177.1191 486.7007 l
195.8389 485.7402 l
198.2393 485.5005 l
209.999 485.0205 l
213.5991 484.7803 l
219.5991 484.54 l
220.3188 484.3003 l
230.3989 483.8203 l
242.1587 483.3398 l
243.5986 483.3398 l
246.2388 483.1001 l
248.1587 483.1001 l
250.7988 482.8599 l
251.5186 482.8599 l
260.3989 482.3799 l
266.6387 482.1396 l
269.0386 481.8999 l
275.9985 481.6597 l
277.1987 481.4199 l
277.4385 481.4199 l
277.6787 481.4199 l
293.7588 480.6997 l
305.7588 480.2197 l
309.8384 480.2197 l
312.7188 479.9795 l
317.0386 479.7393 l
319.1982 479.7393 l
319.4385 479.7393 l
331.9185 479.0195 l
338.8784 478.7793 l
344.1582 478.5391 l
349.6782 478.2993 l
355.6782 478.0591 l
356.1582 478.0591 l
370.7983 477.5791 l
371.0381 477.5791 l
374.6382 477.3389 l
379.1982 477.0991 l
381.3584 477.0991 l
382.0781 477.0991 l
386.8779 476.8589 l
390.7183 476.8589 l
395.7583 476.6191 l
401.7578 476.3789 l
402.2383 476.3789 l
405.8379 476.3789 l
408.958 476.1387 l
409.918 476.1387 l
410.1582 476.1387 l
412.3184 476.1387 l
423.1182 475.6587 l
425.998 475.6587 l
427.1982 475.6587 l
427.6777 475.6587 l
427.918 475.6587 l
428.1582 475.6587 l
432.2383 475.4189 l
437.998 475.1787 l
438.4785 475.1787 l
439.1982 475.1787 l
439.4385 475.1787 l
439.6777 475.1787 l
443.2773 475.1787 l
445.1982 474.9385 l
446.8779 474.9385 l
450.4785 474.9385 l
452.8779 474.6987 l
459.3574 474.4585 l
459.5977 474.4585 l
463.1982 474.4585 l
463.6777 474.4585 l
464.1572 474.4585 l
466.7979 474.2188 l
468.2383 474.2188 l
471.1172 473.9785 l
473.998 473.9785 l
474.7178 473.9785 l
478.5576 473.9785 l
479.5176 475.4189 l
481.4375 478.0591 l
482.1572 479.2593 l
483.8379 481.8999 l
486.2383 484.7803 l
486.2383 485.0205 l
488.3975 486.7007 l
490.7979 487.4209 l
492.7178 487.6606 l
494.1572 487.4209 l
495.8379 486.9404 l
497.5176 486.4604 l
498.2383 486.2207 l
498.7178 485.9805 l
501.3574 485.2603 l
501.1172 489.1011 l
500.877 489.5811 l
500.6377 492.9414 l
500.3975 499.9028 l
500.6377 500.3828 l
501.1172 500.8628 l
501.8379 501.8228 l
502.7979 503.0229 l
503.998 504.4634 l
504.2383 504.7031 l
504.4775 504.9434 l
507.5977 506.8638 l
508.0771 506.8638 l
511.1982 508.3037 l
514.5576 507.3438 l
517.4375 506.6235 l
519.5977 505.9033 l
522.2373 505.1836 l
524.877 504.4634 l
525.1172 504.2231 l
527.0371 511.6646 l
528.2373 514.7852 l
528.957 515.9854 l
530.877 518.1455 l
531.5977 518.8657 l
537.1172 520.0659 l
538.5576 520.3057 l
539.998 520.7856 l
543.1172 521.2661 l
544.7969 521.7461 l
545.5176 522.2261 l
546.957 522.9463 l
548.1572 523.666 l
551.7568 525.8267 l
551.998 526.0664 l
552.4775 526.3066 l
555.1172 526.5469 l
557.5176 526.5469 l
560.877 525.5864 l
561.3574 525.1064 l
563.5176 523.4263 l
568.3174 519.8257 l
568.5566 519.5854 l
570.957 520.7856 l
572.1572 521.7461 l
573.3574 522.4663 l
573.5977 522.4663 l
574.0771 522.7061 l
575.0371 522.7061 l
574.7969 516.9453 l
575.2773 514.7852 l
575.5176 512.3848 l
575.7568 510.4644 l
576.2373 508.064 l
576.4775 506.1436 l
577.6768 497.9824 l
579.8379 489.3408 l
580.0771 488.3809 l
581.9971 484.0601 l
584.3975 478.5391 l
584.877 476.8589 l
583.1973 474.9385 l
583.1973 473.9785 l
583.1973 473.7388 l
586.0771 471.5781 l
589.1973 471.0981 l
590.1572 470.6182 l
593.0371 467.2573 l
593.2773 465.5771 l
593.7568 465.3374 l
601.4375 462.6968 l
602.3975 462.937 l
602.877 463.1768 l
602.877 465.3374 l
604.7969 467.4976 l
606.4775 469.418 l
610.3164 472.7783 l
611.2773 473.0186 l
613.4375 473.7388 l
615.3564 472.5386 l
614.877 469.1777 l
614.6367 466.7773 l
614.6367 466.5376 l
614.6367 466.2974 l
614.877 464.8574 l
615.1172 464.8574 l
615.3564 464.6172 l
616.5566 464.1372 l
617.9971 464.377 l
619.6768 464.6172 l
620.1572 464.8574 l
620.3975 464.8574 l
621.3564 461.7368 l
621.3564 459.3364 l
620.877 457.896 l
620.1572 457.896 l
618.4775 457.896 l
615.8369 456.2158 l
615.8369 455.9756 l
615.8369 455.7358 l
615.5977 455.4956 l
614.3975 452.375 l
613.6768 450.6948 l
612.4775 448.2944 l
608.6367 443.2539 l
606.4775 442.7739 l
605.9971 443.0137 l
605.9971 443.9741 l
605.7568 445.1743 l
605.5176 445.894 l
605.0371 446.6143 l
604.5566 446.6143 l
604.3174 446.6143 l
603.5977 446.6143 l
603.1172 446.1343 l
602.6367 444.9341 l
601.917 444.2139 l
599.7568 441.8135 l
595.917 440.8535 l
593.5176 440.1333 l
591.8379 441.5737 l
587.7568 439.8936 l
587.0371 439.6533 l
583.917 438.6934 l
580.3174 437.7329 l
578.3975 437.2529 l
575.9971 435.3325 l
574.3174 434.3726 l
569.2773 434.1323 l
567.3574 433.6523 l
566.877 433.4121 l
564.957 432.9321 l
564.7168 432.9321 l
564.4775 432.6924 l
564.4775 431.9722 l
564.4775 431.4922 l
564.7168 431.252 l
565.6768 426.6914 l
565.6768 426.4512 l
567.1172 425.9712 l
567.5977 426.2109 l
569.0371 425.9712 l
570.7168 425.731 l
571.1973 424.771 l
571.918 423.3306 l
572.877 421.1704 l
571.918 417.5698 l
570.7168 416.8496 l
569.5176 417.8101 l
567.5977 417.5698 l
566.877 417.0898 l
564.957 415.8896 l
563.0371 414.4492 l
561.8379 412.0488 l
561.5977 412.0488 l
561.3574 411.3291 l
561.3574 411.0889 l
561.5977 410.6089 l
560.1572 409.4087 l
558.4775 410.3687 l
557.2773 411.0889 l
557.0371 411.0889 l
555.3574 411.3291 l
554.3975 411.0889 l
553.1973 409.6484 l
552.7168 409.4087 l
551.7568 408.4482 l
551.7568 408.2085 l
551.998 404.8477 l
552.2373 402.9277 l
553.1973 401.2471 l
553.6768 401.0073 l
556.3174 400.2871 l
557.2773 399.5669 l
558.7168 398.127 l
557.998 397.1665 l
557.0371 397.1665 l
554.3975 397.4067 l
551.5176 397.6465 l
550.7969 400.2871 l
550.0771 402.6875 l
550.0771 407.0083 l
549.3574 407.9683 l
549.1172 407.7285 l
546.7168 405.3281 l
546.7168 404.6079 l
546.7168 403.8877 l
545.0371 402.2075 l
542.1572 399.0869 l
541.918 398.8467 l
541.4375 397.4067 l
541.1973 397.1665 l
540.4775 394.5264 l
540.957 393.3262 l
541.1973 393.0859 l
541.6768 393.0859 l
541.918 391.646 l
542.1572 391.4058 l
542.6367 390.2056 l
543.5977 389.9653 l
544.3174 389.7256 l
544.7969 389.2456 l
544.5576 389.0054 l
544.3174 388.5254 l
544.3174 387.5654 l
544.3174 387.3252 l
544.3174 386.3652 l
544.7969 385.645 l
545.2773 384.6846 l
545.5176 383.9648 l
546.7168 381.8042 l
548.3975 378.6836 l
548.3975 377.2437 l
546.2373 377.9639 l
544.3174 379.8838 l
543.8379 380.3643 l
542.877 380.604 l
542.3975 380.3643 l
539.0371 379.4038 l
537.3574 377.9639 l
537.1172 376.7637 l
535.918 372.9229 l
535.6768 372.2026 l
536.1572 369.3223 l
537.8379 366.9219 l
538.5576 365.7217 l
538.3174 364.2817 l
537.8379 362.1211 l
537.5977 361.6411 l
537.8379 360.9209 l
537.8379 360.6812 l
537.8379 360.2012 l
538.3174 359.481 l
539.0371 358.2808 l
539.7568 357.0806 l
540.7168 356.3604 l
540.957 356.3604 l
541.1973 356.1201 l
543.5977 356.1201 l
545.5176 356.3604 l
547.6768 356.8403 l
549.3574 357.5605 l
550.0771 356.6006 l
551.2773 355.6401 l
551.5176 355.6401 l
551.998 355.1602 l
554.6367 354.9199 l
557.0371 355.6401 l
557.998 357.3203 l
560.1572 360.9209 l
560.1572 361.6411 l
560.1572 361.8813 l
560.1572 363.0815 l
560.1572 363.3213 l
559.918 364.0415 l
556.0771 365.7217 l
555.5977 366.6821 l
557.7568 367.1621 l
562.7969 367.6421 l
563.0371 366.4419 l
563.0371 365.2417 l
563.5176 364.5215 l
563.9971 363.5615 l
564.2373 363.0815 l
564.957 361.6411 l
565.1973 361.1611 l
565.918 360.2012 l
567.1172 358.5205 l
568.0771 357.5605 l
569.2773 356.3604 l
573.3574 356.3604 l
574.7969 355.8804 l
577.4375 355.1602 l
581.5176 353 l
582.2373 352.5195 l
583.6768 352.0396 l
585.8379 351.3193 l
587.0371 349.8794 l
589.1973 345.7988 l
590.3975 344.3584 l
590.6367 343.8784 l
591.1172 343.3984 l
593.0371 341.958 l
593.2773 341.7183 l
594.2373 340.7578 l
595.917 340.0376 l
596.1572 338.1177 l
596.6367 333.7969 l
596.6367 333.5566 l
597.5977 329.2363 l
597.8369 328.9961 l
599.2773 327.7959 l
603.5977 319.3945 l
604.7969 317.7144 l
608.1572 312.6733 l
608.877 311.9536 l
612.957 307.3926 l
613.4375 305.4727 l
612.2373 304.5117 l
611.5176 304.0322 l
611.5176 303.0723 l
611.2773 301.8721 l
612.4775 297.0713 l
612.2373 295.6309 l
611.0371 295.6309 l
610.7969 295.6309 l
607.1973 293.2305 l
606.7168 289.8701 l
606.7168 289.6299 l
606.7168 289.3896 l
606.7168 288.9102 l
607.6768 286.2695 l
606.957 285.0693 l
605.2773 284.3486 l
603.5977 286.5098 l
601.6768 286.5098 l
598.3174 284.8291 l
598.5566 283.6289 l
598.7969 282.6689 l
599.0371 282.4287 l
601.1973 279.3086 l
602.3975 278.1084 l
606.4775 274.2676 l
608.1572 272.5879 l
608.6367 272.1074 l
609.8369 271.8672 l
611.0371 271.627 l
611.5176 272.3477 l
611.7568 272.3477 l
612.957 271.3867 l
614.6367 269.707 l
615.1172 269.4668 l
616.7969 267.3066 l
618.2373 266.5859 l
619.917 266.8271 l
622.0771 268.7461 l
624.957 269.2266 l
625.917 268.5068 l
629.9971 265.1465 l
630.957 264.1855 l
631.4375 263.7061 l
632.1572 261.7852 l
632.6367 260.3447 l
632.6367 258.9053 l
632.6367 258.4258 l
632.877 257.7051 l
635.2773 253.624 l
635.7568 252.9043 l
636.2363 249.7832 l
637.1973 244.2637 l
635.2773 239.2227 l
635.2773 238.9814 l
633.8369 236.8223 l
633.5977 234.9014 l
634.0771 232.501 l
635.0371 231.0605 l
635.9971 229.3809 l
638.6367 226.2607 l
639.1172 225.7803 l
643.4375 221.6992 l
643.917 220.9795 l
644.3975 220.7393 l
646.0771 219.5391 l
646.3164 219.5391 l
647.7568 218.3389 l
647.9971 218.0986 l
648.7168 217.6191 l
653.5176 215.9385 l
657.5967 214.2578 l
660.957 213.0576 l
666.957 212.0977 l
667.4375 211.8574 l
668.6367 211.6182 l
670.0762 211.6182 l
679.917 211.1377 l
685.917 210.6572 l
686.3965 210.418 l
689.0361 208.7373 l
689.2773 208.498 l
689.5166 208.0176 l
689.7568 207.2979 l
691.6768 205.1367 l
692.1563 205.1367 l
692.6367 205.1367 l
692.877 205.6172 l
694.0762 207.0566 l
695.0361 208.0176 l
695.9961 208.9775 l
697.1973 210.418 l
697.4365 210.6572 l
699.5967 212.0977 l
700.3164 212.5781 l
701.2773 213.2979 l
706.7969 215.9385 l
708.2363 215.6982 l
708.4766 215.6982 l
709.6768 215.9385 l
713.0361 217.1387 l
716.6367 218.3389 l
719.2764 218.0986 l
720.4766 218.0986 l
720.7168 218.0986 l
722.1563 218.5791 l
723.3564 219.0596 l
724.7969 219.7793 l
725.5166 220.0186 l
725.9961 220.2598 l
727.916 220.7393 l
728.877 220.9795 l
731.7559 221.9395 l
731.9961 221.9395 l
732.2363 221.9395 l
732.4766 221.9395 l
733.1963 222.4189 l
735.8359 223.8604 l
736.7969 224.0996 l
738.9561 225.2998 l
740.6367 226.2607 l
740.877 226.5 l
741.1162 226.7402 l
743.5166 229.6201 l
743.7559 229.8604 l
744.7168 232.0215 l
744.7168 233.9414 l
744.4766 240.4229 l
743.9961 244.0225 l
743.7559 247.3828 l
743.2764 250.7441 l
743.9961 251.9443 l
745.1963 253.624 l
744.4766 254.585 l
742.5566 254.8242 l
740.1563 256.7451 l
739.916 258.1855 l
739.916 260.3447 l
738.7168 264.666 l
738.7168 265.1465 l
735.8359 265.3857 l
733.916 264.666 l
731.5166 260.3447 l
731.5166 256.9854 l
731.7559 255.7852 l
731.7559 253.624 l
731.7559 253.3848 l
731.9961 251.2236 l
731.7559 250.7441 l
731.2764 250.9844 l
730.5566 252.4238 l
730.0762 256.9854 l
729.8359 267.5469 l
729.3564 272.8271 l
728.877 280.5088 l
728.3965 282.1895 l
727.4365 287.2295 l
727.4365 287.71 l
726.2363 291.3105 l
724.7969 293.4707 l
722.1563 296.3516 l
719.0361 298.5107 l
714.2363 301.1523 l
713.9961 301.3916 l
712.5566 301.3916 l
709.4365 300.6719 l
707.9961 299.9521 l
707.7568 299.7109 l
706.3164 298.2715 l
706.0762 298.0313 l
705.3564 296.5908 l
704.6367 294.9102 l
704.3965 293.9512 l
704.3965 293.4707 l
704.877 291.79 l
706.3164 290.1104 l
706.3164 289.6299 l
705.3564 289.6299 l
704.1563 290.3496 l
701.7568 292.5107 l
699.5967 296.5908 l
696.4766 299.9521 l
695.2773 300.6719 l
694.3164 300.6719 l
694.0762 301.6318 l
695.5166 304.0322 l
697.916 305.7124 l
701.7568 306.6729 l
705.3564 306.9126 l
711.3564 305.9526 l
712.5566 305.4727 l
720.4766 303.0723 l
727.4365 299.4717 l
732.4766 295.6309 l
733.6768 294.4307 l
737.5166 289.8701 l
737.7559 289.6299 l
737.7559 289.3896 l
740.1563 285.3086 l
742.3164 281.9482 l
745.4365 275.708 l
747.8359 270.9072 l
748.3164 269.4668 l
751.4365 260.585 l
754.0762 251.9443 l
755.5166 246.1826 l
756.7168 242.3428 l
758.6357 232.7412 l
758.6357 232.501 l
759.8359 222.4189 l
759.8359 221.9395 l
760.5566 213.7783 l
760.7969 209.9375 l
760.7969 208.7373 l
761.0361 200.0957 l
760.3164 196.2559 l
760.0762 194.335 l
758.1563 189.7744 l
757.6758 188.335 l
757.1963 187.374 l
756.7168 186.6533 l
756.4766 186.1738 l
756.2363 185.9346 l
755.2764 185.6934 l
755.0361 185.6934 l
754.0762 184.0137 l
753.1162 182.334 l
751.4365 175.8525 l
750.2363 169.8516 l
749.2764 162.6504 l
749.2764 162.4102 l
749.2764 162.1699 l
747.3564 159.29 l
745.916 158.8096 l
744.4766 159.0498 l
743.7559 159.7695 l
743.2764 160.9697 l
743.7559 161.6895 l
744.2363 161.6895 l
744.7168 161.6895 l
746.3965 164.3311 l
747.8359 168.4111 l
748.3164 171.7715 l
749.2764 177.0527 l
749.9961 179.4531 l
749.9961 179.6934 l
750.4766 181.373 l
750.7168 182.0938 l
751.1963 183.5332 l
751.916 185.9346 l
751.916 186.1738 l
751.916 187.6143 l
751.4365 189.5352 l
750.2363 190.4941 l
747.1162 193.1348 l
746.1563 193.6152 l
744.7168 194.335 l
743.5166 194.335 l
743.2764 194.335 l
740.1563 193.1348 l
738.4766 192.8945 l
734.877 192.415 l
732.9561 192.1748 l
728.3965 191.6943 l
727.916 191.6943 l
721.916 189.7744 l
721.1973 189.2939 l
719.2764 188.8145 l
717.3564 188.0938 l
715.4365 188.0938 l
713.7568 188.0938 l
713.5166 188.0938 l
706.7969 186.4141 l
706.3164 186.1738 l
701.0361 184.0137 l
697.916 182.5732 l
695.7568 181.6133 l
693.5967 179.4531 l
693.8369 178.7324 l
692.877 176.8125 l
691.6768 176.332 l
691.1973 176.8125 l
690.7168 178.7324 l
690.9561 180.8936 l
690.4766 181.373 l
689.7568 182.8135 l
688.3164 183.5332 l
686.3965 183.5332 l
683.2773 182.8135 l
679.917 182.0938 l
678.2363 183.0527 l
677.7568 183.2939 l
677.5166 183.2939 l
676.5566 183.5332 l
673.917 183.0527 l
671.9971 182.0938 l
671.0361 180.8936 l
671.0361 180.1729 l
671.0361 179.9326 l
670.0762 177.7725 l
668.1563 176.5723 l
663.8369 175.1318 l
663.5967 175.1318 l
662.6367 175.3721 l
662.1563 175.3721 l
661.6768 175.3721 l
661.4375 175.3721 l
657.1172 174.8926 l
656.1563 174.8926 l
654.7168 171.0518 l
653.9971 170.0908 l
653.5176 169.1309 l
651.8369 166.4902 l
651.8369 166.0107 l
651.3564 165.5313 l
651.1172 165.29 l
650.877 165.0508 l
649.6768 163.3701 l
649.4375 163.1309 l
648.2363 161.9307 l
646.5566 160.7305 l
646.3164 160.7305 l
646.3164 160.4893 l
644.877 160.0098 l
643.4375 159.7695 l
638.877 159.0498 l
637.6768 159.0498 l
636.957 159.0498 l
633.5977 158.8096 l
631.1973 158.8096 l
630.957 158.8096 l
628.7969 158.5693 l
628.0771 158.3301 l
626.6367 158.0898 l
625.1973 157.8496 l
624.957 157.8496 l
623.9971 157.8496 l
623.5176 157.6094 l
621.3564 157.3691 l
620.3975 157.1289 l
619.6768 156.8896 l
619.4375 156.8896 l
618.957 156.8896 l
617.9971 156.6494 l
615.8369 155.9297 l
614.1572 154.4893 l
613.917 154.249 l
613.6768 154.249 l
613.4375 153.7686 l
613.1973 153.0488 l
611.7568 150.6484 l
610.5566 149.9277 l
609.5977 149.208 l
608.3975 148.9688 l
607.1973 148.7275 l
601.1973 144.4072 l
595.1973 141.2871 l
590.3975 136.7266 l
590.6367 135.7656 l
589.6768 134.3262 l
583.6768 130.2451 l
577.917 130.0059 l
574.3174 129.0449 l
571.4375 126.165 l
569.7568 124.4844 l
567.8379 123.5244 l
563.0371 123.2842 l
560.3975 123.0439 l
555.1172 121.6035 l
553.1973 120.4033 l
551.0371 119.9238 l
550.3174 120.4033 l
550.5576 121.6035 l
555.1172 125.9248 l
556.0771 125.6846 l
557.0371 124.2441 l
558.4775 124.0039 l
559.6768 124.4844 l
564.4775 126.165 l
570.2373 130.9648 l
575.7568 132.8857 l
581.2773 134.3262 l
584.1572 138.166 l
586.7969 138.8867 l
591.1172 142.9678 l
592.7969 145.3682 l
603.1172 152.3281 l
604.7969 153.2891 l
605.9971 154.0088 l
608.877 156.1689 l
609.3564 156.4092 l
610.0771 156.8896 l
610.3164 156.8896 l
610.5566 157.1289 l
611.0371 157.8496 l
611.5176 159.0498 l
611.2773 161.21 l
611.5176 163.1309 l
612.7168 164.5703 l
613.917 165.29 l
613.917 165.7715 l
614.1572 166.4902 l
614.1572 166.7314 l
613.917 168.1709 l
613.917 168.4111 l
612.957 171.0518 l
612.4775 172.0117 l
611.7568 174.1719 l
611.7568 174.6523 l
611.7568 175.6123 l
612.957 177.5322 l
613.917 178.9727 l
614.1572 179.4531 l
614.3975 179.6934 l
613.4375 181.8525 l
613.1973 182.0938 l
612.957 182.0938 l
611.7568 183.2939 l
611.9971 184.7344 l
611.9971 184.9736 l
613.1973 185.6934 l
614.1572 186.4141 l
614.3975 186.4141 l
614.6367 187.8535 l
614.3975 188.8145 l
613.1973 192.8945 l
612.7168 194.335 l
612.2373 195.0557 l
609.5977 195.2949 l
612.957 198.6563 l
617.0371 200.0957 l
617.2773 200.8164 l
617.2773 201.0566 l
617.5176 202.4971 l
616.7969 203.9365 l
616.0771 204.417 l
613.4375 205.377 l
612.957 205.6172 l
611.7568 204.6563 l
610.5566 204.6563 l
607.6768 206.3369 l
605.7568 207.0566 l
605.2773 207.0566 l
603.8369 207.5371 l
599.9971 208.7373 l
598.0771 209.6982 l
597.8369 210.1777 l
596.6367 209.457 l
596.1572 209.2178 l
595.6768 207.0566 l
595.6768 206.5771 l
597.3574 203.6973 l
598.0771 198.6563 l
597.5977 196.0156 l
595.6768 196.9756 l
592.7969 199.1357 l
592.5566 199.376 l
590.877 198.8965 l
590.3975 198.6563 l
590.1572 198.416 l
590.1572 198.1758 l
590.1572 197.9355 l
589.917 196.9756 l
588.957 193.8555 l
588.957 193.6152 l
588.957 191.2148 l
589.6768 189.5352 l
589.917 187.6143 l
588.2373 184.0137 l
587.5176 184.0137 l
586.5566 184.9736 l
586.0771 186.1738 l
586.0771 186.6533 l
585.5977 186.6533 l
583.4375 187.1348 l
580.7969 187.8535 l
579.3574 188.0938 l
578.6367 187.8535 l
578.3975 187.8535 l
577.917 187.1348 l
577.917 185.2139 l
580.3174 183.7734 l
580.7969 182.5732 l
581.2773 181.373 l
581.0371 180.6533 l
580.7969 180.6533 l
579.1172 179.4531 l
573.8379 179.2129 l
572.1572 180.4131 l
570.4775 179.9326 l
569.9971 179.2129 l
569.7568 179.2129 l
569.9971 178.0127 l
570.2373 176.332 l
570.957 170.8115 l
570.957 170.5713 l
570.2373 168.8906 l
569.5176 169.1309 l
569.0371 170.3311 l
568.7969 170.8115 l
568.5566 172.0117 l
567.1172 176.332 l
567.1172 176.5723 l
567.1172 176.8125 l
567.1172 177.7725 l
567.1172 178.7324 l
566.877 179.4531 l
566.1572 180.1729 l
565.1973 180.6533 l
564.2373 180.8936 l
562.7969 181.373 l
561.5977 180.4131 l
559.6768 178.9727 l
559.4375 178.9727 l
557.7568 177.7725 l
558.2373 177.293 l
558.4775 176.8125 l
559.1973 176.0928 l
559.4375 175.6123 l
559.6768 175.1318 l
559.918 174.1719 l
560.6367 170.5713 l
560.3975 170.3311 l
558.4775 171.0518 l
558.2373 172.0117 l
557.2773 174.4121 l
557.0371 174.6523 l
556.7969 174.8926 l
556.5576 175.3721 l
555.8379 175.3721 l
555.3574 175.3721 l
555.1172 175.3721 l
554.3975 174.8926 l
554.3975 174.6523 l
554.3975 172.4922 l
554.877 171.0518 l
554.877 170.8115 l
554.877 170.5713 l
554.877 170.3311 l
554.1572 167.9316 l
552.7168 166.251 l
551.998 167.2109 l
551.2773 167.2109 l
551.0371 167.2109 l
550.5576 166.7314 l
550.5576 166.4902 l
550.7969 165.29 l
550.7969 165.0508 l
551.0371 165.0508 l
552.957 162.8896 l
554.1572 155.9297 l
551.998 155.9297 l
544.5576 153.2891 l
544.3174 153.0488 l
543.5977 150.4082 l
539.5176 148.0078 l
536.1572 147.0479 l
535.1973 146.3271 l
532.7969 144.4072 l
527.998 146.3271 l
525.8379 146.5684 l
522.4775 147.2881 l
515.2773 143.9268 l
514.7969 150.6484 l
513.8379 160.0098 l
513.5977 161.9307 l
512.877 170.0908 l
512.877 170.5713 l
511.6777 172.7314 l
511.4375 172.9717 l
511.1982 173.2119 l
510.957 173.4521 l
510.957 174.1719 l
510.7178 176.5723 l
510.957 178.0127 l
510.957 178.7324 l
511.918 179.9326 l
512.1582 183.5332 l
512.3975 188.335 l
512.3975 188.5742 l
512.1582 188.8145 l
511.918 188.8145 l
509.7578 189.2939 l
508.0771 189.7744 l
506.3975 190.2539 l
503.5176 190.7354 l
503.5176 190.9746 l
503.5176 191.6943 l
502.5576 191.9355 l
501.8379 192.1748 l
500.3975 192.6553 l
500.3975 192.415 l
499.918 192.6553 l
499.6777 192.6553 l
499.4375 192.6553 l
498.2383 194.5752 l
496.7979 196.9756 l
493.918 201.7764 l
493.4375 202.4971 l
493.1982 202.7363 l
491.0371 206.0977 l
489.1172 208.9775 l
488.6377 209.9375 l
487.6777 211.1377 l
487.1982 212.0977 l
485.7578 214.0186 l
481.1982 216.6582 l
480.957 216.6582 l
479.0371 217.8594 l
478.3184 218.0986 l
474.2383 220.499 l
472.0771 221.6992 l
471.8379 222.1797 l
471.8379 223.3799 l
471.5977 223.8604 l
471.5977 224.0996 l
471.3574 225.0605 l
470.8779 225.54 l
470.3975 225.54 l
469.6777 226.0195 l
469.4385 226.5 l
469.4385 227.2197 l
469.6777 228.1807 l
469.6777 228.9004 l
469.918 229.3809 l
469.6777 229.6201 l
468.2383 233.4609 l
468.7178 234.6611 l
468.958 235.1416 l
469.6777 235.8613 l
470.1572 236.3418 l
470.6377 236.8223 l
469.4385 238.7422 l
469.1982 238.9814 l
469.1982 239.2227 l
469.1982 239.4619 l
470.1572 242.1025 l
470.6377 244.0225 l
470.8779 244.0225 l
470.8779 244.2637 l
470.3975 245.9434 l
470.1572 247.1436 l
469.918 247.8633 l
469.4385 249.5439 l
469.6777 251.9443 l
469.6777 252.6641 l
469.6777 252.9043 l
469.918 254.1045 l
469.6777 254.1045 l
468.4775 253.8643 l
468.2383 253.8643 l
467.7578 253.8643 l
467.0371 253.624 l
466.5576 253.624 l
464.8779 253.3848 l
464.3975 253.3848 l
463.1982 253.1445 l
462.7178 253.1445 l
461.998 252.9043 l
461.0371 252.6641 l
461.0371 255.5449 l
461.0371 258.4258 l
461.0371 258.665 l
461.0371 258.9053 l
461.0371 259.1455 l
461.0371 260.8262 l
461.0371 262.7461 l
461.0371 267.7861 l
461.0371 268.9863 l
461.0371 272.3477 l
461.0371 272.8271 l
461.0371 277.3887 l
461.0371 277.8682 l
461.0371 280.9893 l
461.0371 281.9482 l
461.0371 287.2295 l
452.6377 287.2295 l
445.1982 286.9893 l
440.1572 286.9893 l
439.4385 286.9893 l
438.958 286.749 l
438.4785 286.749 l
437.7578 286.749 l
437.0381 286.749 l
436.7979 286.749 l
436.5576 286.749 l
436.3184 286.749 l
434.3975 286.5098 l
432.2383 286.2695 l
431.5186 286.2695 l
431.0381 286.2695 l
430.7979 286.2695 l
429.3574 286.2695 l
425.7578 286.0293 l
424.5576 286.0293 l
423.8379 286.0293 l
420.958 286.0293 l
419.0381 286.0293 l
418.0781 285.79 l
417.3574 285.79 l
414.958 285.79 l
403.4385 285.5488 l
400.0781 285.3086 l
399.5977 285.3086 l
390.478 285.0693 l
384.2383 284.8291 l
382.0781 284.8291 l
375.3584 284.3486 l
374.8784 288.6699 l
374.1582 288.6699 l
367.1982 288.9102 l
366.7183 288.9102 l
365.7583 288.9102 l
362.8784 288.9102 l
362.3984 288.9102 l
361.4385 288.9102 l
360.2383 288.9102 l
359.2783 288.9102 l
358.0781 288.9102 l
356.3984 288.9102 l
354.2383 289.1504 l
353.9985 289.1504 l
350.8784 289.1504 l
350.3984 289.1504 l
343.9185 289.3896 l
341.7583 289.6299 l
336.7183 289.8701 l
335.5186 289.8701 l
334.7983 289.8701 l
331.9185 289.8701 l
328.7983 289.8701 l
326.8784 289.8701 l
321.1187 290.1104 l
320.1587 290.1104 l
313.6787 290.3496 l
313.1987 290.5898 l
306.2383 290.8301 l
304.7983 290.8301 l
303.1187 291.0703 l
293.2788 291.3105 l
292.3184 291.3105 l
292.0786 291.3105 l
284.6387 291.5508 l
282.9585 291.5508 l
278.6387 291.5508 l
274.7988 291.5508 l
272.1587 291.5508 l
269.0386 291.79 l
268.0786 291.79 l
264.959 291.79 l
258.7188 292.0303 l
252.479 292.2705 l
250.3188 292.2705 l
243.5986 292.5107 l
241.6787 292.5107 l
240.2388 292.5107 l
239.999 292.5107 l
239.7588 292.5107 l
239.2788 292.5107 l
237.8389 292.5107 l
235.6787 292.75 l
229.6787 292.75 l
228.959 292.75 l
227.0391 292.75 l
226.7988 292.75 l
226.3188 292.75 l
225.5991 292.75 l
225.1191 292.75 l
224.8789 292.75 l
220.5591 292.2705 l
218.8789 292.0303 l
216.479 291.79 l
215.999 291.5508 l
214.5591 290.3496 l
213.1191 290.3496 l
212.8789 290.3496 l
209.519 290.3496 l
209.2788 292.0303 l
207.3589 292.2705 l
202.0791 292.5107 l
196.0791 293.2305 l
193.1992 293.71 l
191.999 293.9512 l
191.2793 293.9512 l
191.0391 293.9512 l
190.7993 293.9512 l
190.5591 293.9512 l
187.9189 293.9512 l
187.439 293.9512 l
186.479 293.9512 l
179.999 293.9512 l
179.0391 293.9512 l
178.5591 293.2305 l
179.519 292.75 l
179.7593 292.2705 l
179.2793 291.0703 l
178.5591 289.8701 l
178.5591 289.6299 l
177.8394 290.1104 l
177.5991 289.8701 l
177.5991 289.3896 l
177.5991 289.1504 l
177.8394 288.9102 l
178.0791 288.6699 l
177.8394 287.9492 l
177.3594 287.4697 l
177.3594 286.749 l
176.6392 286.0293 l
176.6392 284.8291 l
175.9189 284.8291 l
174.959 284.5898 l
173.0391 284.3486 l
170.8794 284.1094 l
166.3193 283.6289 l
167.0391 294.1904 l
162.7192 294.4307 l
162.479 294.4307 l
160.3193 294.4307 l
156.959 294.6709 l
144.479 294.9102 l
138.2393 295.1504 l
133.1997 295.3906 l
131.9995 295.3906 l
128.8794 295.3906 l
127.1997 295.6309 l
118.0791 295.8711 l
102.7197 296.8311 l
93.5996 297.3105 l
81.8398 298.0313 l
81.5996 298.0313 l
81.1196 298.0313 l
80.8794 298.0313 l
68.8794 298.9912 l
68.6396 298.9912 l
68.1597 298.9912 l
62.1597 299.2314 l
61.6797 299.2314 l
59.04 299.4717 l
52.3198 299.7109 l
41.52 300.4316 l
41.04 300.4316 l
40.0796 300.4316 l
39.3599 300.4316 l
29.04 300.4316 l
27.1201 300.6719 l
25.9199 306.1924 l
24.96 310.7534 l
27.3599 318.9146 l
27.8398 320.1147 l
30.48 329.4761 l
32.1597 334.7568 l
35.7598 346.5186 l
39.3599 359.2407 l
42 368.1221 l
45.8398 380.8442 l
46.3198 382.2842 l
46.5596 383.2446 l
48.7197 390.6855 l
50.8799 398.127 l
52.5596 403.4077 l
52.7998 404.6079 l
59.2798 426.6914 l
61.6797 434.6123 l
68.1597 455.9756 l
69.3594 460.2964 l
75.1196 479.7393 l
76.5596 484.3003 l
76.7998 485.0205 l
78.4795 491.2612 l
f
611.7568 133.8457 m
612.7168 134.5654 l
616.0771 136.4863 l
622.3164 140.5664 l
623.2773 140.3271 l
623.7568 137.6865 l
625.917 137.2061 l
628.3164 136.7266 l
629.7568 137.4463 l
629.7568 137.6865 l
629.7568 137.4463 l
630.7168 136.9658 l
631.6768 134.5654 l
632.3975 133.3652 l
632.6367 132.6455 l
632.6367 132.4063 l
632.877 130.0059 l
632.3975 126.4053 l
632.877 124.4844 l
633.8369 122.5645 l
634.0771 122.3242 l
635.9971 120.6436 l
637.917 119.4434 l
640.3164 119.2031 l
642.4775 118.2432 l
642.4775 118.0029 l
643.4375 115.8428 l
643.6768 115.123 l
643.6768 114.1621 l
644.1563 113.9229 l
644.3975 113.9229 l
645.5967 113.6826 l
645.8369 113.6826 l
646.0771 113.6826 l
647.2773 114.4023 l
647.9971 115.6025 l
649.6768 118.0029 l
649.4375 120.4033 l
649.4375 120.6436 l
649.4375 120.8838 l
649.917 121.8438 l
651.3564 123.5244 l
654.2363 124.0039 l
655.1973 117.2832 l
654.4775 112.9619 l
654.7168 105.5215 l
654.2363 104.0811 l
650.3975 103.8408 l
644.877 103.3604 l
641.7568 103.6016 l
640.0771 103.8408 l
638.1572 103.8408 l
637.1973 103.8408 l
636.2363 104.0811 l
632.3975 104.0811 l
626.6367 103.8408 l
623.5176 103.8408 l
622.5566 103.8408 l
622.0771 103.8408 l
612.7168 102.8809 l
600.7168 101.6807 l
600.4775 101.6807 l
600.4775 101.4404 l
596.1572 100.2402 l
595.6768 100.001 l
595.4375 100.001 l
592.7969 98.3203 l
590.6367 96.3994 l
589.4375 95.1992 l
588.4775 93.2793 l
588.957 92.5596 l
588.4775 91.1191 l
587.0371 90.3984 l
585.1172 91.5986 l
584.3975 92.0791 l
581.9971 93.5195 l
581.5176 93.7598 l
581.5176 93.999 l
577.917 97.3604 l
575.0371 101.2012 l
573.8379 102.8809 l
574.7969 104.5605 l
576.7168 104.8018 l
579.3574 105.2813 l
581.7568 104.8018 l
582.957 104.3213 l
585.1172 103.1211 l
585.3574 103.1211 l
585.5977 103.1211 l
587.0371 103.6016 l
588.2373 104.8018 l
588.4775 104.8018 l
596.3975 117.043 l
597.3574 117.2832 l
599.9971 120.1641 l
599.9971 121.8438 l
602.1572 126.165 l
605.0371 129.0449 l
611.7568 133.8457 l
f
722.6367 90.1592 m
728.3965 91.1191 l
728.877 91.1191 l
731.0361 91.5986 l
735.1172 94.2393 l
736.7969 96.1602 l
738.4766 97.8398 l
741.3564 102.8809 l
741.8359 108.4023 l
741.3564 110.5615 l
740.3965 111.7617 l
739.6758 112.9619 l
738.2363 114.8828 l
737.2764 116.083 l
737.5166 117.2832 l
740.6367 115.6025 l
743.7559 111.043 l
753.1162 92.5596 l
756.4766 86.3184 l
756.4766 82.4775 l
755.7559 79.8369 l
755.2764 79.1172 l
753.3564 77.6768 l
751.4365 76.957 l
748.0762 75.5166 l
745.1963 75.0361 l
740.6367 75.7568 l
737.2764 76.2363 l
731.9961 76.4775 l
731.0361 76.4775 l
728.1563 75.5166 l
724.0762 75.7568 l
723.5967 75.7568 l
714.2363 78.877 l
712.7969 79.3574 l
706.0762 82.958 l
698.877 86.5586 l
697.6768 87.0391 l
694.7969 87.998 l
692.6367 89.6797 l
691.1973 91.5986 l
690.7168 93.999 l
693.8369 93.999 l
696.2363 92.7988 l
697.1973 92.0791 l
698.1563 90.1592 l
699.3564 89.4395 l
700.3164 88.7188 l
704.6367 88.7188 l
707.2764 89.9189 l
722.1563 89.9189 l
722.6367 90.1592 l
f
574.7969 174.1719 m
576.4775 172.0117 l
576.957 169.1309 l
576.957 168.1709 l
576.7168 167.9316 l
576.7168 167.6904 l
576.7168 167.9316 l
575.2773 168.4111 l
575.0371 168.4111 l
575.0371 168.6514 l
573.5977 171.291 l
573.3574 171.5313 l
574.5566 173.9316 l
574.5566 174.4121 l
574.7969 174.1719 l
f
*U
0 R
0.3412 0.5608 1 0 K
78.4795 491.2612 m
82.5596 491.0215 l
88.7998 490.7813 l
89.2793 490.7813 l
99.1196 490.3013 l
103.4395 490.061 l
107.0396 489.8213 l
109.9194 489.8213 l
113.9995 489.5811 l
117.5996 489.3408 l
117.8394 489.3408 l
119.7593 489.3408 l
122.6392 489.1011 l
127.6792 488.8608 l
128.3994 488.8608 l
146.3994 488.1406 l
147.1196 487.9009 l
159.8394 487.4209 l
164.6392 487.1807 l
171.1191 486.9404 l
174.7192 486.7007 l
176.6392 486.7007 l
177.1191 486.7007 l
195.8389 485.7402 l
198.2393 485.5005 l
209.999 485.0205 l
213.5991 484.7803 l
219.5991 484.54 l
220.3188 484.3003 l
230.3989 483.8203 l
242.1587 483.3398 l
243.5986 483.3398 l
246.2388 483.1001 l
248.1587 483.1001 l
250.7988 482.8599 l
251.5186 482.8599 l
260.3989 482.3799 l
266.6387 482.1396 l
269.0386 481.8999 l
275.9985 481.6597 l
277.1987 481.4199 l
277.4385 481.4199 l
277.6787 481.4199 l
293.7588 480.6997 l
305.7588 480.2197 l
309.8384 480.2197 l
312.7188 479.9795 l
317.0386 479.7393 l
319.1982 479.7393 l
319.4385 479.7393 l
331.9185 479.0195 l
338.8784 478.7793 l
344.1582 478.5391 l
349.6782 478.2993 l
355.6782 478.0591 l
356.1582 478.0591 l
370.7983 477.5791 l
371.0381 477.5791 l
374.6382 477.3389 l
379.1982 477.0991 l
381.3584 477.0991 l
382.0781 477.0991 l
386.8779 476.8589 l
390.7183 476.8589 l
395.7583 476.6191 l
401.7578 476.3789 l
402.2383 476.3789 l
405.8379 476.3789 l
408.958 476.1387 l
409.918 476.1387 l
410.1582 476.1387 l
412.3184 476.1387 l
423.1182 475.6587 l
425.998 475.6587 l
427.1982 475.6587 l
427.6777 475.6587 l
427.918 475.6587 l
428.1582 475.6587 l
432.2383 475.4189 l
437.998 475.1787 l
438.4785 475.1787 l
439.1982 475.1787 l
439.4385 475.1787 l
439.6777 475.1787 l
443.2773 475.1787 l
445.1982 474.9385 l
446.8779 474.9385 l
450.4785 474.9385 l
452.8779 474.6987 l
459.3574 474.4585 l
459.5977 474.4585 l
463.1982 474.4585 l
463.6777 474.4585 l
464.1572 474.4585 l
466.7979 474.2188 l
468.2383 474.2188 l
471.1172 473.9785 l
473.998 473.9785 l
474.7178 473.9785 l
478.5576 473.9785 l
479.5176 475.4189 l
481.4375 478.0591 l
482.1572 479.2593 l
483.8379 481.8999 l
486.2383 484.7803 l
486.2383 485.0205 l
488.3975 486.7007 l
490.7979 487.4209 l
492.7178 487.6606 l
494.1572 487.4209 l
495.8379 486.9404 l
497.5176 486.4604 l
498.2383 486.2207 l
498.7178 485.9805 l
501.3574 485.2603 l
501.1172 489.1011 l
500.877 489.5811 l
500.6377 492.9414 l
500.3975 499.9028 l
500.6377 500.3828 l
501.1172 500.8628 l
501.8379 501.8228 l
502.7979 503.0229 l
503.998 504.4634 l
504.2383 504.7031 l
504.4775 504.9434 l
507.5977 506.8638 l
508.0771 506.8638 l
511.1982 508.3037 l
514.5576 507.3438 l
517.4375 506.6235 l
519.5977 505.9033 l
522.2373 505.1836 l
524.877 504.4634 l
525.1172 504.2231 l
527.0371 511.6646 l
528.2373 514.7852 l
528.957 515.9854 l
530.877 518.1455 l
531.5977 518.8657 l
537.1172 520.0659 l
538.5576 520.3057 l
539.998 520.7856 l
543.1172 521.2661 l
544.7969 521.7461 l
545.5176 522.2261 l
546.957 522.9463 l
548.1572 523.666 l
551.7568 525.8267 l
551.998 526.0664 l
552.4775 526.3066 l
555.1172 526.5469 l
557.5176 526.5469 l
560.877 525.5864 l
561.3574 525.1064 l
563.5176 523.4263 l
568.3174 519.8257 l
568.5566 519.5854 l
570.957 520.7856 l
572.1572 521.7461 l
573.3574 522.4663 l
573.5977 522.4663 l
574.0771 522.7061 l
575.0371 522.7061 l
574.7969 516.9453 l
575.2773 514.7852 l
575.5176 512.3848 l
575.7568 510.4644 l
576.2373 508.064 l
576.4775 506.1436 l
577.6768 497.9824 l
579.8379 489.3408 l
580.0771 488.3809 l
581.9971 484.0601 l
584.3975 478.5391 l
584.877 476.8589 l
583.1973 474.9385 l
583.1973 473.9785 l
583.1973 473.7388 l
586.0771 471.5781 l
589.1973 471.0981 l
590.1572 470.6182 l
593.0371 467.2573 l
593.2773 465.5771 l
593.7568 465.3374 l
601.4375 462.6968 l
602.3975 462.937 l
602.877 463.1768 l
602.877 465.3374 l
604.7969 467.4976 l
606.4775 469.418 l
610.3164 472.7783 l
611.2773 473.0186 l
613.4375 473.7388 l
615.3564 472.5386 l
614.877 469.1777 l
614.6367 466.7773 l
614.6367 466.5376 l
614.6367 466.2974 l
614.877 464.8574 l
615.1172 464.8574 l
615.3564 464.6172 l
616.5566 464.1372 l
617.9971 464.377 l
619.6768 464.6172 l
620.1572 464.8574 l
620.3975 464.8574 l
621.3564 461.7368 l
621.3564 459.3364 l
620.877 457.896 l
620.1572 457.896 l
618.4775 457.896 l
615.8369 456.2158 l
615.8369 455.9756 l
615.8369 455.7358 l
615.5977 455.4956 l
614.3975 452.375 l
613.6768 450.6948 l
612.4775 448.2944 l
608.6367 443.2539 l
606.4775 442.7739 l
605.9971 443.0137 l
605.9971 443.9741 l
605.7568 445.1743 l
605.5176 445.894 l
605.0371 446.6143 l
604.5566 446.6143 l
604.3174 446.6143 l
603.5977 446.6143 l
603.1172 446.1343 l
602.6367 444.9341 l
601.917 444.2139 l
599.7568 441.8135 l
595.917 440.8535 l
593.5176 440.1333 l
591.8379 441.5737 l
587.7568 439.8936 l
587.0371 439.6533 l
583.917 438.6934 l
580.3174 437.7329 l
578.3975 437.2529 l
575.9971 435.3325 l
574.3174 434.3726 l
569.2773 434.1323 l
567.3574 433.6523 l
566.877 433.4121 l
564.957 432.9321 l
564.7168 432.9321 l
564.4775 432.6924 l
564.4775 431.9722 l
564.4775 431.4922 l
564.7168 431.252 l
565.6768 426.6914 l
565.6768 426.4512 l
567.1172 425.9712 l
567.5977 426.2109 l
569.0371 425.9712 l
570.7168 425.731 l
571.1973 424.771 l
571.918 423.3306 l
572.877 421.1704 l
571.918 417.5698 l
570.7168 416.8496 l
569.5176 417.8101 l
567.5977 417.5698 l
566.877 417.0898 l
564.957 415.8896 l
563.0371 414.4492 l
561.8379 412.0488 l
561.5977 412.0488 l
561.3574 411.3291 l
561.3574 411.0889 l
561.5977 410.6089 l
560.1572 409.4087 l
558.4775 410.3687 l
557.2773 411.0889 l
557.0371 411.0889 l
555.3574 411.3291 l
554.3975 411.0889 l
553.1973 409.6484 l
552.7168 409.4087 l
551.7568 408.4482 l
551.7568 408.2085 l
551.998 404.8477 l
552.2373 402.9277 l
553.1973 401.2471 l
553.6768 401.0073 l
556.3174 400.2871 l
557.2773 399.5669 l
558.7168 398.127 l
557.998 397.1665 l
557.0371 397.1665 l
554.3975 397.4067 l
551.5176 397.6465 l
550.7969 400.2871 l
550.0771 402.6875 l
550.0771 407.0083 l
549.3574 407.9683 l
549.1172 407.7285 l
546.7168 405.3281 l
546.7168 404.6079 l
546.7168 403.8877 l
545.0371 402.2075 l
542.1572 399.0869 l
541.918 398.8467 l
541.4375 397.4067 l
541.1973 397.1665 l
540.4775 394.5264 l
540.957 393.3262 l
541.1973 393.0859 l
541.6768 393.0859 l
541.918 391.646 l
542.1572 391.4058 l
542.6367 390.2056 l
543.5977 389.9653 l
544.3174 389.7256 l
544.7969 389.2456 l
544.5576 389.0054 l
544.3174 388.5254 l
544.3174 387.5654 l
544.3174 387.3252 l
544.3174 386.3652 l
544.7969 385.645 l
545.2773 384.6846 l
545.5176 383.9648 l
546.7168 381.8042 l
548.3975 378.6836 l
548.3975 377.2437 l
546.2373 377.9639 l
544.3174 379.8838 l
543.8379 380.3643 l
542.877 380.604 l
542.3975 380.3643 l
539.0371 379.4038 l
537.3574 377.9639 l
537.1172 376.7637 l
535.918 372.9229 l
535.6768 372.2026 l
536.1572 369.3223 l
537.8379 366.9219 l
538.5576 365.7217 l
538.3174 364.2817 l
537.8379 362.1211 l
537.5977 361.6411 l
537.8379 360.9209 l
537.8379 360.6812 l
537.8379 360.2012 l
538.3174 359.481 l
539.0371 358.2808 l
539.7568 357.0806 l
540.7168 356.3604 l
540.957 356.3604 l
541.1973 356.1201 l
543.5977 356.1201 l
545.5176 356.3604 l
547.6768 356.8403 l
549.3574 357.5605 l
550.0771 356.6006 l
551.2773 355.6401 l
551.5176 355.6401 l
551.998 355.1602 l
554.6367 354.9199 l
557.0371 355.6401 l
557.998 357.3203 l
560.1572 360.9209 l
560.1572 361.6411 l
560.1572 361.8813 l
560.1572 363.0815 l
560.1572 363.3213 l
559.918 364.0415 l
556.0771 365.7217 l
555.5977 366.6821 l
557.7568 367.1621 l
562.7969 367.6421 l
563.0371 366.4419 l
563.0371 365.2417 l
563.5176 364.5215 l
563.9971 363.5615 l
564.2373 363.0815 l
564.957 361.6411 l
565.1973 361.1611 l
565.918 360.2012 l
567.1172 358.5205 l
568.0771 357.5605 l
569.2773 356.3604 l
573.3574 356.3604 l
574.7969 355.8804 l
577.4375 355.1602 l
581.5176 353 l
582.2373 352.5195 l
583.6768 352.0396 l
585.8379 351.3193 l
587.0371 349.8794 l
589.1973 345.7988 l
590.3975 344.3584 l
590.6367 343.8784 l
591.1172 343.3984 l
593.0371 341.958 l
593.2773 341.7183 l
594.2373 340.7578 l
595.917 340.0376 l
596.1572 338.1177 l
596.6367 333.7969 l
596.6367 333.5566 l
597.5977 329.2363 l
597.8369 328.9961 l
599.2773 327.7959 l
603.5977 319.3945 l
604.7969 317.7144 l
608.1572 312.6733 l
608.877 311.9536 l
612.957 307.3926 l
613.4375 305.4727 l
612.2373 304.5117 l
611.5176 304.0322 l
611.5176 303.0723 l
611.2773 301.8721 l
612.4775 297.0713 l
612.2373 295.6309 l
611.0371 295.6309 l
610.7969 295.6309 l
607.1973 293.2305 l
606.7168 289.8701 l
606.7168 289.6299 l
606.7168 289.3896 l
606.7168 288.9102 l
607.6768 286.2695 l
606.957 285.0693 l
605.2773 284.3486 l
603.5977 286.5098 l
601.6768 286.5098 l
598.3174 284.8291 l
598.5566 283.6289 l
598.7969 282.6689 l
599.0371 282.4287 l
601.1973 279.3086 l
602.3975 278.1084 l
606.4775 274.2676 l
608.1572 272.5879 l
608.6367 272.1074 l
609.8369 271.8672 l
611.0371 271.627 l
611.5176 272.3477 l
611.7568 272.3477 l
612.957 271.3867 l
614.6367 269.707 l
615.1172 269.4668 l
616.7969 267.3066 l
618.2373 266.5859 l
619.917 266.8271 l
622.0771 268.7461 l
624.957 269.2266 l
625.917 268.5068 l
629.9971 265.1465 l
630.957 264.1855 l
631.4375 263.7061 l
632.1572 261.7852 l
632.6367 260.3447 l
632.6367 258.9053 l
632.6367 258.4258 l
632.877 257.7051 l
635.2773 253.624 l
635.7568 252.9043 l
636.2363 249.7832 l
637.1973 244.2637 l
635.2773 239.2227 l
635.2773 238.9814 l
633.8369 236.8223 l
633.5977 234.9014 l
634.0771 232.501 l
635.0371 231.0605 l
635.9971 229.3809 l
638.6367 226.2607 l
639.1172 225.7803 l
643.4375 221.6992 l
643.917 220.9795 l
644.3975 220.7393 l
646.0771 219.5391 l
646.3164 219.5391 l
647.7568 218.3389 l
647.9971 218.0986 l
648.7168 217.6191 l
653.5176 215.9385 l
657.5967 214.2578 l
660.957 213.0576 l
666.957 212.0977 l
667.4375 211.8574 l
668.6367 211.6182 l
670.0762 211.6182 l
679.917 211.1377 l
685.917 210.6572 l
686.3965 210.418 l
689.0361 208.7373 l
689.2773 208.498 l
689.5166 208.0176 l
689.7568 207.2979 l
691.6768 205.1367 l
692.1563 205.1367 l
692.6367 205.1367 l
692.877 205.6172 l
694.0762 207.0566 l
695.0361 208.0176 l
695.9961 208.9775 l
697.1973 210.418 l
697.4365 210.6572 l
699.5967 212.0977 l
700.3164 212.5781 l
701.2773 213.2979 l
706.7969 215.9385 l
708.2363 215.6982 l
708.4766 215.6982 l
709.6768 215.9385 l
713.0361 217.1387 l
716.6367 218.3389 l
719.2764 218.0986 l
720.4766 218.0986 l
720.7168 218.0986 l
722.1563 218.5791 l
723.3564 219.0596 l
724.7969 219.7793 l
725.5166 220.0186 l
725.9961 220.2598 l
727.916 220.7393 l
728.877 220.9795 l
731.7559 221.9395 l
731.9961 221.9395 l
732.2363 221.9395 l
732.4766 221.9395 l
733.1963 222.4189 l
735.8359 223.8604 l
736.7969 224.0996 l
738.9561 225.2998 l
740.6367 226.2607 l
740.877 226.5 l
741.1162 226.7402 l
743.5166 229.6201 l
743.7559 229.8604 l
744.7168 232.0215 l
744.7168 233.9414 l
744.4766 240.4229 l
743.9961 244.0225 l
743.7559 247.3828 l
743.2764 250.7441 l
743.9961 251.9443 l
745.1963 253.624 l
744.4766 254.585 l
742.5566 254.8242 l
740.1563 256.7451 l
739.916 258.1855 l
739.916 260.3447 l
738.7168 264.666 l
738.7168 265.1465 l
735.8359 265.3857 l
733.916 264.666 l
731.5166 260.3447 l
731.5166 256.9854 l
731.7559 255.7852 l
731.7559 253.624 l
731.7559 253.3848 l
731.9961 251.2236 l
731.7559 250.7441 l
731.2764 250.9844 l
730.5566 252.4238 l
730.0762 256.9854 l
729.8359 267.5469 l
729.3564 272.8271 l
728.877 280.5088 l
728.3965 282.1895 l
727.4365 287.2295 l
727.4365 287.71 l
726.2363 291.3105 l
724.7969 293.4707 l
722.1563 296.3516 l
719.0361 298.5107 l
714.2363 301.1523 l
713.9961 301.3916 l
712.5566 301.3916 l
709.4365 300.6719 l
707.9961 299.9521 l
707.7568 299.7109 l
706.3164 298.2715 l
706.0762 298.0313 l
705.3564 296.5908 l
704.6367 294.9102 l
704.3965 293.9512 l
704.3965 293.4707 l
704.877 291.79 l
706.3164 290.1104 l
706.3164 289.6299 l
705.3564 289.6299 l
704.1563 290.3496 l
701.7568 292.5107 l
699.5967 296.5908 l
696.4766 299.9521 l
695.2773 300.6719 l
694.3164 300.6719 l
694.0762 301.6318 l
695.5166 304.0322 l
697.916 305.7124 l
701.7568 306.6729 l
705.3564 306.9126 l
711.3564 305.9526 l
712.5566 305.4727 l
720.4766 303.0723 l
727.4365 299.4717 l
732.4766 295.6309 l
733.6768 294.4307 l
737.5166 289.8701 l
737.7559 289.6299 l
737.7559 289.3896 l
740.1563 285.3086 l
742.3164 281.9482 l
745.4365 275.708 l
747.8359 270.9072 l
748.3164 269.4668 l
751.4365 260.585 l
754.0762 251.9443 l
755.5166 246.1826 l
756.7168 242.3428 l
758.6357 232.7412 l
758.6357 232.501 l
759.8359 222.4189 l
759.8359 221.9395 l
760.5566 213.7783 l
760.7969 209.9375 l
760.7969 208.7373 l
761.0361 200.0957 l
760.3164 196.2559 l
760.0762 194.335 l
758.1563 189.7744 l
757.6758 188.335 l
757.1963 187.374 l
756.7168 186.6533 l
756.4766 186.1738 l
756.2363 185.9346 l
755.2764 185.6934 l
755.0361 185.6934 l
754.0762 184.0137 l
753.1162 182.334 l
751.4365 175.8525 l
750.2363 169.8516 l
749.2764 162.6504 l
749.2764 162.4102 l
749.2764 162.1699 l
747.3564 159.29 l
745.916 158.8096 l
744.4766 159.0498 l
743.7559 159.7695 l
743.2764 160.9697 l
743.7559 161.6895 l
744.2363 161.6895 l
744.7168 161.6895 l
746.3965 164.3311 l
747.8359 168.4111 l
748.3164 171.7715 l
749.2764 177.0527 l
749.9961 179.4531 l
749.9961 179.6934 l
750.4766 181.373 l
750.7168 182.0938 l
751.1963 183.5332 l
751.916 185.9346 l
751.916 186.1738 l
751.916 187.6143 l
751.4365 189.5352 l
750.2363 190.4941 l
747.1162 193.1348 l
746.1563 193.6152 l
744.7168 194.335 l
743.5166 194.335 l
743.2764 194.335 l
740.1563 193.1348 l
738.4766 192.8945 l
734.877 192.415 l
732.9561 192.1748 l
728.3965 191.6943 l
727.916 191.6943 l
721.916 189.7744 l
721.1973 189.2939 l
719.2764 188.8145 l
717.3564 188.0938 l
715.4365 188.0938 l
713.7568 188.0938 l
713.5166 188.0938 l
706.7969 186.4141 l
706.3164 186.1738 l
701.0361 184.0137 l
697.916 182.5732 l
695.7568 181.6133 l
693.5967 179.4531 l
693.8369 178.7324 l
692.877 176.8125 l
691.6768 176.332 l
691.1973 176.8125 l
690.7168 178.7324 l
690.9561 180.8936 l
690.4766 181.373 l
689.7568 182.8135 l
688.3164 183.5332 l
686.3965 183.5332 l
683.2773 182.8135 l
679.917 182.0938 l
678.2363 183.0527 l
677.7568 183.2939 l
677.5166 183.2939 l
676.5566 183.5332 l
673.917 183.0527 l
671.9971 182.0938 l
671.0361 180.8936 l
671.0361 180.1729 l
671.0361 179.9326 l
670.0762 177.7725 l
668.1563 176.5723 l
663.8369 175.1318 l
663.5967 175.1318 l
662.6367 175.3721 l
662.1563 175.3721 l
661.6768 175.3721 l
661.4375 175.3721 l
657.1172 174.8926 l
656.1563 174.8926 l
654.7168 171.0518 l
653.9971 170.0908 l
653.5176 169.1309 l
651.8369 166.4902 l
651.8369 166.0107 l
651.3564 165.5313 l
651.1172 165.29 l
650.877 165.0508 l
649.6768 163.3701 l
649.4375 163.1309 l
648.2363 161.9307 l
646.5566 160.7305 l
646.3164 160.7305 l
646.3164 160.4893 l
644.877 160.0098 l
643.4375 159.7695 l
638.877 159.0498 l
637.6768 159.0498 l
636.957 159.0498 l
633.5977 158.8096 l
631.1973 158.8096 l
630.957 158.8096 l
628.7969 158.5693 l
628.0771 158.3301 l
626.6367 158.0898 l
625.1973 157.8496 l
624.957 157.8496 l
623.9971 157.8496 l
623.5176 157.6094 l
621.3564 157.3691 l
620.3975 157.1289 l
619.6768 156.8896 l
619.4375 156.8896 l
618.957 156.8896 l
617.9971 156.6494 l
615.8369 155.9297 l
614.1572 154.4893 l
613.917 154.249 l
613.6768 154.249 l
613.4375 153.7686 l
613.1973 153.0488 l
611.7568 150.6484 l
610.5566 149.9277 l
609.5977 149.208 l
608.3975 148.9688 l
607.1973 148.7275 l
601.1973 144.4072 l
595.1973 141.2871 l
590.3975 136.7266 l
590.6367 135.7656 l
589.6768 134.3262 l
583.6768 130.2451 l
577.917 130.0059 l
574.3174 129.0449 l
571.4375 126.165 l
569.7568 124.4844 l
567.8379 123.5244 l
563.0371 123.2842 l
560.3975 123.0439 l
555.1172 121.6035 l
553.1973 120.4033 l
551.0371 119.9238 l
550.3174 120.4033 l
550.5576 121.6035 l
555.1172 125.9248 l
556.0771 125.6846 l
557.0371 124.2441 l
558.4775 124.0039 l
559.6768 124.4844 l
564.4775 126.165 l
570.2373 130.9648 l
575.7568 132.8857 l
581.2773 134.3262 l
584.1572 138.166 l
586.7969 138.8867 l
591.1172 142.9678 l
592.7969 145.3682 l
603.1172 152.3281 l
604.7969 153.2891 l
605.9971 154.0088 l
608.877 156.1689 l
609.3564 156.4092 l
610.0771 156.8896 l
610.3164 156.8896 l
610.5566 157.1289 l
611.0371 157.8496 l
611.5176 159.0498 l
611.2773 161.21 l
611.5176 163.1309 l
612.7168 164.5703 l
613.917 165.29 l
613.917 165.7715 l
614.1572 166.4902 l
614.1572 166.7314 l
613.917 168.1709 l
613.917 168.4111 l
612.957 171.0518 l
612.4775 172.0117 l
611.7568 174.1719 l
611.7568 174.6523 l
611.7568 175.6123 l
612.957 177.5322 l
613.917 178.9727 l
614.1572 179.4531 l
614.3975 179.6934 l
613.4375 181.8525 l
613.1973 182.0938 l
612.957 182.0938 l
611.7568 183.2939 l
611.9971 184.7344 l
611.9971 184.9736 l
613.1973 185.6934 l
614.1572 186.4141 l
614.3975 186.4141 l
614.6367 187.8535 l
614.3975 188.8145 l
613.1973 192.8945 l
612.7168 194.335 l
612.2373 195.0557 l
609.5977 195.2949 l
612.957 198.6563 l
617.0371 200.0957 l
617.2773 200.8164 l
617.2773 201.0566 l
617.5176 202.4971 l
616.7969 203.9365 l
616.0771 204.417 l
613.4375 205.377 l
612.957 205.6172 l
611.7568 204.6563 l
610.5566 204.6563 l
607.6768 206.3369 l
605.7568 207.0566 l
605.2773 207.0566 l
603.8369 207.5371 l
599.9971 208.7373 l
598.0771 209.6982 l
597.8369 210.1777 l
596.6367 209.457 l
596.1572 209.2178 l
595.6768 207.0566 l
595.6768 206.5771 l
597.3574 203.6973 l
598.0771 198.6563 l
597.5977 196.0156 l
595.6768 196.9756 l
592.7969 199.1357 l
592.5566 199.376 l
590.877 198.8965 l
590.3975 198.6563 l
590.1572 198.416 l
590.1572 198.1758 l
590.1572 197.9355 l
589.917 196.9756 l
588.957 193.8555 l
588.957 193.6152 l
588.957 191.2148 l
589.6768 189.5352 l
589.917 187.6143 l
588.2373 184.0137 l
587.5176 184.0137 l
586.5566 184.9736 l
586.0771 186.1738 l
586.0771 186.6533 l
585.5977 186.6533 l
583.4375 187.1348 l
580.7969 187.8535 l
579.3574 188.0938 l
578.6367 187.8535 l
578.3975 187.8535 l
577.917 187.1348 l
577.917 185.2139 l
580.3174 183.7734 l
580.7969 182.5732 l
581.2773 181.373 l
581.0371 180.6533 l
580.7969 180.6533 l
579.1172 179.4531 l
573.8379 179.2129 l
572.1572 180.4131 l
570.4775 179.9326 l
569.9971 179.2129 l
569.7568 179.2129 l
569.9971 178.0127 l
570.2373 176.332 l
570.957 170.8115 l
570.957 170.5713 l
570.2373 168.8906 l
569.5176 169.1309 l
569.0371 170.3311 l
568.7969 170.8115 l
568.5566 172.0117 l
567.1172 176.332 l
567.1172 176.5723 l
567.1172 176.8125 l
567.1172 177.7725 l
567.1172 178.7324 l
566.877 179.4531 l
566.1572 180.1729 l
565.1973 180.6533 l
564.2373 180.8936 l
562.7969 181.373 l
561.5977 180.4131 l
559.6768 178.9727 l
559.4375 178.9727 l
557.7568 177.7725 l
558.2373 177.293 l
558.4775 176.8125 l
559.1973 176.0928 l
559.4375 175.6123 l
559.6768 175.1318 l
559.918 174.1719 l
560.6367 170.5713 l
560.3975 170.3311 l
558.4775 171.0518 l
558.2373 172.0117 l
557.2773 174.4121 l
557.0371 174.6523 l
556.7969 174.8926 l
556.5576 175.3721 l
555.8379 175.3721 l
555.3574 175.3721 l
555.1172 175.3721 l
554.3975 174.8926 l
554.3975 174.6523 l
554.3975 172.4922 l
554.877 171.0518 l
554.877 170.8115 l
554.877 170.5713 l
554.877 170.3311 l
554.1572 167.9316 l
552.7168 166.251 l
551.998 167.2109 l
551.2773 167.2109 l
551.0371 167.2109 l
550.5576 166.7314 l
550.5576 166.4902 l
550.7969 165.29 l
550.7969 165.0508 l
551.0371 165.0508 l
552.957 162.8896 l
554.1572 155.9297 l
551.998 155.9297 l
544.5576 153.2891 l
544.3174 153.0488 l
543.5977 150.4082 l
539.5176 148.0078 l
536.1572 147.0479 l
535.1973 146.3271 l
532.7969 144.4072 l
527.998 146.3271 l
525.8379 146.5684 l
522.4775 147.2881 l
515.2773 143.9268 l
514.7969 150.6484 l
513.8379 160.0098 l
513.5977 161.9307 l
512.877 170.0908 l
512.877 170.5713 l
511.6777 172.7314 l
511.4375 172.9717 l
511.1982 173.2119 l
510.957 173.4521 l
510.957 174.1719 l
510.7178 176.5723 l
510.957 178.0127 l
510.957 178.7324 l
511.918 179.9326 l
512.1582 183.5332 l
512.3975 188.335 l
512.3975 188.5742 l
512.1582 188.8145 l
511.918 188.8145 l
509.7578 189.2939 l
508.0771 189.7744 l
506.3975 190.2539 l
503.5176 190.7354 l
503.5176 190.9746 l
503.5176 191.6943 l
502.5576 191.9355 l
501.8379 192.1748 l
500.3975 192.6553 l
500.3975 192.415 l
499.918 192.6553 l
499.6777 192.6553 l
499.4375 192.6553 l
498.2383 194.5752 l
496.7979 196.9756 l
493.918 201.7764 l
493.4375 202.4971 l
493.1982 202.7363 l
491.0371 206.0977 l
489.1172 208.9775 l
488.6377 209.9375 l
487.6777 211.1377 l
487.1982 212.0977 l
485.7578 214.0186 l
481.1982 216.6582 l
480.957 216.6582 l
479.0371 217.8594 l
478.3184 218.0986 l
474.2383 220.499 l
472.0771 221.6992 l
S
472.0771 221.6992 m
471.8379 222.1797 l
471.8379 223.3799 l
471.5977 223.8604 l
471.5977 224.0996 l
471.3574 225.0605 l
470.8779 225.54 l
470.3975 225.54 l
469.6777 226.0195 l
469.4385 226.5 l
469.4385 227.2197 l
469.6777 228.1807 l
469.6777 228.9004 l
469.918 229.3809 l
469.6777 229.6201 l
468.2383 233.4609 l
468.7178 234.6611 l
468.958 235.1416 l
469.6777 235.8613 l
470.1572 236.3418 l
470.6377 236.8223 l
469.4385 238.7422 l
469.1982 238.9814 l
469.1982 239.2227 l
469.1982 239.4619 l
470.1572 242.1025 l
470.6377 244.0225 l
470.8779 244.0225 l
470.8779 244.2637 l
470.3975 245.9434 l
470.1572 247.1436 l
469.918 247.8633 l
469.4385 249.5439 l
469.6777 251.9443 l
469.6777 252.6641 l
469.6777 252.9043 l
469.918 254.1045 l
469.6777 254.1045 l
468.4775 253.8643 l
468.2383 253.8643 l
467.7578 253.8643 l
467.0371 253.624 l
466.5576 253.624 l
464.8779 253.3848 l
464.3975 253.3848 l
463.1982 253.1445 l
462.7178 253.1445 l
461.998 252.9043 l
461.0371 252.6641 l
461.0371 255.5449 l
461.0371 258.4258 l
461.0371 258.665 l
461.0371 258.9053 l
461.0371 259.1455 l
461.0371 260.8262 l
461.0371 262.7461 l
461.0371 267.7861 l
461.0371 268.9863 l
461.0371 272.3477 l
461.0371 272.8271 l
461.0371 277.3887 l
461.0371 277.8682 l
461.0371 280.9893 l
461.0371 281.9482 l
461.0371 287.2295 l
452.6377 287.2295 l
445.1982 286.9893 l
440.1572 286.9893 l
439.4385 286.9893 l
438.958 286.749 l
438.4785 286.749 l
437.7578 286.749 l
437.0381 286.749 l
436.7979 286.749 l
436.5576 286.749 l
436.3184 286.749 l
434.3975 286.5098 l
432.2383 286.2695 l
431.5186 286.2695 l
431.0381 286.2695 l
430.7979 286.2695 l
429.3574 286.2695 l
425.7578 286.0293 l
424.5576 286.0293 l
423.8379 286.0293 l
420.958 286.0293 l
419.0381 286.0293 l
418.0781 285.79 l
417.3574 285.79 l
414.958 285.79 l
403.4385 285.5488 l
400.0781 285.3086 l
399.5977 285.3086 l
390.478 285.0693 l
384.2383 284.8291 l
382.0781 284.8291 l
375.3584 284.3486 l
374.8784 288.6699 l
374.1582 288.6699 l
367.1982 288.9102 l
366.7183 288.9102 l
365.7583 288.9102 l
362.8784 288.9102 l
362.3984 288.9102 l
361.4385 288.9102 l
360.2383 288.9102 l
359.2783 288.9102 l
358.0781 288.9102 l
356.3984 288.9102 l
354.2383 289.1504 l
353.9985 289.1504 l
350.8784 289.1504 l
350.3984 289.1504 l
343.9185 289.3896 l
341.7583 289.6299 l
336.7183 289.8701 l
335.5186 289.8701 l
334.7983 289.8701 l
331.9185 289.8701 l
328.7983 289.8701 l
326.8784 289.8701 l
321.1187 290.1104 l
320.1587 290.1104 l
313.6787 290.3496 l
313.1987 290.5898 l
306.2383 290.8301 l
304.7983 290.8301 l
303.1187 291.0703 l
293.2788 291.3105 l
292.3184 291.3105 l
292.0786 291.3105 l
284.6387 291.5508 l
282.9585 291.5508 l
278.6387 291.5508 l
274.7988 291.5508 l
272.1587 291.5508 l
269.0386 291.79 l
268.0786 291.79 l
264.959 291.79 l
258.7188 292.0303 l
252.479 292.2705 l
250.3188 292.2705 l
243.5986 292.5107 l
241.6787 292.5107 l
240.2388 292.5107 l
239.999 292.5107 l
239.7588 292.5107 l
239.2788 292.5107 l
237.8389 292.5107 l
235.6787 292.75 l
229.6787 292.75 l
228.959 292.75 l
227.0391 292.75 l
226.7988 292.75 l
226.3188 292.75 l
225.5991 292.75 l
225.1191 292.75 l
224.8789 292.75 l
220.5591 292.2705 l
218.8789 292.0303 l
216.479 291.79 l
215.999 291.5508 l
214.5591 290.3496 l
213.1191 290.3496 l
212.8789 290.3496 l
209.519 290.3496 l
209.2788 292.0303 l
207.3589 292.2705 l
202.0791 292.5107 l
196.0791 293.2305 l
193.1992 293.71 l
191.999 293.9512 l
191.2793 293.9512 l
191.0391 293.9512 l
190.7993 293.9512 l
190.5591 293.9512 l
187.9189 293.9512 l
187.439 293.9512 l
186.479 293.9512 l
179.999 293.9512 l
179.0391 293.9512 l
178.5591 293.2305 l
179.519 292.75 l
179.7593 292.2705 l
179.2793 291.0703 l
178.5591 289.8701 l
178.5591 289.6299 l
177.8394 290.1104 l
177.5991 289.8701 l
177.5991 289.3896 l
177.5991 289.1504 l
177.8394 288.9102 l
178.0791 288.6699 l
177.8394 287.9492 l
177.3594 287.4697 l
177.3594 286.749 l
176.6392 286.0293 l
176.6392 284.8291 l
175.9189 284.8291 l
174.959 284.5898 l
173.0391 284.3486 l
170.8794 284.1094 l
166.3193 283.6289 l
167.0391 294.1904 l
162.7192 294.4307 l
162.479 294.4307 l
160.3193 294.4307 l
156.959 294.6709 l
144.479 294.9102 l
138.2393 295.1504 l
133.1997 295.3906 l
131.9995 295.3906 l
128.8794 295.3906 l
127.1997 295.6309 l
118.0791 295.8711 l
102.7197 296.8311 l
93.5996 297.3105 l
81.8398 298.0313 l
81.5996 298.0313 l
81.1196 298.0313 l
80.8794 298.0313 l
68.8794 298.9912 l
68.6396 298.9912 l
68.1597 298.9912 l
62.1597 299.2314 l
61.6797 299.2314 l
59.04 299.4717 l
52.3198 299.7109 l
41.52 300.4316 l
41.04 300.4316 l
40.0796 300.4316 l
39.3599 300.4316 l
29.04 300.4316 l
27.1201 300.6719 l
25.9199 306.1924 l
24.96 310.7534 l
27.3599 318.9146 l
27.8398 320.1147 l
30.48 329.4761 l
32.1597 334.7568 l
35.7598 346.5186 l
39.3599 359.2407 l
42 368.1221 l
45.8398 380.8442 l
46.3198 382.2842 l
46.5596 383.2446 l
48.7197 390.6855 l
50.8799 398.127 l
52.5596 403.4077 l
52.7998 404.6079 l
59.2798 426.6914 l
61.6797 434.6123 l
68.1597 455.9756 l
69.3594 460.2964 l
75.1196 479.7393 l
76.5596 484.3003 l
76.7998 485.0205 l
78.4795 491.2612 l
S
611.7568 133.8457 m
612.7168 134.5654 l
616.0771 136.4863 l
622.3164 140.5664 l
623.2773 140.3271 l
623.7568 137.6865 l
625.917 137.2061 l
628.3164 136.7266 l
629.7568 137.4463 l
629.7568 137.6865 l
629.7568 137.4463 l
630.7168 136.9658 l
631.6768 134.5654 l
632.3975 133.3652 l
632.6367 132.6455 l
632.6367 132.4063 l
632.877 130.0059 l
632.3975 126.4053 l
632.877 124.4844 l
633.8369 122.5645 l
634.0771 122.3242 l
635.9971 120.6436 l
637.917 119.4434 l
640.3164 119.2031 l
642.4775 118.2432 l
642.4775 118.0029 l
643.4375 115.8428 l
643.6768 115.123 l
643.6768 114.1621 l
644.1563 113.9229 l
644.3975 113.9229 l
645.5967 113.6826 l
645.8369 113.6826 l
646.0771 113.6826 l
647.2773 114.4023 l
647.9971 115.6025 l
649.6768 118.0029 l
649.4375 120.4033 l
649.4375 120.6436 l
649.4375 120.8838 l
649.917 121.8438 l
651.3564 123.5244 l
654.2363 124.0039 l
655.1973 117.2832 l
654.4775 112.9619 l
654.7168 105.5215 l
654.2363 104.0811 l
650.3975 103.8408 l
644.877 103.3604 l
641.7568 103.6016 l
640.0771 103.8408 l
638.1572 103.8408 l
637.1973 103.8408 l
636.2363 104.0811 l
632.3975 104.0811 l
626.6367 103.8408 l
623.5176 103.8408 l
622.5566 103.8408 l
622.0771 103.8408 l
612.7168 102.8809 l
600.7168 101.6807 l
600.4775 101.6807 l
600.4775 101.4404 l
596.1572 100.2402 l
595.6768 100.001 l
595.4375 100.001 l
592.7969 98.3203 l
590.6367 96.3994 l
589.4375 95.1992 l
588.4775 93.2793 l
588.957 92.5596 l
588.4775 91.1191 l
587.0371 90.3984 l
585.1172 91.5986 l
584.3975 92.0791 l
581.9971 93.5195 l
581.5176 93.7598 l
581.5176 93.999 l
577.917 97.3604 l
575.0371 101.2012 l
573.8379 102.8809 l
574.7969 104.5605 l
576.7168 104.8018 l
579.3574 105.2813 l
581.7568 104.8018 l
582.957 104.3213 l
585.1172 103.1211 l
585.3574 103.1211 l
585.5977 103.1211 l
587.0371 103.6016 l
588.2373 104.8018 l
588.4775 104.8018 l
596.3975 117.043 l
597.3574 117.2832 l
599.9971 120.1641 l
599.9971 121.8438 l
602.1572 126.165 l
605.0371 129.0449 l
611.7568 133.8457 l
S
722.6367 90.1592 m
728.3965 91.1191 l
728.877 91.1191 l
731.0361 91.5986 l
735.1172 94.2393 l
736.7969 96.1602 l
738.4766 97.8398 l
741.3564 102.8809 l
741.8359 108.4023 l
741.3564 110.5615 l
740.3965 111.7617 l
739.6758 112.9619 l
738.2363 114.8828 l
737.2764 116.083 l
737.5166 117.2832 l
740.6367 115.6025 l
743.7559 111.043 l
753.1162 92.5596 l
756.4766 86.3184 l
756.4766 82.4775 l
755.7559 79.8369 l
755.2764 79.1172 l
753.3564 77.6768 l
751.4365 76.957 l
748.0762 75.5166 l
745.1963 75.0361 l
740.6367 75.7568 l
737.2764 76.2363 l
731.9961 76.4775 l
731.0361 76.4775 l
728.1563 75.5166 l
724.0762 75.7568 l
723.5967 75.7568 l
714.2363 78.877 l
712.7969 79.3574 l
706.0762 82.958 l
698.877 86.5586 l
697.6768 87.0391 l
694.7969 87.998 l
692.6367 89.6797 l
691.1973 91.5986 l
690.7168 93.999 l
693.8369 93.999 l
696.2363 92.7988 l
697.1973 92.0791 l
698.1563 90.1592 l
699.3564 89.4395 l
700.3164 88.7188 l
704.6367 88.7188 l
707.2764 89.9189 l
722.1563 89.9189 l
722.6367 90.1592 l
S
574.7969 174.1719 m
576.4775 172.0117 l
576.957 169.1309 l
576.957 168.1709 l
576.7168 167.9316 l
576.7168 167.6904 l
576.7168 167.9316 l
575.2773 168.4111 l
575.0371 168.4111 l
575.0371 168.6514 l
573.5977 171.291 l
573.3574 171.5313 l
574.5566 173.9316 l
574.5566 174.4121 l
574.7969 174.1719 l
S
Q
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 100 Lb
(Text) Ln
0 A
q
0 J 0 j 1 w 4 M []0 d0 XR
6.7202 7.1064 m
6.7202 602.8789 l
786.2363 602.8789 l
786.2363 7.1064 l
6.7202 7.1064 l
h
W
n
u
u
0 To
1 0 0 1 215.1992 374.8799 0 Tp
0 Tv
TP
0 Tr
0 O
0 0 0 0.4902 k
/_Arial-BoldItalicMT 23.9962 20.5884 -9.0337 Tf
100 100.016 Tz
0 Tt
0 TV
0 Tc
(\115) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 236.4839 374.8799 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldItalicMT 23.9962 20.5884 -9.0337 Tf
100 100.016 Tz
0 Tt
0 TV
0 Tc
(\141) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 251.3892 374.8799 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldItalicMT 23.9962 20.5884 -9.0337 Tf
100 100.016 Tz
0 Tt
0 TV
0 Tc
(\163) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 266.2944 374.8799 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldItalicMT 23.9962 20.5884 -9.0337 Tf
100 100.016 Tz
0 Tt
0 TV
0 Tc
(\163) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 280.9355 374.8799 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldItalicMT 23.9962 20.5884 -9.0337 Tf
100 100.016 Tz
0 Tt
0 TV
0 Tc
(\141) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 295.8408 374.8799 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldItalicMT 23.9962 20.5884 -9.0337 Tf
100 100.016 Tz
0 Tt
0 TV
0 Tc
(\143) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 310.7461 374.8799 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldItalicMT 23.9962 20.5884 -9.0337 Tf
100 100.016 Tz
0 Tt
0 TV
0 Tc
(\150) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 326.9639 374.8799 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldItalicMT 23.9962 20.5884 -9.0337 Tf
100 100.016 Tz
0 Tt
0 TV
0 Tc
(\165) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 343.1816 374.8799 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldItalicMT 23.9962 20.5884 -9.0337 Tf
100 100.016 Tz
0 Tt
0 TV
0 Tc
(\163) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 358.0869 374.8799 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldItalicMT 23.9962 20.5884 -9.0337 Tf
100 100.016 Tz
0 Tt
0 TV
0 Tc
(\145) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 372.9922 374.8799 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldItalicMT 23.9962 20.5884 -9.0337 Tf
100 100.016 Tz
0 Tt
0 TV
0 Tc
(\164) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 382.2788 374.8799 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldItalicMT 23.9962 20.5884 -9.0337 Tf
100 100.016 Tz
0 Tt
0 TV
0 Tc
(\164) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 391.5654 374.8799 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldItalicMT 23.9962 20.5884 -9.0337 Tf
100 100.016 Tz
0 Tt
0 TV
0 Tc
(\163) Tx 1 0 Tk
TO
U

U

Q
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 100 Lb
(Scale) Ln
0 A
q
0 J 0 j 1 w 4 M []0 d0 XR
791.9961 612 m
791.9961 0 l
0 0 l
0 612 l
791.9961 612 l
h
W
n
0 R
0 0 0 1 K
1 J 1 j 0.96 w 3.85 M54.9595 34.2305 m
54.9595 41.4316 l
S
154.7993 34.2305 m
154.7993 41.4316 l
S
254.3989 34.2305 m
254.3989 41.4316 l
S
79.9199 34.2305 m
79.9199 39.2715 l
S
104.8794 34.2305 m
104.8794 39.2715 l
S
129.8394 34.2305 m
129.8394 39.2715 l
S
179.519 34.2305 m
179.519 39.2715 l
S
204.479 34.2305 m
204.479 39.2715 l
S
229.439 34.2305 m
229.439 39.2715 l
S
54.9595 34.2305 m
254.3989 34.2305 l
S
u
0 To
1 0 0 1 52.1558 46.4736 0 Tp
0 Tv
TP
0 Tr
0 O
0 0 0 1 k
0 J 0 j 1 w 4 M/_ArialMT 10.0816 8.6499 -3.2736 Tf
99.9841 100 Tz
0 Tt
0 TV
0 Tc
(0) Tx 1 0 Tk
TO
U


u
0 To
1 0 0 1 149.1924 46.4736 0 Tp
0 Tv
TP
0 Tr
/_ArialMT 10.0816 8.6499 -3.2736 Tf
99.9841 100 Tz
0 Tt
0 TV
0 Tc
(25) Tx 1 0 Tk
TO
U


u
0 To
1 0 0 1 248.792 46.4736 0 Tp
0 Tv
TP
0 Tr
/_ArialMT 10.0816 8.6499 -3.2736 Tf
99.9841 100 Tz
0 Tt
0 TV
0 Tc
(50) Tx 1 0 Tk
TO
U


u
0 To
1 0 0 1 95.0698 46.4736 0 Tp
0 Tv
TP
0 Tr
/_ArialMT 10.0816 8.6499 -3.2736 Tf
99.9841 100 Tz
0 Tt
0 TV
0 Tc
(12\056\65) Tx 1 0 Tk
TO
U


u
0 To
1 0 0 1 263.0381 46.4736 0 Tp
0 Tv
TP
0 Tr
/_ArialMT 10.0816 8.6499 -3.2736 Tf
99.9841 100 Tz
0 Tt
0 TV
0 Tc
(\115\151\154\145\163) Tx 1 0 Tk
TO
U


Q
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
